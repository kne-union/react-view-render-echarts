{"version":3,"sources":["../../node_modules/echarts/core.js","../../node_modules/echarts/lib/chart/helper/labelHelper.js","../../node_modules/echarts/lib/coord/CoordinateSystem.js","../../node_modules/echarts/lib/chart/helper/createClipPathFromCoordSys.js","../../node_modules/echarts/lib/processor/dataSample.js","../../node_modules/echarts/lib/util/shape/sausage.js","../../node_modules/echarts/lib/chart/bar/BaseBarSeries.js","../../node_modules/echarts/lib/chart/bar/BarSeries.js","../../node_modules/echarts/lib/label/sectorLabel.js","../../node_modules/echarts/lib/chart/bar/BarView.js","../../node_modules/echarts/lib/chart/bar/install.js"],"names":["getDefaultLabel","data","dataIndex","labelDims","mapDimensionsAll","len","length","rawVal","retrieveRawValue","vals","i","push","join","getDefaultInterpolatedLabel","interpolatedValue","isArray","dimIndex","getDimensionIndex","isCoordinateSystemType","coordSys","type","createGridClipPath","cartesian","hasAnimation","seriesModel","done","during","rect","getArea","x","y","width","height","lineWidth","get","Math","floor","round","clipPath","graphic","shape","baseAxis","getBaseAxis","isHorizontal","isAxisInversed","inverse","duringCb","percent","createPolarClipPath","polar","sectorArea","r0","r","cx","cy","startAngle","endAngle","clockwise","dim","createClipPath","samplers","average","frame","sum","count","isNaN","NaN","max","Infinity","isFinite","min","nearest","indexSampler","dataSample","seriesType","reset","ecModel","api","getData","sampling","coordinateSystem","valueAxis","getOtherAxis","extent","getExtent","dpr","getDevicePixelRatio","size","abs","rate","setData","lttbDownSample","mapDimension","sampler","downSample","SausageShape","this","PI","SausagePath","_super","opts","_this","call","__extends","prototype","getDefaultShape","buildPath","ctx","dr","rCenter","unitStartX","cos","unitStartY","sin","unitEndX","unitEndY","moveTo","arc","closePath","Path","BaseBarSeriesModel","apply","arguments","getInitialData","option","createSeriesData","useEncodeDefaulter","getMarkerPosition","value","clampData","pt","dataToPoint","offset","getLayout","defaultOption","zlevel","z","legendHoverLink","barMinHeight","barMinAngle","large","largeThreshold","progressive","progressiveChunkMode","SeriesModel","registerClass","BarSeriesModel","createInvertedIndices","getProgressive","getProgressiveThreshold","progressiveThreshold","brushSelector","selectors","getItemLayout","dependencies","inheritDefaultOption","clip","roundCap","showBackground","backgroundStyle","color","borderColor","borderWidth","borderType","borderRadius","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","opacity","select","itemStyle","realtimeSort","adjustAngleDistanceX","angle","distance","isEnd","adjustAngleDistanceY","_eventPos","mathMax","mathMin","BarView","_isFirstFrame","render","payload","_model","_removeOnRenderedListener","_updateDrawMode","coordinateSystemType","_isLargeDraw","_renderLarge","_renderNormal","incrementalPrepareRender","_clear","_updateLargeClip","incrementalRender","params","_incrementalRenderLarge","isLargeDraw","pipelineContext","isHorizontalOrRadial","group","oldData","_data","coord","animationModel","isAnimationEnabled","realtimeSortCfg","realtimeSortOption","process","otherAxis","shouldRealtimeSort","_enableRealtimeSort","needsClip","coordSysClipArea","onBand","expandWidth","getClipArea","removeClipPath","drawBackground","backgroundModel","getModel","barBorderRadius","bgEls","oldBgEls","_backgroundEls","isInitSort","isChangeOrder","createBackground","bgLayout","bgEl","layout","Sector","Rect","createBackgroundShape","silent","z2","createBackgroundEl","useStyle","getItemStyle","setShape","diff","add","itemModel","getItemModel","hasValue","isValidLayout","isClipped","el","elementCreator","model","updateStyle","attr","updateRealtimeAnimation","initProps","setItemGraphicEl","ignore","update","newIndex","oldIndex","updateProps","getItemGraphicEl","remove","saveOldStyle","removeElementWithFadeOut","execute","bgGroup","_backgroundGroup","Group","removeAll","createLarge","_removeBackground","setClipPath","_dispatchInitSort","orderMapping_1","idx","_onRendered","_updateSortWithinSameData","getZr","on","_dataSort","orderMapping","info","each","ordinalNumber","dataIdx","mappedValue","sort","a","b","ordinalNumbers","map","item","_isOrderChangedWithinSameData","scale","ordinalDataDim","lastValue","Number","MAX_VALUE","tickNum","getOrdinalMeta","categories","rawIdx","rawIndexOf","getRawOrdinalNumber","MIN_VALUE","indexOfRawIndex","_isOrderDifferentInView","orderInfo","tickMax","sortInfo","dispatchAction","componentType","axisId","index","sortResult","dispose","off","eachItemGraphicEl","getECData","ChartView","cartesian2d","coordSysBoundingRect","signWidth","signHeight","coordSysX2","coordSysY2","x2","y2","xClipped","yClipped","signR","tmp","clipped","axisModel","isUpdate","extend","__dataIndex","name","isRadial","ShapeClass","Sausage","sector","defaults","positionMap","createPolarPositionMapping","calculateTextPosition","positionMapping","isRoundCap","out","boundingRect","textPosition","position","Array","mappedSectorPosition","middleR","middleAngle","extraDist","mathCos","mathSin","textAlign","textVerticalAlign","align","verticalAlign","createSectorCalculateTextPosition","animateProperty","animateTarget","seriesAnimationModel","seriesTarget","axisTarget","axisAnimationModel","checkPropertiesNotValid","obj","props","rectPropties","polarPropties","fixedLineWidth","rawLayout","getLineWidth","signX","signY","arcOrAngle","isPolar","style","getItemVisual","cursorStyle","getShallow","labelPositionOutside","labelStatesModels","getLabelStatesModels","setLabelStyle","labelFetcher","labelDataIndex","defaultText","inheritColor","fill","defaultOpacity","defaultOutsidePosition","label","getTextContent","textConfig","inside","rotateType","setTextConfig","rotation","anchorAngle","rotate","setSectorTextRotation","setLabelValueAnimation","getRawValue","emphasisModel","enableHoverEmphasis","setStatesStylesFromModel","isZeroOnPolar","stroke","states","state","LagePathShape","LargePath","points","startPoint","__startPoint","baseDimIdx","__baseDimIdx","lineTo","incremental","largeDataIndices","barWidth","backgroundStartPoint","__largeDataIndices","__barWidth","setLargeBackgroundStyle","globalStyle","getVisual","setLargeStyle","seriesIndex","largePathUpdateDataIndex","throttle","event","largePath","valueDimIdx","barWidthHalf","startValueVal","pointerBaseVal","pointerValueVal","baseLowerBound","baseUpperBound","ii","barBaseVal","barValueVal","largePathFindDataIndex","offsetX","offsetY","rectShape","coordLayout","sectorShape","install","registers","registerChartView","registerSeriesModel","BarSeries","registerLayout","PRIORITY","VISUAL","LAYOUT","zrUtil","PROGRESSIVE_LAYOUT","largeLayout","registerProcessor","PROCESSOR","STATISTIC","registerAction","eachComponent","mainType","query","componentModel","axis","setCategorySortInfo"],"mappings":"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","file":"static/js/15.9e73254a.chunk.js","sourcesContent":["/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nexport * from './lib/export/core';","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { retrieveRawValue } from '../../data/helper/dataProvider';\nimport { isArray } from 'zrender/lib/core/util';\n/**\n * @return label string. Not null/undefined\n */\n\nexport function getDefaultLabel(data, dataIndex) {\n  var labelDims = data.mapDimensionsAll('defaultedLabel');\n  var len = labelDims.length; // Simple optimization (in lots of cases, label dims length is 1)\n\n  if (len === 1) {\n    var rawVal = retrieveRawValue(data, dataIndex, labelDims[0]);\n    return rawVal != null ? rawVal + '' : null;\n  } else if (len) {\n    var vals = [];\n\n    for (var i = 0; i < labelDims.length; i++) {\n      vals.push(retrieveRawValue(data, dataIndex, labelDims[i]));\n    }\n\n    return vals.join(' ');\n  }\n}\nexport function getDefaultInterpolatedLabel(data, interpolatedValue) {\n  var labelDims = data.mapDimensionsAll('defaultedLabel');\n\n  if (!isArray(interpolatedValue)) {\n    return interpolatedValue + '';\n  }\n\n  var vals = [];\n\n  for (var i = 0; i < labelDims.length; i++) {\n    var dimIndex = data.getDimensionIndex(labelDims[i]);\n\n    if (dimIndex >= 0) {\n      vals.push(interpolatedValue[dimIndex]);\n    }\n  }\n\n  return vals.join(' ');\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nexport function isCoordinateSystemType(coordSys, type) {\n  return coordSys.type === type;\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as graphic from '../../util/graphic';\nimport { round } from '../../util/number';\n\nfunction createGridClipPath(cartesian, hasAnimation, seriesModel, done, during) {\n  var rect = cartesian.getArea();\n  var x = rect.x;\n  var y = rect.y;\n  var width = rect.width;\n  var height = rect.height;\n  var lineWidth = seriesModel.get(['lineStyle', 'width']) || 2; // Expand the clip path a bit to avoid the border is clipped and looks thinner\n\n  x -= lineWidth / 2;\n  y -= lineWidth / 2;\n  width += lineWidth;\n  height += lineWidth; // fix: https://github.com/apache/incubator-echarts/issues/11369\n\n  x = Math.floor(x);\n  width = Math.round(width);\n  var clipPath = new graphic.Rect({\n    shape: {\n      x: x,\n      y: y,\n      width: width,\n      height: height\n    }\n  });\n\n  if (hasAnimation) {\n    var baseAxis = cartesian.getBaseAxis();\n    var isHorizontal = baseAxis.isHorizontal();\n    var isAxisInversed = baseAxis.inverse;\n\n    if (isHorizontal) {\n      if (isAxisInversed) {\n        clipPath.shape.x += width;\n      }\n\n      clipPath.shape.width = 0;\n    } else {\n      if (!isAxisInversed) {\n        clipPath.shape.y += height;\n      }\n\n      clipPath.shape.height = 0;\n    }\n\n    var duringCb = typeof during === 'function' ? function (percent) {\n      during(percent, clipPath);\n    } : null;\n    graphic.initProps(clipPath, {\n      shape: {\n        width: width,\n        height: height,\n        x: x,\n        y: y\n      }\n    }, seriesModel, null, done, duringCb);\n  }\n\n  return clipPath;\n}\n\nfunction createPolarClipPath(polar, hasAnimation, seriesModel) {\n  var sectorArea = polar.getArea(); // Avoid float number rounding error for symbol on the edge of axis extent.\n\n  var r0 = round(sectorArea.r0, 1);\n  var r = round(sectorArea.r, 1);\n  var clipPath = new graphic.Sector({\n    shape: {\n      cx: round(polar.cx, 1),\n      cy: round(polar.cy, 1),\n      r0: r0,\n      r: r,\n      startAngle: sectorArea.startAngle,\n      endAngle: sectorArea.endAngle,\n      clockwise: sectorArea.clockwise\n    }\n  });\n\n  if (hasAnimation) {\n    var isRadial = polar.getBaseAxis().dim === 'angle';\n\n    if (isRadial) {\n      clipPath.shape.endAngle = sectorArea.startAngle;\n    } else {\n      clipPath.shape.r = r0;\n    }\n\n    graphic.initProps(clipPath, {\n      shape: {\n        endAngle: sectorArea.endAngle,\n        r: r\n      }\n    }, seriesModel);\n  }\n\n  return clipPath;\n}\n\nfunction createClipPath(coordSys, hasAnimation, seriesModel, done, during) {\n  if (!coordSys) {\n    return null;\n  } else if (coordSys.type === 'polar') {\n    return createPolarClipPath(coordSys, hasAnimation, seriesModel);\n  } else if (coordSys.type === 'cartesian2d') {\n    return createGridClipPath(coordSys, hasAnimation, seriesModel, done, during);\n  }\n\n  return null;\n}\n\nexport { createGridClipPath, createPolarClipPath, createClipPath };","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nvar samplers = {\n  average: function (frame) {\n    var sum = 0;\n    var count = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      if (!isNaN(frame[i])) {\n        sum += frame[i];\n        count++;\n      }\n    } // Return NaN if count is 0\n\n\n    return count === 0 ? NaN : sum / count;\n  },\n  sum: function (frame) {\n    var sum = 0;\n\n    for (var i = 0; i < frame.length; i++) {\n      // Ignore NaN\n      sum += frame[i] || 0;\n    }\n\n    return sum;\n  },\n  max: function (frame) {\n    var max = -Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] > max && (max = frame[i]);\n    } // NaN will cause illegal axis extent.\n\n\n    return isFinite(max) ? max : NaN;\n  },\n  min: function (frame) {\n    var min = Infinity;\n\n    for (var i = 0; i < frame.length; i++) {\n      frame[i] < min && (min = frame[i]);\n    } // NaN will cause illegal axis extent.\n\n\n    return isFinite(min) ? min : NaN;\n  },\n  // TODO\n  // Median\n  nearest: function (frame) {\n    return frame[0];\n  }\n};\n\nvar indexSampler = function (frame) {\n  return Math.round(frame.length / 2);\n};\n\nexport default function dataSample(seriesType) {\n  return {\n    seriesType: seriesType,\n    // FIXME:TS never used, so comment it\n    // modifyOutputEnd: true,\n    reset: function (seriesModel, ecModel, api) {\n      var data = seriesModel.getData();\n      var sampling = seriesModel.get('sampling');\n      var coordSys = seriesModel.coordinateSystem;\n      var count = data.count(); // Only cartesian2d support down sampling. Disable it when there is few data.\n\n      if (count > 10 && coordSys.type === 'cartesian2d' && sampling) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var extent = baseAxis.getExtent();\n        var dpr = api.getDevicePixelRatio(); // Coordinste system has been resized\n\n        var size = Math.abs(extent[1] - extent[0]) * (dpr || 1);\n        var rate = Math.round(count / size);\n\n        if (rate > 1) {\n          if (sampling === 'lttb') {\n            seriesModel.setData(data.lttbDownSample(data.mapDimension(valueAxis.dim), 1 / rate));\n          }\n\n          var sampler = void 0;\n\n          if (typeof sampling === 'string') {\n            sampler = samplers[sampling];\n          } else if (typeof sampling === 'function') {\n            sampler = sampling;\n          }\n\n          if (sampler) {\n            // Only support sample the first dim mapped from value axis.\n            seriesModel.setData(data.downSample(data.mapDimension(valueAxis.dim), 1 / rate, sampler, indexSampler));\n          }\n        }\n      }\n    }\n  };\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport { Path } from '../graphic';\n/**\n * Sausage: similar to sector, but have half circle on both sides\n */\n\nvar SausageShape =\n/** @class */\nfunction () {\n  function SausageShape() {\n    this.cx = 0;\n    this.cy = 0;\n    this.r0 = 0;\n    this.r = 0;\n    this.startAngle = 0;\n    this.endAngle = Math.PI * 2;\n    this.clockwise = true;\n  }\n\n  return SausageShape;\n}();\n\nvar SausagePath =\n/** @class */\nfunction (_super) {\n  __extends(SausagePath, _super);\n\n  function SausagePath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this.type = 'sausage';\n    return _this;\n  }\n\n  SausagePath.prototype.getDefaultShape = function () {\n    return new SausageShape();\n  };\n\n  SausagePath.prototype.buildPath = function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var dr = (r - r0) * 0.5;\n    var rCenter = r0 + dr;\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitStartX = Math.cos(startAngle);\n    var unitStartY = Math.sin(startAngle);\n    var unitEndX = Math.cos(endAngle);\n    var unitEndY = Math.sin(endAngle);\n    var lessThanCircle = clockwise ? endAngle - startAngle < Math.PI * 2 : startAngle - endAngle < Math.PI * 2;\n\n    if (lessThanCircle) {\n      ctx.moveTo(unitStartX * r0 + x, unitStartY * r0 + y);\n      ctx.arc(unitStartX * rCenter + x, unitStartY * rCenter + y, dr, -Math.PI + startAngle, startAngle, !clockwise);\n    }\n\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.moveTo(unitEndX * r + x, unitEndY * r + y);\n    ctx.arc(unitEndX * rCenter + x, unitEndY * rCenter + y, dr, endAngle - Math.PI * 2, endAngle - Math.PI, !clockwise);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n      ctx.moveTo(unitStartX * r0 + x, unitEndY * r0 + y);\n    }\n\n    ctx.closePath();\n  };\n\n  return SausagePath;\n}(Path);\n\nexport default SausagePath;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport SeriesModel from '../../model/Series';\nimport createSeriesData from '../helper/createSeriesData';\n\nvar BaseBarSeriesModel =\n/** @class */\nfunction (_super) {\n  __extends(BaseBarSeriesModel, _super);\n\n  function BaseBarSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = BaseBarSeriesModel.type;\n    return _this;\n  }\n\n  BaseBarSeriesModel.prototype.getInitialData = function (option, ecModel) {\n    return createSeriesData(null, this, {\n      useEncodeDefaulter: true\n    });\n  };\n\n  BaseBarSeriesModel.prototype.getMarkerPosition = function (value) {\n    var coordSys = this.coordinateSystem;\n\n    if (coordSys && coordSys.clampData) {\n      // PENDING if clamp ?\n      var pt = coordSys.dataToPoint(coordSys.clampData(value));\n      var data = this.getData();\n      var offset = data.getLayout('offset');\n      var size = data.getLayout('size');\n      var offsetIndex = coordSys.getBaseAxis().isHorizontal() ? 0 : 1;\n      pt[offsetIndex] += offset + size / 2;\n      return pt;\n    }\n\n    return [NaN, NaN];\n  };\n\n  BaseBarSeriesModel.type = 'series.__base_bar__';\n  BaseBarSeriesModel.defaultOption = {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'cartesian2d',\n    legendHoverLink: true,\n    // stack: null\n    // Cartesian coordinate system\n    // xAxisIndex: 0,\n    // yAxisIndex: 0,\n    barMinHeight: 0,\n    barMinAngle: 0,\n    // cursor: null,\n    large: false,\n    largeThreshold: 400,\n    progressive: 3e3,\n    progressiveChunkMode: 'mod'\n  };\n  return BaseBarSeriesModel;\n}(SeriesModel);\n\nSeriesModel.registerClass(BaseBarSeriesModel);\nexport default BaseBarSeriesModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport BaseBarSeriesModel from './BaseBarSeries';\nimport createSeriesData from '../helper/createSeriesData';\nimport { inheritDefaultOption } from '../../util/component';\n\nvar BarSeriesModel =\n/** @class */\nfunction (_super) {\n  __extends(BarSeriesModel, _super);\n\n  function BarSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = BarSeriesModel.type;\n    return _this;\n  }\n\n  BarSeriesModel.prototype.getInitialData = function () {\n    return createSeriesData(null, this, {\n      useEncodeDefaulter: true,\n      createInvertedIndices: !!this.get('realtimeSort', true) || null\n    });\n  };\n  /**\n   * @override\n   */\n\n\n  BarSeriesModel.prototype.getProgressive = function () {\n    // Do not support progressive in normal mode.\n    return this.get('large') ? this.get('progressive') : false;\n  };\n  /**\n   * @override\n   */\n\n\n  BarSeriesModel.prototype.getProgressiveThreshold = function () {\n    // Do not support progressive in normal mode.\n    var progressiveThreshold = this.get('progressiveThreshold');\n    var largeThreshold = this.get('largeThreshold');\n\n    if (largeThreshold > progressiveThreshold) {\n      progressiveThreshold = largeThreshold;\n    }\n\n    return progressiveThreshold;\n  };\n\n  BarSeriesModel.prototype.brushSelector = function (dataIndex, data, selectors) {\n    return selectors.rect(data.getItemLayout(dataIndex));\n  };\n\n  BarSeriesModel.type = 'series.bar';\n  BarSeriesModel.dependencies = ['grid', 'polar'];\n  BarSeriesModel.defaultOption = inheritDefaultOption(BaseBarSeriesModel.defaultOption, {\n    // If clipped\n    // Only available on cartesian2d\n    clip: true,\n    roundCap: false,\n    showBackground: false,\n    backgroundStyle: {\n      color: 'rgba(180, 180, 180, 0.2)',\n      borderColor: null,\n      borderWidth: 0,\n      borderType: 'solid',\n      borderRadius: 0,\n      shadowBlur: 0,\n      shadowColor: null,\n      shadowOffsetX: 0,\n      shadowOffsetY: 0,\n      opacity: 1\n    },\n    select: {\n      itemStyle: {\n        borderColor: '#212121'\n      }\n    },\n    realtimeSort: false\n  });\n  return BarSeriesModel;\n}(BaseBarSeriesModel);\n\nexport default BarSeriesModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { calculateTextPosition } from 'zrender/lib/contain/text';\nimport { isArray } from 'zrender/lib/core/util';\nexport function createSectorCalculateTextPosition(positionMapping, opts) {\n  opts = opts || {};\n  var isRoundCap = opts.isRoundCap;\n  return function (out, opts, boundingRect) {\n    var textPosition = opts.position;\n\n    if (!textPosition || textPosition instanceof Array) {\n      return calculateTextPosition(out, opts, boundingRect);\n    }\n\n    var mappedSectorPosition = positionMapping(textPosition);\n    var distance = opts.distance != null ? opts.distance : 5;\n    var sector = this.shape;\n    var cx = sector.cx;\n    var cy = sector.cy;\n    var r = sector.r;\n    var r0 = sector.r0;\n    var middleR = (r + r0) / 2;\n    var startAngle = sector.startAngle;\n    var endAngle = sector.endAngle;\n    var middleAngle = (startAngle + endAngle) / 2;\n    var extraDist = isRoundCap ? Math.abs(r - r0) / 2 : 0;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin; // base position: top-left\n\n    var x = cx + r * mathCos(startAngle);\n    var y = cy + r * mathSin(startAngle);\n    var textAlign = 'left';\n    var textVerticalAlign = 'top';\n\n    switch (mappedSectorPosition) {\n      case 'startArc':\n        x = cx + (r0 - distance) * mathCos(middleAngle);\n        y = cy + (r0 - distance) * mathSin(middleAngle);\n        textAlign = 'center';\n        textVerticalAlign = 'top';\n        break;\n\n      case 'insideStartArc':\n        x = cx + (r0 + distance) * mathCos(middleAngle);\n        y = cy + (r0 + distance) * mathSin(middleAngle);\n        textAlign = 'center';\n        textVerticalAlign = 'bottom';\n        break;\n\n      case 'startAngle':\n        x = cx + middleR * mathCos(startAngle) + adjustAngleDistanceX(startAngle, distance + extraDist, false);\n        y = cy + middleR * mathSin(startAngle) + adjustAngleDistanceY(startAngle, distance + extraDist, false);\n        textAlign = 'right';\n        textVerticalAlign = 'middle';\n        break;\n\n      case 'insideStartAngle':\n        x = cx + middleR * mathCos(startAngle) + adjustAngleDistanceX(startAngle, -distance + extraDist, false);\n        y = cy + middleR * mathSin(startAngle) + adjustAngleDistanceY(startAngle, -distance + extraDist, false);\n        textAlign = 'left';\n        textVerticalAlign = 'middle';\n        break;\n\n      case 'middle':\n        x = cx + middleR * mathCos(middleAngle);\n        y = cy + middleR * mathSin(middleAngle);\n        textAlign = 'center';\n        textVerticalAlign = 'middle';\n        break;\n\n      case 'endArc':\n        x = cx + (r + distance) * mathCos(middleAngle);\n        y = cy + (r + distance) * mathSin(middleAngle);\n        textAlign = 'center';\n        textVerticalAlign = 'bottom';\n        break;\n\n      case 'insideEndArc':\n        x = cx + (r - distance) * mathCos(middleAngle);\n        y = cy + (r - distance) * mathSin(middleAngle);\n        textAlign = 'center';\n        textVerticalAlign = 'top';\n        break;\n\n      case 'endAngle':\n        x = cx + middleR * mathCos(endAngle) + adjustAngleDistanceX(endAngle, distance + extraDist, true);\n        y = cy + middleR * mathSin(endAngle) + adjustAngleDistanceY(endAngle, distance + extraDist, true);\n        textAlign = 'left';\n        textVerticalAlign = 'middle';\n        break;\n\n      case 'insideEndAngle':\n        x = cx + middleR * mathCos(endAngle) + adjustAngleDistanceX(endAngle, -distance + extraDist, true);\n        y = cy + middleR * mathSin(endAngle) + adjustAngleDistanceY(endAngle, -distance + extraDist, true);\n        textAlign = 'right';\n        textVerticalAlign = 'middle';\n        break;\n\n      default:\n        return calculateTextPosition(out, opts, boundingRect);\n    }\n\n    out = out || {};\n    out.x = x;\n    out.y = y;\n    out.align = textAlign;\n    out.verticalAlign = textVerticalAlign;\n    return out;\n  };\n}\nexport function setSectorTextRotation(sector, textPosition, positionMapping, rotateType) {\n  if (typeof rotateType === 'number') {\n    // user-set rotation\n    sector.setTextConfig({\n      rotation: rotateType\n    });\n    return;\n  } else if (isArray(textPosition)) {\n    // user-set position, use 0 as auto rotation\n    sector.setTextConfig({\n      rotation: 0\n    });\n    return;\n  }\n\n  var shape = sector.shape;\n  var startAngle = shape.clockwise ? shape.startAngle : shape.endAngle;\n  var endAngle = shape.clockwise ? shape.endAngle : shape.startAngle;\n  var middleAngle = (startAngle + endAngle) / 2;\n  var anchorAngle;\n  var mappedSectorPosition = positionMapping(textPosition);\n\n  switch (mappedSectorPosition) {\n    case 'startArc':\n    case 'insideStartArc':\n    case 'middle':\n    case 'insideEndArc':\n    case 'endArc':\n      anchorAngle = middleAngle;\n      break;\n\n    case 'startAngle':\n    case 'insideStartAngle':\n      anchorAngle = startAngle;\n      break;\n\n    case 'endAngle':\n    case 'insideEndAngle':\n      anchorAngle = endAngle;\n      break;\n\n    default:\n      sector.setTextConfig({\n        rotation: 0\n      });\n      return;\n  }\n\n  var rotate = Math.PI * 1.5 - anchorAngle;\n  /**\n   * TODO: labels with rotate > Math.PI / 2 should be rotate another\n   * half round flipped to increase readability. However, only middle\n   * position supports this for now, because in other positions, the\n   * anchor point is not at the center of the text, so the positions\n   * after rotating is not as expected.\n   */\n\n  if (mappedSectorPosition === 'middle' && rotate > Math.PI / 2 && rotate < Math.PI * 1.5) {\n    rotate -= Math.PI;\n  }\n\n  sector.setTextConfig({\n    rotation: rotate\n  });\n}\n\nfunction adjustAngleDistanceX(angle, distance, isEnd) {\n  return distance * Math.sin(angle) * (isEnd ? -1 : 1);\n}\n\nfunction adjustAngleDistanceY(angle, distance, isEnd) {\n  return distance * Math.cos(angle) * (isEnd ? 1 : -1);\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport Path from 'zrender/lib/graphic/Path';\nimport Group from 'zrender/lib/graphic/Group';\nimport { extend, defaults, each, map } from 'zrender/lib/core/util';\nimport { Rect, Sector, updateProps, initProps, removeElementWithFadeOut } from '../../util/graphic';\nimport { getECData } from '../../util/innerStore';\nimport { enableHoverEmphasis, setStatesStylesFromModel } from '../../util/states';\nimport { setLabelStyle, getLabelStatesModels, setLabelValueAnimation } from '../../label/labelStyle';\nimport { throttle } from '../../util/throttle';\nimport { createClipPath } from '../helper/createClipPathFromCoordSys';\nimport Sausage from '../../util/shape/sausage';\nimport ChartView from '../../view/Chart';\nimport { isCoordinateSystemType } from '../../coord/CoordinateSystem';\nimport { getDefaultLabel, getDefaultInterpolatedLabel } from '../helper/labelHelper';\nimport { warn } from '../../util/log';\nimport { createSectorCalculateTextPosition, setSectorTextRotation } from '../../label/sectorLabel';\nimport { saveOldStyle } from '../../animation/basicTrasition';\nvar _eventPos = [0, 0];\nvar mathMax = Math.max;\nvar mathMin = Math.min;\n\nfunction getClipArea(coord, data) {\n  var coordSysClipArea = coord.getArea && coord.getArea();\n\n  if (isCoordinateSystemType(coord, 'cartesian2d')) {\n    var baseAxis = coord.getBaseAxis(); // When boundaryGap is false or using time axis. bar may exceed the grid.\n    // We should not clip this part.\n    // See test/bar2.html\n\n    if (baseAxis.type !== 'category' || !baseAxis.onBand) {\n      var expandWidth = data.getLayout('bandWidth');\n\n      if (baseAxis.isHorizontal()) {\n        coordSysClipArea.x -= expandWidth;\n        coordSysClipArea.width += expandWidth * 2;\n      } else {\n        coordSysClipArea.y -= expandWidth;\n        coordSysClipArea.height += expandWidth * 2;\n      }\n    }\n  }\n\n  return coordSysClipArea;\n}\n\nvar BarView =\n/** @class */\nfunction (_super) {\n  __extends(BarView, _super);\n\n  function BarView() {\n    var _this = _super.call(this) || this;\n\n    _this.type = BarView.type;\n    _this._isFirstFrame = true;\n    return _this;\n  }\n\n  BarView.prototype.render = function (seriesModel, ecModel, api, payload) {\n    this._model = seriesModel;\n\n    this._removeOnRenderedListener(api);\n\n    this._updateDrawMode(seriesModel);\n\n    var coordinateSystemType = seriesModel.get('coordinateSystem');\n\n    if (coordinateSystemType === 'cartesian2d' || coordinateSystemType === 'polar') {\n      this._isLargeDraw ? this._renderLarge(seriesModel, ecModel, api) : this._renderNormal(seriesModel, ecModel, api, payload);\n    } else if (process.env.NODE_ENV !== 'production') {\n      warn('Only cartesian2d and polar supported for bar.');\n    }\n  };\n\n  BarView.prototype.incrementalPrepareRender = function (seriesModel) {\n    this._clear();\n\n    this._updateDrawMode(seriesModel); // incremental also need to clip, otherwise might be overlow.\n    // But must not set clip in each frame, otherwise all of the children will be marked redraw.\n\n\n    this._updateLargeClip(seriesModel);\n  };\n\n  BarView.prototype.incrementalRender = function (params, seriesModel) {\n    // Do not support progressive in normal mode.\n    this._incrementalRenderLarge(params, seriesModel);\n  };\n\n  BarView.prototype._updateDrawMode = function (seriesModel) {\n    var isLargeDraw = seriesModel.pipelineContext.large;\n\n    if (this._isLargeDraw == null || isLargeDraw !== this._isLargeDraw) {\n      this._isLargeDraw = isLargeDraw;\n\n      this._clear();\n    }\n  };\n\n  BarView.prototype._renderNormal = function (seriesModel, ecModel, api, payload) {\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n    var coord = seriesModel.coordinateSystem;\n    var baseAxis = coord.getBaseAxis();\n    var isHorizontalOrRadial;\n\n    if (coord.type === 'cartesian2d') {\n      isHorizontalOrRadial = baseAxis.isHorizontal();\n    } else if (coord.type === 'polar') {\n      isHorizontalOrRadial = baseAxis.dim === 'angle';\n    }\n\n    var animationModel = seriesModel.isAnimationEnabled() ? seriesModel : null;\n    var realtimeSortCfg = shouldRealtimeSort(seriesModel, coord);\n\n    if (realtimeSortCfg) {\n      this._enableRealtimeSort(realtimeSortCfg, data, api);\n    }\n\n    var needsClip = seriesModel.get('clip', true) || realtimeSortCfg;\n    var coordSysClipArea = getClipArea(coord, data); // If there is clipPath created in large mode. Remove it.\n\n    group.removeClipPath(); // We don't use clipPath in normal mode because we needs a perfect animation\n    // And don't want the label are clipped.\n\n    var roundCap = seriesModel.get('roundCap', true);\n    var drawBackground = seriesModel.get('showBackground', true);\n    var backgroundModel = seriesModel.getModel('backgroundStyle');\n    var barBorderRadius = backgroundModel.get('borderRadius') || 0;\n    var bgEls = [];\n    var oldBgEls = this._backgroundEls;\n    var isInitSort = payload && payload.isInitSort;\n    var isChangeOrder = payload && payload.type === 'changeAxisOrder';\n\n    function createBackground(dataIndex) {\n      var bgLayout = getLayout[coord.type](data, dataIndex);\n      var bgEl = createBackgroundEl(coord, isHorizontalOrRadial, bgLayout);\n      bgEl.useStyle(backgroundModel.getItemStyle()); // Only cartesian2d support borderRadius.\n\n      if (coord.type === 'cartesian2d') {\n        bgEl.setShape('r', barBorderRadius);\n      }\n\n      bgEls[dataIndex] = bgEl;\n      return bgEl;\n    }\n\n    ;\n    data.diff(oldData).add(function (dataIndex) {\n      var itemModel = data.getItemModel(dataIndex);\n      var layout = getLayout[coord.type](data, dataIndex, itemModel);\n\n      if (drawBackground) {\n        createBackground(dataIndex);\n      } // If dataZoom in filteMode: 'empty', the baseValue can be set as NaN in \"axisProxy\".\n\n\n      if (!data.hasValue(dataIndex) || !isValidLayout[coord.type](layout)) {\n        return;\n      }\n\n      var isClipped = false;\n\n      if (needsClip) {\n        // Clip will modify the layout params.\n        // And return a boolean to determine if the shape are fully clipped.\n        isClipped = clip[coord.type](coordSysClipArea, layout);\n      }\n\n      var el = elementCreator[coord.type](seriesModel, data, dataIndex, layout, isHorizontalOrRadial, animationModel, baseAxis.model, false, roundCap);\n      updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n\n      if (isInitSort) {\n        el.attr({\n          shape: layout\n        });\n      } else if (realtimeSortCfg) {\n        updateRealtimeAnimation(realtimeSortCfg, animationModel, el, layout, dataIndex, isHorizontalOrRadial, false, false);\n      } else {\n        initProps(el, {\n          shape: layout\n        }, seriesModel, dataIndex);\n      }\n\n      data.setItemGraphicEl(dataIndex, el);\n      group.add(el);\n      el.ignore = isClipped;\n    }).update(function (newIndex, oldIndex) {\n      var itemModel = data.getItemModel(newIndex);\n      var layout = getLayout[coord.type](data, newIndex, itemModel);\n\n      if (drawBackground) {\n        var bgEl = void 0;\n\n        if (oldBgEls.length === 0) {\n          bgEl = createBackground(oldIndex);\n        } else {\n          bgEl = oldBgEls[oldIndex];\n          bgEl.useStyle(backgroundModel.getItemStyle()); // Only cartesian2d support borderRadius.\n\n          if (coord.type === 'cartesian2d') {\n            bgEl.setShape('r', barBorderRadius);\n          }\n\n          bgEls[newIndex] = bgEl;\n        }\n\n        var bgLayout = getLayout[coord.type](data, newIndex);\n        var shape = createBackgroundShape(isHorizontalOrRadial, bgLayout, coord);\n        updateProps(bgEl, {\n          shape: shape\n        }, animationModel, newIndex);\n      }\n\n      var el = oldData.getItemGraphicEl(oldIndex);\n\n      if (!data.hasValue(newIndex) || !isValidLayout[coord.type](layout)) {\n        group.remove(el);\n        return;\n      }\n\n      var isClipped = false;\n\n      if (needsClip) {\n        isClipped = clip[coord.type](coordSysClipArea, layout);\n\n        if (isClipped) {\n          group.remove(el);\n        }\n      }\n\n      if (!el) {\n        el = elementCreator[coord.type](seriesModel, data, newIndex, layout, isHorizontalOrRadial, animationModel, baseAxis.model, !!el, roundCap);\n      } else {\n        saveOldStyle(el);\n      } // Not change anything if only order changed.\n      // Especially not change label.\n\n\n      if (!isChangeOrder) {\n        updateStyle(el, data, newIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, coord.type === 'polar');\n      }\n\n      if (isInitSort) {\n        el.attr({\n          shape: layout\n        });\n      } else if (realtimeSortCfg) {\n        updateRealtimeAnimation(realtimeSortCfg, animationModel, el, layout, newIndex, isHorizontalOrRadial, true, isChangeOrder);\n      } else {\n        updateProps(el, {\n          shape: layout\n        }, seriesModel, newIndex, null);\n      }\n\n      data.setItemGraphicEl(newIndex, el);\n      el.ignore = isClipped;\n      group.add(el);\n    }).remove(function (dataIndex) {\n      var el = oldData.getItemGraphicEl(dataIndex);\n      el && removeElementWithFadeOut(el, seriesModel, dataIndex);\n    }).execute();\n    var bgGroup = this._backgroundGroup || (this._backgroundGroup = new Group());\n    bgGroup.removeAll();\n\n    for (var i = 0; i < bgEls.length; ++i) {\n      bgGroup.add(bgEls[i]);\n    }\n\n    group.add(bgGroup);\n    this._backgroundEls = bgEls;\n    this._data = data;\n  };\n\n  BarView.prototype._renderLarge = function (seriesModel, ecModel, api) {\n    this._clear();\n\n    createLarge(seriesModel, this.group);\n\n    this._updateLargeClip(seriesModel);\n  };\n\n  BarView.prototype._incrementalRenderLarge = function (params, seriesModel) {\n    this._removeBackground();\n\n    createLarge(seriesModel, this.group, true);\n  };\n\n  BarView.prototype._updateLargeClip = function (seriesModel) {\n    // Use clipPath in large mode.\n    var clipPath = seriesModel.get('clip', true) ? createClipPath(seriesModel.coordinateSystem, false, seriesModel) : null;\n\n    if (clipPath) {\n      this.group.setClipPath(clipPath);\n    } else {\n      this.group.removeClipPath();\n    }\n  };\n\n  BarView.prototype._enableRealtimeSort = function (realtimeSortCfg, data, api) {\n    var _this = this; // If no data in the first frame, wait for data to initSort\n\n\n    if (!data.count()) {\n      return;\n    }\n\n    var baseAxis = realtimeSortCfg.baseAxis;\n\n    if (this._isFirstFrame) {\n      this._dispatchInitSort(data, realtimeSortCfg, api);\n\n      this._isFirstFrame = false;\n    } else {\n      var orderMapping_1 = function (idx) {\n        var el = data.getItemGraphicEl(idx);\n\n        if (el) {\n          var shape = el.shape; // If data is NaN, shape.xxx may be NaN, so use || 0 here in case\n\n          return (baseAxis.isHorizontal() // The result should be consistent with the initial sort by data value.\n          // Do not support the case that both positive and negative exist.\n          ? Math.abs(shape.height) : Math.abs(shape.width)) || 0;\n        } else {\n          return 0;\n        }\n      };\n\n      this._onRendered = function () {\n        _this._updateSortWithinSameData(data, orderMapping_1, baseAxis, api);\n      };\n\n      api.getZr().on('rendered', this._onRendered);\n    }\n  };\n\n  BarView.prototype._dataSort = function (data, baseAxis, orderMapping) {\n    var info = [];\n    data.each(data.mapDimension(baseAxis.dim), function (ordinalNumber, dataIdx) {\n      var mappedValue = orderMapping(dataIdx);\n      mappedValue = mappedValue == null ? NaN : mappedValue;\n      info.push({\n        dataIndex: dataIdx,\n        mappedValue: mappedValue,\n        ordinalNumber: ordinalNumber\n      });\n    });\n    info.sort(function (a, b) {\n      // If NaN, it will be treated as min val.\n      return b.mappedValue - a.mappedValue;\n    });\n    return {\n      ordinalNumbers: map(info, function (item) {\n        return item.ordinalNumber;\n      })\n    };\n  };\n\n  BarView.prototype._isOrderChangedWithinSameData = function (data, orderMapping, baseAxis) {\n    var scale = baseAxis.scale;\n    var ordinalDataDim = data.mapDimension(baseAxis.dim);\n    var lastValue = Number.MAX_VALUE;\n\n    for (var tickNum = 0, len = scale.getOrdinalMeta().categories.length; tickNum < len; ++tickNum) {\n      var rawIdx = data.rawIndexOf(ordinalDataDim, scale.getRawOrdinalNumber(tickNum));\n      var value = rawIdx < 0 // If some tick have no bar, the tick will be treated as min.\n      ? Number.MIN_VALUE // PENDING: if dataZoom on baseAxis exits, is it a performance issue?\n      : orderMapping(data.indexOfRawIndex(rawIdx));\n\n      if (value > lastValue) {\n        return true;\n      }\n\n      lastValue = value;\n    }\n\n    return false;\n  };\n  /*\n   * Consider the case when A and B changed order, whose representing\n   * bars are both out of sight, we don't wish to trigger reorder action\n   * as long as the order in the view doesn't change.\n   */\n\n\n  BarView.prototype._isOrderDifferentInView = function (orderInfo, baseAxis) {\n    var scale = baseAxis.scale;\n    var extent = scale.getExtent();\n    var tickNum = Math.max(0, extent[0]);\n    var tickMax = Math.min(extent[1], scale.getOrdinalMeta().categories.length - 1);\n\n    for (; tickNum <= tickMax; ++tickNum) {\n      if (orderInfo.ordinalNumbers[tickNum] !== scale.getRawOrdinalNumber(tickNum)) {\n        return true;\n      }\n    }\n  };\n\n  BarView.prototype._updateSortWithinSameData = function (data, orderMapping, baseAxis, api) {\n    if (!this._isOrderChangedWithinSameData(data, orderMapping, baseAxis)) {\n      return;\n    }\n\n    var sortInfo = this._dataSort(data, baseAxis, orderMapping);\n\n    if (this._isOrderDifferentInView(sortInfo, baseAxis)) {\n      this._removeOnRenderedListener(api);\n\n      api.dispatchAction({\n        type: 'changeAxisOrder',\n        componentType: baseAxis.dim + 'Axis',\n        axisId: baseAxis.index,\n        sortInfo: sortInfo\n      });\n    }\n  };\n\n  BarView.prototype._dispatchInitSort = function (data, realtimeSortCfg, api) {\n    var baseAxis = realtimeSortCfg.baseAxis;\n\n    var sortResult = this._dataSort(data, baseAxis, function (dataIdx) {\n      return data.get(data.mapDimension(realtimeSortCfg.otherAxis.dim), dataIdx);\n    });\n\n    api.dispatchAction({\n      type: 'changeAxisOrder',\n      componentType: baseAxis.dim + 'Axis',\n      isInitSort: true,\n      axisId: baseAxis.index,\n      sortInfo: sortResult\n    });\n  };\n\n  BarView.prototype.remove = function (ecModel, api) {\n    this._clear(this._model);\n\n    this._removeOnRenderedListener(api);\n  };\n\n  BarView.prototype.dispose = function (ecModel, api) {\n    this._removeOnRenderedListener(api);\n  };\n\n  BarView.prototype._removeOnRenderedListener = function (api) {\n    if (this._onRendered) {\n      api.getZr().off('rendered', this._onRendered);\n      this._onRendered = null;\n    }\n  };\n\n  BarView.prototype._clear = function (model) {\n    var group = this.group;\n    var data = this._data;\n\n    if (model && model.isAnimationEnabled() && data && !this._isLargeDraw) {\n      this._removeBackground();\n\n      this._backgroundEls = [];\n      data.eachItemGraphicEl(function (el) {\n        removeElementWithFadeOut(el, model, getECData(el).dataIndex);\n      });\n    } else {\n      group.removeAll();\n    }\n\n    this._data = null;\n    this._isFirstFrame = true;\n  };\n\n  BarView.prototype._removeBackground = function () {\n    this.group.remove(this._backgroundGroup);\n    this._backgroundGroup = null;\n  };\n\n  BarView.type = 'bar';\n  return BarView;\n}(ChartView);\n\nvar clip = {\n  cartesian2d: function (coordSysBoundingRect, layout) {\n    var signWidth = layout.width < 0 ? -1 : 1;\n    var signHeight = layout.height < 0 ? -1 : 1; // Needs positive width and height\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n\n    var coordSysX2 = coordSysBoundingRect.x + coordSysBoundingRect.width;\n    var coordSysY2 = coordSysBoundingRect.y + coordSysBoundingRect.height;\n    var x = mathMax(layout.x, coordSysBoundingRect.x);\n    var x2 = mathMin(layout.x + layout.width, coordSysX2);\n    var y = mathMax(layout.y, coordSysBoundingRect.y);\n    var y2 = mathMin(layout.y + layout.height, coordSysY2);\n    var xClipped = x2 < x;\n    var yClipped = y2 < y; // When xClipped or yClipped, the element will be marked as `ignore`.\n    // But we should also place the element at the edge of the coord sys bounding rect.\n    // Beause if data changed and the bar show again, its transition animaiton\n    // will begin at this place.\n\n    layout.x = xClipped && x > coordSysX2 ? x2 : x;\n    layout.y = yClipped && y > coordSysY2 ? y2 : y;\n    layout.width = xClipped ? 0 : x2 - x;\n    layout.height = yClipped ? 0 : y2 - y; // Reverse back\n\n    if (signWidth < 0) {\n      layout.x += layout.width;\n      layout.width = -layout.width;\n    }\n\n    if (signHeight < 0) {\n      layout.y += layout.height;\n      layout.height = -layout.height;\n    }\n\n    return xClipped || yClipped;\n  },\n  polar: function (coordSysClipArea, layout) {\n    var signR = layout.r0 <= layout.r ? 1 : -1; // Make sure r is larger than r0\n\n    if (signR < 0) {\n      var tmp = layout.r;\n      layout.r = layout.r0;\n      layout.r0 = tmp;\n    }\n\n    var r = mathMin(layout.r, coordSysClipArea.r);\n    var r0 = mathMax(layout.r0, coordSysClipArea.r0);\n    layout.r = r;\n    layout.r0 = r0;\n    var clipped = r - r0 < 0; // Reverse back\n\n    if (signR < 0) {\n      var tmp = layout.r;\n      layout.r = layout.r0;\n      layout.r0 = tmp;\n    }\n\n    return clipped;\n  }\n};\nvar elementCreator = {\n  cartesian2d: function (seriesModel, data, newIndex, layout, isHorizontal, animationModel, axisModel, isUpdate, roundCap) {\n    var rect = new Rect({\n      shape: extend({}, layout),\n      z2: 1\n    });\n    rect.__dataIndex = newIndex;\n    rect.name = 'item';\n\n    if (animationModel) {\n      var rectShape = rect.shape;\n      var animateProperty = isHorizontal ? 'height' : 'width';\n      rectShape[animateProperty] = 0;\n    }\n\n    return rect;\n  },\n  polar: function (seriesModel, data, newIndex, layout, isRadial, animationModel, axisModel, isUpdate, roundCap) {\n    // Keep the same logic with bar in catesion: use end value to control\n    // direction. Notice that if clockwise is true (by default), the sector\n    // will always draw clockwisely, no matter whether endAngle is greater\n    // or less than startAngle.\n    var clockwise = layout.startAngle < layout.endAngle;\n    var ShapeClass = !isRadial && roundCap ? Sausage : Sector;\n    var sector = new ShapeClass({\n      shape: defaults({\n        clockwise: clockwise\n      }, layout),\n      z2: 1\n    });\n    sector.name = 'item';\n    var positionMap = createPolarPositionMapping(isRadial);\n    sector.calculateTextPosition = createSectorCalculateTextPosition(positionMap, {\n      isRoundCap: ShapeClass === Sausage\n    }); // Animation\n\n    if (animationModel) {\n      var sectorShape = sector.shape;\n      var animateProperty = isRadial ? 'r' : 'endAngle';\n      var animateTarget = {};\n      sectorShape[animateProperty] = isRadial ? 0 : layout.startAngle;\n      animateTarget[animateProperty] = layout[animateProperty];\n      (isUpdate ? updateProps : initProps)(sector, {\n        shape: animateTarget // __value: typeof dataValue === 'string' ? parseInt(dataValue, 10) : dataValue\n\n      }, animationModel);\n    }\n\n    return sector;\n  }\n};\n\nfunction shouldRealtimeSort(seriesModel, coordSys) {\n  var realtimeSortOption = seriesModel.get('realtimeSort', true);\n  var baseAxis = coordSys.getBaseAxis();\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (realtimeSortOption) {\n      if (baseAxis.type !== 'category') {\n        warn('`realtimeSort` will not work because this bar series is not based on a category axis.');\n      }\n\n      if (coordSys.type !== 'cartesian2d') {\n        warn('`realtimeSort` will not work because this bar series is not on cartesian2d.');\n      }\n    }\n  }\n\n  if (realtimeSortOption && baseAxis.type === 'category' && coordSys.type === 'cartesian2d') {\n    return {\n      baseAxis: baseAxis,\n      otherAxis: coordSys.getOtherAxis(baseAxis)\n    };\n  }\n}\n\nfunction updateRealtimeAnimation(realtimeSortCfg, seriesAnimationModel, el, layout, newIndex, isHorizontal, isUpdate, isChangeOrder) {\n  var seriesTarget;\n  var axisTarget;\n\n  if (isHorizontal) {\n    axisTarget = {\n      x: layout.x,\n      width: layout.width\n    };\n    seriesTarget = {\n      y: layout.y,\n      height: layout.height\n    };\n  } else {\n    axisTarget = {\n      y: layout.y,\n      height: layout.height\n    };\n    seriesTarget = {\n      x: layout.x,\n      width: layout.width\n    };\n  }\n\n  if (!isChangeOrder) {\n    // Keep the original growth animation if only axis order changed.\n    // Not start a new animation.\n    (isUpdate ? updateProps : initProps)(el, {\n      shape: seriesTarget\n    }, seriesAnimationModel, newIndex, null);\n  }\n\n  var axisAnimationModel = seriesAnimationModel ? realtimeSortCfg.baseAxis.model : null;\n  (isUpdate ? updateProps : initProps)(el, {\n    shape: axisTarget\n  }, axisAnimationModel, newIndex);\n}\n\nfunction checkPropertiesNotValid(obj, props) {\n  for (var i = 0; i < props.length; i++) {\n    if (!isFinite(obj[props[i]])) {\n      return true;\n    }\n  }\n\n  return false;\n}\n\nvar rectPropties = ['x', 'y', 'width', 'height'];\nvar polarPropties = ['cx', 'cy', 'r', 'startAngle', 'endAngle'];\nvar isValidLayout = {\n  cartesian2d: function (layout) {\n    return !checkPropertiesNotValid(layout, rectPropties);\n  },\n  polar: function (layout) {\n    return !checkPropertiesNotValid(layout, polarPropties);\n  }\n};\nvar getLayout = {\n  // itemModel is only used to get borderWidth, which is not needed\n  // when calculating bar background layout.\n  cartesian2d: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    var fixedLineWidth = itemModel ? getLineWidth(itemModel, layout) : 0; // fix layout with lineWidth\n\n    var signX = layout.width > 0 ? 1 : -1;\n    var signY = layout.height > 0 ? 1 : -1;\n    return {\n      x: layout.x + signX * fixedLineWidth / 2,\n      y: layout.y + signY * fixedLineWidth / 2,\n      width: layout.width - signX * fixedLineWidth,\n      height: layout.height - signY * fixedLineWidth\n    };\n  },\n  polar: function (data, dataIndex, itemModel) {\n    var layout = data.getItemLayout(dataIndex);\n    return {\n      cx: layout.cx,\n      cy: layout.cy,\n      r0: layout.r0,\n      r: layout.r,\n      startAngle: layout.startAngle,\n      endAngle: layout.endAngle\n    };\n  }\n};\n\nfunction isZeroOnPolar(layout) {\n  return layout.startAngle != null && layout.endAngle != null && layout.startAngle === layout.endAngle;\n}\n\nfunction createPolarPositionMapping(isRadial) {\n  return function (isRadial) {\n    var arcOrAngle = isRadial ? 'Arc' : 'Angle';\n    return function (position) {\n      switch (position) {\n        case 'start':\n        case 'insideStart':\n        case 'end':\n        case 'insideEnd':\n          return position + arcOrAngle;\n\n        default:\n          return position;\n      }\n    };\n  }(isRadial);\n}\n\nfunction updateStyle(el, data, dataIndex, itemModel, layout, seriesModel, isHorizontalOrRadial, isPolar) {\n  var style = data.getItemVisual(dataIndex, 'style');\n\n  if (!isPolar) {\n    el.setShape('r', itemModel.get(['itemStyle', 'borderRadius']) || 0);\n  }\n\n  el.useStyle(style);\n  var cursorStyle = itemModel.getShallow('cursor');\n  cursorStyle && el.attr('cursor', cursorStyle);\n  var labelPositionOutside = isPolar ? isHorizontalOrRadial ? layout.r >= layout.r0 ? 'endArc' : 'startArc' : layout.endAngle >= layout.startAngle ? 'endAngle' : 'startAngle' : isHorizontalOrRadial ? layout.height >= 0 ? 'bottom' : 'top' : layout.width >= 0 ? 'right' : 'left';\n  var labelStatesModels = getLabelStatesModels(itemModel);\n  setLabelStyle(el, labelStatesModels, {\n    labelFetcher: seriesModel,\n    labelDataIndex: dataIndex,\n    defaultText: getDefaultLabel(seriesModel.getData(), dataIndex),\n    inheritColor: style.fill,\n    defaultOpacity: style.opacity,\n    defaultOutsidePosition: labelPositionOutside\n  });\n  var label = el.getTextContent();\n\n  if (isPolar && label) {\n    var position = itemModel.get(['label', 'position']);\n    el.textConfig.inside = position === 'middle' ? true : null;\n    setSectorTextRotation(el, position === 'outside' ? labelPositionOutside : position, createPolarPositionMapping(isHorizontalOrRadial), itemModel.get(['label', 'rotate']));\n  }\n\n  setLabelValueAnimation(label, labelStatesModels, seriesModel.getRawValue(dataIndex), function (value) {\n    return getDefaultInterpolatedLabel(data, value);\n  });\n  var emphasisModel = itemModel.getModel(['emphasis']);\n  enableHoverEmphasis(el, emphasisModel.get('focus'), emphasisModel.get('blurScope'));\n  setStatesStylesFromModel(el, itemModel);\n\n  if (isZeroOnPolar(layout)) {\n    el.style.fill = 'none';\n    el.style.stroke = 'none';\n    each(el.states, function (state) {\n      if (state.style) {\n        state.style.fill = state.style.stroke = 'none';\n      }\n    });\n  }\n} // In case width or height are too small.\n\n\nfunction getLineWidth(itemModel, rawLayout) {\n  // Has no border.\n  var borderColor = itemModel.get(['itemStyle', 'borderColor']);\n\n  if (!borderColor || borderColor === 'none') {\n    return 0;\n  }\n\n  var lineWidth = itemModel.get(['itemStyle', 'borderWidth']) || 0; // width or height may be NaN for empty data\n\n  var width = isNaN(rawLayout.width) ? Number.MAX_VALUE : Math.abs(rawLayout.width);\n  var height = isNaN(rawLayout.height) ? Number.MAX_VALUE : Math.abs(rawLayout.height);\n  return Math.min(lineWidth, width, height);\n}\n\nvar LagePathShape =\n/** @class */\nfunction () {\n  function LagePathShape() {}\n\n  return LagePathShape;\n}();\n\nvar LargePath =\n/** @class */\nfunction (_super) {\n  __extends(LargePath, _super);\n\n  function LargePath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this.type = 'largeBar';\n    return _this;\n  }\n\n  ;\n\n  LargePath.prototype.getDefaultShape = function () {\n    return new LagePathShape();\n  };\n\n  LargePath.prototype.buildPath = function (ctx, shape) {\n    // Drawing lines is more efficient than drawing\n    // a whole line or drawing rects.\n    var points = shape.points;\n    var startPoint = this.__startPoint;\n    var baseDimIdx = this.__baseDimIdx;\n\n    for (var i = 0; i < points.length; i += 2) {\n      startPoint[baseDimIdx] = points[i + baseDimIdx];\n      ctx.moveTo(startPoint[0], startPoint[1]);\n      ctx.lineTo(points[i], points[i + 1]);\n    }\n  };\n\n  return LargePath;\n}(Path);\n\nfunction createLarge(seriesModel, group, incremental) {\n  // TODO support polar\n  var data = seriesModel.getData();\n  var startPoint = [];\n  var baseDimIdx = data.getLayout('valueAxisHorizontal') ? 1 : 0;\n  startPoint[1 - baseDimIdx] = data.getLayout('valueAxisStart');\n  var largeDataIndices = data.getLayout('largeDataIndices');\n  var barWidth = data.getLayout('barWidth');\n  var backgroundModel = seriesModel.getModel('backgroundStyle');\n  var drawBackground = seriesModel.get('showBackground', true);\n\n  if (drawBackground) {\n    var points = data.getLayout('largeBackgroundPoints');\n    var backgroundStartPoint = [];\n    backgroundStartPoint[1 - baseDimIdx] = data.getLayout('backgroundStart');\n    var bgEl = new LargePath({\n      shape: {\n        points: points\n      },\n      incremental: !!incremental,\n      silent: true,\n      z2: 0\n    });\n    bgEl.__startPoint = backgroundStartPoint;\n    bgEl.__baseDimIdx = baseDimIdx;\n    bgEl.__largeDataIndices = largeDataIndices;\n    bgEl.__barWidth = barWidth;\n    setLargeBackgroundStyle(bgEl, backgroundModel, data);\n    group.add(bgEl);\n  }\n\n  var el = new LargePath({\n    shape: {\n      points: data.getLayout('largePoints')\n    },\n    incremental: !!incremental\n  });\n  el.__startPoint = startPoint;\n  el.__baseDimIdx = baseDimIdx;\n  el.__largeDataIndices = largeDataIndices;\n  el.__barWidth = barWidth;\n  group.add(el);\n  setLargeStyle(el, seriesModel, data); // Enable tooltip and user mouse/touch event handlers.\n\n  getECData(el).seriesIndex = seriesModel.seriesIndex;\n\n  if (!seriesModel.get('silent')) {\n    el.on('mousedown', largePathUpdateDataIndex);\n    el.on('mousemove', largePathUpdateDataIndex);\n  }\n} // Use throttle to avoid frequently traverse to find dataIndex.\n\n\nvar largePathUpdateDataIndex = throttle(function (event) {\n  var largePath = this;\n  var dataIndex = largePathFindDataIndex(largePath, event.offsetX, event.offsetY);\n  getECData(largePath).dataIndex = dataIndex >= 0 ? dataIndex : null;\n}, 30, false);\n\nfunction largePathFindDataIndex(largePath, x, y) {\n  var baseDimIdx = largePath.__baseDimIdx;\n  var valueDimIdx = 1 - baseDimIdx;\n  var points = largePath.shape.points;\n  var largeDataIndices = largePath.__largeDataIndices;\n  var barWidthHalf = Math.abs(largePath.__barWidth / 2);\n  var startValueVal = largePath.__startPoint[valueDimIdx];\n  _eventPos[0] = x;\n  _eventPos[1] = y;\n  var pointerBaseVal = _eventPos[baseDimIdx];\n  var pointerValueVal = _eventPos[1 - baseDimIdx];\n  var baseLowerBound = pointerBaseVal - barWidthHalf;\n  var baseUpperBound = pointerBaseVal + barWidthHalf;\n\n  for (var i = 0, len = points.length / 2; i < len; i++) {\n    var ii = i * 2;\n    var barBaseVal = points[ii + baseDimIdx];\n    var barValueVal = points[ii + valueDimIdx];\n\n    if (barBaseVal >= baseLowerBound && barBaseVal <= baseUpperBound && (startValueVal <= barValueVal ? pointerValueVal >= startValueVal && pointerValueVal <= barValueVal : pointerValueVal >= barValueVal && pointerValueVal <= startValueVal)) {\n      return largeDataIndices[i];\n    }\n  }\n\n  return -1;\n}\n\nfunction setLargeStyle(el, seriesModel, data) {\n  var globalStyle = data.getVisual('style');\n  el.useStyle(extend({}, globalStyle)); // Use stroke instead of fill.\n\n  el.style.fill = null;\n  el.style.stroke = globalStyle.fill;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nfunction setLargeBackgroundStyle(el, backgroundModel, data) {\n  var borderColor = backgroundModel.get('borderColor') || backgroundModel.get('color');\n  var itemStyle = backgroundModel.getItemStyle();\n  el.useStyle(itemStyle);\n  el.style.fill = null;\n  el.style.stroke = borderColor;\n  el.style.lineWidth = data.getLayout('barWidth');\n}\n\nfunction createBackgroundShape(isHorizontalOrRadial, layout, coord) {\n  if (isCoordinateSystemType(coord, 'cartesian2d')) {\n    var rectShape = layout;\n    var coordLayout = coord.getArea();\n    return {\n      x: isHorizontalOrRadial ? rectShape.x : coordLayout.x,\n      y: isHorizontalOrRadial ? coordLayout.y : rectShape.y,\n      width: isHorizontalOrRadial ? rectShape.width : coordLayout.width,\n      height: isHorizontalOrRadial ? coordLayout.height : rectShape.height\n    };\n  } else {\n    var coordLayout = coord.getArea();\n    var sectorShape = layout;\n    return {\n      cx: coordLayout.cx,\n      cy: coordLayout.cy,\n      r0: isHorizontalOrRadial ? coordLayout.r0 : sectorShape.r0,\n      r: isHorizontalOrRadial ? coordLayout.r : sectorShape.r,\n      startAngle: isHorizontalOrRadial ? sectorShape.startAngle : 0,\n      endAngle: isHorizontalOrRadial ? sectorShape.endAngle : Math.PI * 2\n    };\n  }\n}\n\nfunction createBackgroundEl(coord, isHorizontalOrRadial, layout) {\n  var ElementClz = coord.type === 'polar' ? Sector : Rect;\n  return new ElementClz({\n    shape: createBackgroundShape(isHorizontalOrRadial, layout, coord),\n    silent: true,\n    z2: 0\n  });\n}\n\nexport default BarView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util';\nimport { layout, largeLayout } from '../../layout/barGrid';\nimport dataSample from '../../processor/dataSample';\nimport BarSeries from './BarSeries';\nimport BarView from './BarView';\nexport function install(registers) {\n  registers.registerChartView(BarView);\n  registers.registerSeriesModel(BarSeries);\n  registers.registerLayout(registers.PRIORITY.VISUAL.LAYOUT, zrUtil.curry(layout, 'bar')); // Use higher prority to avoid to be blocked by other overall layout, which do not\n  // only exist in this module, but probably also exist in other modules, like `barPolar`.\n\n  registers.registerLayout(registers.PRIORITY.VISUAL.PROGRESSIVE_LAYOUT, largeLayout); // Down sample after filter\n\n  registers.registerProcessor(registers.PRIORITY.PROCESSOR.STATISTIC, dataSample('bar'));\n  /**\n   * @payload\n   * @property {string} [componentType=series]\n   * @property {number} [dx]\n   * @property {number} [dy]\n   * @property {number} [zoom]\n   * @property {number} [originX]\n   * @property {number} [originY]\n   */\n\n  registers.registerAction({\n    type: 'changeAxisOrder',\n    event: 'changeAxisOrder',\n    update: 'update'\n  }, function (payload, ecModel) {\n    var componentType = payload.componentType || 'series';\n    ecModel.eachComponent({\n      mainType: componentType,\n      query: payload\n    }, function (componentModel) {\n      if (payload.sortInfo) {\n        componentModel.axis.setCategorySortInfo(payload.sortInfo);\n      }\n    });\n  });\n}"],"sourceRoot":""}