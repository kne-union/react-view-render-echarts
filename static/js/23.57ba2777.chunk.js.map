{"version":3,"sources":["../../node_modules/echarts/core.js","../../node_modules/echarts/lib/chart/helper/createSeriesDataSimply.js","../../node_modules/echarts/lib/visual/LegendVisualProvider.js","../../node_modules/echarts/lib/processor/dataFilter.js","../../node_modules/echarts/lib/chart/radar/radarLayout.js","../../node_modules/echarts/lib/chart/radar/backwardCompat.js","../../node_modules/echarts/lib/chart/radar/RadarView.js","../../node_modules/echarts/lib/chart/radar/RadarSeries.js","../../node_modules/echarts/lib/coord/radar/RadarModel.js","../../node_modules/echarts/lib/component/radar/RadarView.js","../../node_modules/echarts/lib/coord/radar/IndicatorAxis.js","../../node_modules/echarts/lib/coord/radar/Radar.js","../../node_modules/echarts/lib/component/radar/install.js","../../node_modules/echarts/lib/chart/radar/install.js"],"names":["createSeriesDataSimply","seriesModel","opt","nameList","isArray","coordDimensions","extend","encodeDefine","getEncode","source","getSource","dimensions","prepareSeriesDataSchema","list","SeriesData","initData","LegendVisualProvider","getDataWithEncodedVisual","getRawData","this","_getDataWithEncodedVisual","_getRawData","prototype","getAllNames","rawData","mapArray","getName","containName","name","indexOfName","getItemVisual","dataIndex","key","dataFilter","seriesType","reset","ecModel","legendModels","findComponents","mainType","length","data","getData","filterSelf","idx","i","isSelected","radarLayout","eachSeriesByType","points","coordSys","coordinateSystem","axes","getIndicatorAxes","zrUtil","axis","axisIndex","each","mapDimension","dim","val","point","dataToPoint","isValidPoint","getValueMissingPoint","firstPoint","push","slice","setItemLayout","isNaN","cx","cy","radarBackwardCompat","option","polarOptArr","polar","polarNotRadar_1","polarOpt","indicator","type","shape","radar","series","seriesOpt","polarIndex","radarIndex","RadarView","_super","_this","apply","arguments","__extends","render","api","group","oldData","_data","createSymbol","symbolType","symbolSize","symbolUtil","symbolPath","symbolRotate","attr","style","strokeNoScale","z2","scaleX","scaleY","rotation","Math","PI","updateSymbols","oldPoints","newPoints","symbolGroup","isInit","removeAll","__dimIdx","setPosition","graphic","x","y","add","getInitialPoints","pt","diff","getItemLayout","polygon","polyline","target","itemGroup","setItemGraphicEl","update","newIdx","oldIdx","getItemGraphicEl","childAt","saveOldStyle","remove","execute","eachItemGraphicEl","itemModel","getItemModel","itemStyle","color","fill","useStyle","getModel","getLineStyle","stroke","setStatesStylesFromModel","areaStyleModel","polygonIgnore","isEmpty","parentModel","ignore","stateName","stateModel","stateIgnore","ensureState","getAreaStyle","opacity","decal","emphasisModel","itemHoverStyle","getItemStyle","eachChild","ZRImage","pathStyle","image","width","height","setColor","defaultText","getStore","get","getDimensionIndex","setLabelStyle","getLabelStatesModels","labelFetcher","hostModel","labelDataIndex","labelDimIndex","inheritColor","defaultOpacity","enableHoverEmphasis","ChartView","RadarSeriesModel","hasSymbolVisual","init","legendVisualProvider","getInitialData","generateCoord","generateCoordCount","Infinity","formatTooltip","multipleSeries","dataType","indicatorAxes","nameToDisplay","markerColor","retrieveVisualColorForTooltipMarker","createTooltipMarkup","header","sortBlocks","blocks","markerType","value","sortParam","getTooltipPosition","data_1","values","getValues","len","coordToPoint","dataToCoord","dependencies","defaultOption","zlevel","z","colorBy","legendHoverLink","lineStyle","join","label","position","SeriesModel","valueAxisDefault","axisDefault","defaultsShow","show","RadarModel","optionUpdated","boundaryGap","splitNumber","scale","axisLine","axisTick","axisLabel","nameTextStyle","showName","nameFormatter","nameGap","triggerEvent","indicatorModels","indicatorOpt","max","min","iNameTextStyle","innerIndicatorOpt","text","nameLocation","indName","replace","model","Model","AxisModelCommonMixin","componentIndex","_indicatorModels","getIndicatorModels","center","radius","startAngle","axisName","axisNameGap","splitLine","splitArea","ComponentModel","axisBuilderAttrs","radarModel","_buildAxes","_buildSplitLineAndArea","axisBuilders","indicatorAxis","AxisBuilder","angle","labelDirection","tickDirection","nameDirection","axisBuilder","getGroup","splitLineModel","splitAreaModel","lineStyleModel","showSplitLine","showSplitArea","splitLineColors","splitAreaColors","splitLineColorsArr","splitAreaColorsArr","splitLines","splitAreas","ticksRadius","getTicksCoords","getColorIndex","r","coord","r0","realSplitNumber_1","axesTicksPoints","ticksCoords","tickCoord","prevPoints","j","concat","reverse","areaStyle","silent","areaOrLine","areaOrLineColorList","colorIndex","ComponentView","IndicatorAxis","radiusExtent","call","Axis","Radar","_model","_indicatorAxes","map","indicatorModel","IntervalScale","resize","indicatorIndex","cos","sin","pointToData","dx","dy","sqrt","closestAxis","radian","atan2","minRadianDiff","closestAxisIdx","abs","coordToData","viewWidth","getWidth","viewHeight","getHeight","viewSize","numberUtil","setExtent","radarSeries","getComponent","unionExtentFromData","increaseInterval","interval","exp10","pow","floor","log","LN10","f","rawExtent","getScaleExtent","extent","niceScaleExtent","axisModel","fixedMin","parseAxisModelMinMax","fixedMax","getInterval","setInterval","isFinite","getTicks","ceil","convertToPixel","finder","console","warn","convertFromPixel","pixel","containPoint","create","radarList","eachComponent","install","registers","registerCoordinateSystem","registerComponentModel","registerComponentView","registerVisual","setItemVisual","setVisual","use","installRadarComponent","registerChartView","registerSeriesModel","registerLayout","registerProcessor","registerPreprocessor","backwardCompat"],"mappings":"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","file":"static/js/23.57ba2777.chunk.js","sourcesContent":["/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nexport * from './lib/export/core';","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport prepareSeriesDataSchema from '../../data/helper/createDimensions';\nimport SeriesData from '../../data/SeriesData';\nimport { extend, isArray } from 'zrender/lib/core/util';\n/**\n * [Usage]:\n * (1)\n * createListSimply(seriesModel, ['value']);\n * (2)\n * createListSimply(seriesModel, {\n *     coordDimensions: ['value'],\n *     dimensionsCount: 5\n * });\n */\n\nexport default function createSeriesDataSimply(seriesModel, opt, nameList) {\n  opt = isArray(opt) && {\n    coordDimensions: opt\n  } || extend({\n    encodeDefine: seriesModel.getEncode()\n  }, opt);\n  var source = seriesModel.getSource();\n  var dimensions = prepareSeriesDataSchema(source, opt).dimensions;\n  var list = new SeriesData(dimensions, seriesModel);\n  list.initData(source, nameList);\n  return list;\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * LegendVisualProvider is an bridge that pick encoded color from data and\n * provide to the legend component.\n */\nvar LegendVisualProvider =\n/** @class */\nfunction () {\n  function LegendVisualProvider( // Function to get data after filtered. It stores all the encoding info\n  getDataWithEncodedVisual, // Function to get raw data before filtered.\n  getRawData) {\n    this._getDataWithEncodedVisual = getDataWithEncodedVisual;\n    this._getRawData = getRawData;\n  }\n\n  LegendVisualProvider.prototype.getAllNames = function () {\n    var rawData = this._getRawData(); // We find the name from the raw data. In case it's filtered by the legend component.\n    // Normally, the name can be found in rawData, but can't be found in filtered data will display as gray.\n\n\n    return rawData.mapArray(rawData.getName);\n  };\n\n  LegendVisualProvider.prototype.containName = function (name) {\n    var rawData = this._getRawData();\n\n    return rawData.indexOfName(name) >= 0;\n  };\n\n  LegendVisualProvider.prototype.indexOfName = function (name) {\n    // Only get data when necessary.\n    // Because LegendVisualProvider constructor may be new in the stage that data is not prepared yet.\n    // Invoking Series#getData immediately will throw an error.\n    var dataWithEncodedVisual = this._getDataWithEncodedVisual();\n\n    return dataWithEncodedVisual.indexOfName(name);\n  };\n\n  LegendVisualProvider.prototype.getItemVisual = function (dataIndex, key) {\n    // Get encoded visual properties from final filtered data.\n    var dataWithEncodedVisual = this._getDataWithEncodedVisual();\n\n    return dataWithEncodedVisual.getItemVisual(dataIndex, key);\n  };\n\n  return LegendVisualProvider;\n}();\n\nexport default LegendVisualProvider;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nexport default function dataFilter(seriesType) {\n  return {\n    seriesType: seriesType,\n    reset: function (seriesModel, ecModel) {\n      var legendModels = ecModel.findComponents({\n        mainType: 'legend'\n      });\n\n      if (!legendModels || !legendModels.length) {\n        return;\n      }\n\n      var data = seriesModel.getData();\n      data.filterSelf(function (idx) {\n        var name = data.getName(idx); // If in any legend component the status is not selected.\n\n        for (var i = 0; i < legendModels.length; i++) {\n          // @ts-ignore FIXME: LegendModel\n          if (!legendModels[i].isSelected(name)) {\n            return false;\n          }\n        }\n\n        return true;\n      });\n    }\n  };\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util';\nexport default function radarLayout(ecModel) {\n  ecModel.eachSeriesByType('radar', function (seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (!coordSys) {\n      return;\n    }\n\n    var axes = coordSys.getIndicatorAxes();\n    zrUtil.each(axes, function (axis, axisIndex) {\n      data.each(data.mapDimension(axes[axisIndex].dim), function (val, dataIndex) {\n        points[dataIndex] = points[dataIndex] || [];\n        var point = coordSys.dataToPoint(val, axisIndex);\n        points[dataIndex][axisIndex] = isValidPoint(point) ? point : getValueMissingPoint(coordSys);\n      });\n    }); // Close polygon\n\n    data.each(function (idx) {\n      // TODO\n      // Is it appropriate to connect to the next data when some data is missing?\n      // Or, should trade it like `connectNull` in line chart?\n      var firstPoint = zrUtil.find(points[idx], function (point) {\n        return isValidPoint(point);\n      }) || getValueMissingPoint(coordSys); // Copy the first actual point to the end of the array\n\n      points[idx].push(firstPoint.slice());\n      data.setItemLayout(idx, points[idx]);\n    });\n  });\n}\n\nfunction isValidPoint(point) {\n  return !isNaN(point[0]) && !isNaN(point[1]);\n}\n\nfunction getValueMissingPoint(coordSys) {\n  // It is error-prone to input [NaN, NaN] into polygon, polygon.\n  // (probably cause problem when refreshing or animating)\n  return [coordSys.cx, coordSys.cy];\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// @ts-nocheck\n// Backward compat for radar chart in 2\nimport * as zrUtil from 'zrender/lib/core/util';\nexport default function radarBackwardCompat(option) {\n  var polarOptArr = option.polar;\n\n  if (polarOptArr) {\n    if (!zrUtil.isArray(polarOptArr)) {\n      polarOptArr = [polarOptArr];\n    }\n\n    var polarNotRadar_1 = [];\n    zrUtil.each(polarOptArr, function (polarOpt, idx) {\n      if (polarOpt.indicator) {\n        if (polarOpt.type && !polarOpt.shape) {\n          polarOpt.shape = polarOpt.type;\n        }\n\n        option.radar = option.radar || [];\n\n        if (!zrUtil.isArray(option.radar)) {\n          option.radar = [option.radar];\n        }\n\n        option.radar.push(polarOpt);\n      } else {\n        polarNotRadar_1.push(polarOpt);\n      }\n    });\n    option.polar = polarNotRadar_1;\n  }\n\n  zrUtil.each(option.series, function (seriesOpt) {\n    if (seriesOpt && seriesOpt.type === 'radar' && seriesOpt.polarIndex) {\n      seriesOpt.radarIndex = seriesOpt.polarIndex;\n    }\n  });\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as graphic from '../../util/graphic';\nimport { setStatesStylesFromModel, enableHoverEmphasis } from '../../util/states';\nimport * as zrUtil from 'zrender/lib/core/util';\nimport * as symbolUtil from '../../util/symbol';\nimport ChartView from '../../view/Chart';\nimport { setLabelStyle, getLabelStatesModels } from '../../label/labelStyle';\nimport ZRImage from 'zrender/lib/graphic/Image';\nimport { saveOldStyle } from '../../animation/basicTrasition';\n\nvar RadarView =\n/** @class */\nfunction (_super) {\n  __extends(RadarView, _super);\n\n  function RadarView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = RadarView.type;\n    return _this;\n  }\n\n  RadarView.prototype.render = function (seriesModel, ecModel, api) {\n    var polar = seriesModel.coordinateSystem;\n    var group = this.group;\n    var data = seriesModel.getData();\n    var oldData = this._data;\n\n    function createSymbol(data, idx) {\n      var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n\n      if (symbolType === 'none') {\n        return;\n      }\n\n      var symbolSize = symbolUtil.normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n      var symbolPath = symbolUtil.createSymbol(symbolType, -1, -1, 2, 2);\n      var symbolRotate = data.getItemVisual(idx, 'symbolRotate') || 0;\n      symbolPath.attr({\n        style: {\n          strokeNoScale: true\n        },\n        z2: 100,\n        scaleX: symbolSize[0] / 2,\n        scaleY: symbolSize[1] / 2,\n        rotation: symbolRotate * Math.PI / 180 || 0\n      });\n      return symbolPath;\n    }\n\n    function updateSymbols(oldPoints, newPoints, symbolGroup, data, idx, isInit) {\n      // Simply rerender all\n      symbolGroup.removeAll();\n\n      for (var i = 0; i < newPoints.length - 1; i++) {\n        var symbolPath = createSymbol(data, idx);\n\n        if (symbolPath) {\n          symbolPath.__dimIdx = i;\n\n          if (oldPoints[i]) {\n            symbolPath.setPosition(oldPoints[i]);\n            graphic[isInit ? 'initProps' : 'updateProps'](symbolPath, {\n              x: newPoints[i][0],\n              y: newPoints[i][1]\n            }, seriesModel, idx);\n          } else {\n            symbolPath.setPosition(newPoints[i]);\n          }\n\n          symbolGroup.add(symbolPath);\n        }\n      }\n    }\n\n    function getInitialPoints(points) {\n      return zrUtil.map(points, function (pt) {\n        return [polar.cx, polar.cy];\n      });\n    }\n\n    data.diff(oldData).add(function (idx) {\n      var points = data.getItemLayout(idx);\n\n      if (!points) {\n        return;\n      }\n\n      var polygon = new graphic.Polygon();\n      var polyline = new graphic.Polyline();\n      var target = {\n        shape: {\n          points: points\n        }\n      };\n      polygon.shape.points = getInitialPoints(points);\n      polyline.shape.points = getInitialPoints(points);\n      graphic.initProps(polygon, target, seriesModel, idx);\n      graphic.initProps(polyline, target, seriesModel, idx);\n      var itemGroup = new graphic.Group();\n      var symbolGroup = new graphic.Group();\n      itemGroup.add(polyline);\n      itemGroup.add(polygon);\n      itemGroup.add(symbolGroup);\n      updateSymbols(polyline.shape.points, points, symbolGroup, data, idx, true);\n      data.setItemGraphicEl(idx, itemGroup);\n    }).update(function (newIdx, oldIdx) {\n      var itemGroup = oldData.getItemGraphicEl(oldIdx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2);\n      var target = {\n        shape: {\n          points: data.getItemLayout(newIdx)\n        }\n      };\n\n      if (!target.shape.points) {\n        return;\n      }\n\n      updateSymbols(polyline.shape.points, target.shape.points, symbolGroup, data, newIdx, false);\n      saveOldStyle(polygon);\n      saveOldStyle(polyline);\n      graphic.updateProps(polyline, target, seriesModel);\n      graphic.updateProps(polygon, target, seriesModel);\n      data.setItemGraphicEl(newIdx, itemGroup);\n    }).remove(function (idx) {\n      group.remove(oldData.getItemGraphicEl(idx));\n    }).execute();\n    data.eachItemGraphicEl(function (itemGroup, idx) {\n      var itemModel = data.getItemModel(idx);\n      var polyline = itemGroup.childAt(0);\n      var polygon = itemGroup.childAt(1);\n      var symbolGroup = itemGroup.childAt(2); // Radar uses the visual encoded from itemStyle.\n\n      var itemStyle = data.getItemVisual(idx, 'style');\n      var color = itemStyle.fill;\n      group.add(itemGroup);\n      polyline.useStyle(zrUtil.defaults(itemModel.getModel('lineStyle').getLineStyle(), {\n        fill: 'none',\n        stroke: color\n      }));\n      setStatesStylesFromModel(polyline, itemModel, 'lineStyle');\n      setStatesStylesFromModel(polygon, itemModel, 'areaStyle');\n      var areaStyleModel = itemModel.getModel('areaStyle');\n      var polygonIgnore = areaStyleModel.isEmpty() && areaStyleModel.parentModel.isEmpty();\n      polygon.ignore = polygonIgnore;\n      zrUtil.each(['emphasis', 'select', 'blur'], function (stateName) {\n        var stateModel = itemModel.getModel([stateName, 'areaStyle']);\n        var stateIgnore = stateModel.isEmpty() && stateModel.parentModel.isEmpty(); // Won't be ignore if normal state is not ignore.\n\n        polygon.ensureState(stateName).ignore = stateIgnore && polygonIgnore;\n      });\n      polygon.useStyle(zrUtil.defaults(areaStyleModel.getAreaStyle(), {\n        fill: color,\n        opacity: 0.7,\n        decal: itemStyle.decal\n      }));\n      var emphasisModel = itemModel.getModel('emphasis');\n      var itemHoverStyle = emphasisModel.getModel('itemStyle').getItemStyle();\n      symbolGroup.eachChild(function (symbolPath) {\n        if (symbolPath instanceof ZRImage) {\n          var pathStyle = symbolPath.style;\n          symbolPath.useStyle(zrUtil.extend({\n            // TODO other properties like x, y ?\n            image: pathStyle.image,\n            x: pathStyle.x,\n            y: pathStyle.y,\n            width: pathStyle.width,\n            height: pathStyle.height\n          }, itemStyle));\n        } else {\n          symbolPath.useStyle(itemStyle);\n          symbolPath.setColor(color);\n          symbolPath.style.strokeNoScale = true;\n        }\n\n        var pathEmphasisState = symbolPath.ensureState('emphasis');\n        pathEmphasisState.style = zrUtil.clone(itemHoverStyle);\n        var defaultText = data.getStore().get(data.getDimensionIndex(symbolPath.__dimIdx), idx);\n        (defaultText == null || isNaN(defaultText)) && (defaultText = '');\n        setLabelStyle(symbolPath, getLabelStatesModels(itemModel), {\n          labelFetcher: data.hostModel,\n          labelDataIndex: idx,\n          labelDimIndex: symbolPath.__dimIdx,\n          defaultText: defaultText,\n          inheritColor: color,\n          defaultOpacity: itemStyle.opacity\n        });\n      });\n      enableHoverEmphasis(itemGroup, emphasisModel.get('focus'), emphasisModel.get('blurScope'));\n    });\n    this._data = data;\n  };\n\n  RadarView.prototype.remove = function () {\n    this.group.removeAll();\n    this._data = null;\n  };\n\n  RadarView.type = 'radar';\n  return RadarView;\n}(ChartView);\n\nexport default RadarView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport SeriesModel from '../../model/Series';\nimport createSeriesDataSimply from '../helper/createSeriesDataSimply';\nimport * as zrUtil from 'zrender/lib/core/util';\nimport LegendVisualProvider from '../../visual/LegendVisualProvider';\nimport { createTooltipMarkup, retrieveVisualColorForTooltipMarker } from '../../component/tooltip/tooltipMarkup';\n\nvar RadarSeriesModel =\n/** @class */\nfunction (_super) {\n  __extends(RadarSeriesModel, _super);\n\n  function RadarSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = RadarSeriesModel.type;\n    _this.hasSymbolVisual = true;\n    return _this;\n  } // Overwrite\n\n\n  RadarSeriesModel.prototype.init = function (option) {\n    _super.prototype.init.apply(this, arguments); // Enable legend selection for each data item\n    // Use a function instead of direct access because data reference may changed\n\n\n    this.legendVisualProvider = new LegendVisualProvider(zrUtil.bind(this.getData, this), zrUtil.bind(this.getRawData, this));\n  };\n\n  RadarSeriesModel.prototype.getInitialData = function (option, ecModel) {\n    return createSeriesDataSimply(this, {\n      generateCoord: 'indicator_',\n      generateCoordCount: Infinity\n    });\n  };\n\n  RadarSeriesModel.prototype.formatTooltip = function (dataIndex, multipleSeries, dataType) {\n    var data = this.getData();\n    var coordSys = this.coordinateSystem;\n    var indicatorAxes = coordSys.getIndicatorAxes();\n    var name = this.getData().getName(dataIndex);\n    var nameToDisplay = name === '' ? this.name : name;\n    var markerColor = retrieveVisualColorForTooltipMarker(this, dataIndex);\n    return createTooltipMarkup('section', {\n      header: nameToDisplay,\n      sortBlocks: true,\n      blocks: zrUtil.map(indicatorAxes, function (axis) {\n        var val = data.get(data.mapDimension(axis.dim), dataIndex);\n        return createTooltipMarkup('nameValue', {\n          markerType: 'subItem',\n          markerColor: markerColor,\n          name: axis.name,\n          value: val,\n          sortParam: val\n        });\n      })\n    });\n  };\n\n  RadarSeriesModel.prototype.getTooltipPosition = function (dataIndex) {\n    if (dataIndex != null) {\n      var data_1 = this.getData();\n      var coordSys = this.coordinateSystem;\n      var values = data_1.getValues(zrUtil.map(coordSys.dimensions, function (dim) {\n        return data_1.mapDimension(dim);\n      }), dataIndex);\n\n      for (var i = 0, len = values.length; i < len; i++) {\n        if (!isNaN(values[i])) {\n          var indicatorAxes = coordSys.getIndicatorAxes();\n          return coordSys.coordToPoint(indicatorAxes[i].dataToCoord(values[i]), i);\n        }\n      }\n    }\n  };\n\n  RadarSeriesModel.type = 'series.radar';\n  RadarSeriesModel.dependencies = ['radar'];\n  RadarSeriesModel.defaultOption = {\n    zlevel: 0,\n    z: 2,\n    colorBy: 'data',\n    coordinateSystem: 'radar',\n    legendHoverLink: true,\n    radarIndex: 0,\n    lineStyle: {\n      width: 2,\n      type: 'solid',\n      join: 'round'\n    },\n    label: {\n      position: 'top'\n    },\n    // areaStyle: {\n    // },\n    // itemStyle: {}\n    symbolSize: 8 // symbolRotate: null\n\n  };\n  return RadarSeriesModel;\n}(SeriesModel);\n\nexport default RadarSeriesModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util';\nimport axisDefault from '../axisDefault';\nimport Model from '../../model/Model';\nimport { AxisModelCommonMixin } from '../axisModelCommonMixin';\nimport ComponentModel from '../../model/Component';\nvar valueAxisDefault = axisDefault.value;\n\nfunction defaultsShow(opt, show) {\n  return zrUtil.defaults({\n    show: show\n  }, opt);\n}\n\nvar RadarModel =\n/** @class */\nfunction (_super) {\n  __extends(RadarModel, _super);\n\n  function RadarModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = RadarModel.type;\n    return _this;\n  }\n\n  RadarModel.prototype.optionUpdated = function () {\n    var boundaryGap = this.get('boundaryGap');\n    var splitNumber = this.get('splitNumber');\n    var scale = this.get('scale');\n    var axisLine = this.get('axisLine');\n    var axisTick = this.get('axisTick'); // let axisType = this.get('axisType');\n\n    var axisLabel = this.get('axisLabel');\n    var nameTextStyle = this.get('axisName');\n    var showName = this.get(['axisName', 'show']);\n    var nameFormatter = this.get(['axisName', 'formatter']);\n    var nameGap = this.get('axisNameGap');\n    var triggerEvent = this.get('triggerEvent');\n    var indicatorModels = zrUtil.map(this.get('indicator') || [], function (indicatorOpt) {\n      // PENDING\n      if (indicatorOpt.max != null && indicatorOpt.max > 0 && !indicatorOpt.min) {\n        indicatorOpt.min = 0;\n      } else if (indicatorOpt.min != null && indicatorOpt.min < 0 && !indicatorOpt.max) {\n        indicatorOpt.max = 0;\n      }\n\n      var iNameTextStyle = nameTextStyle;\n\n      if (indicatorOpt.color != null) {\n        iNameTextStyle = zrUtil.defaults({\n          color: indicatorOpt.color\n        }, nameTextStyle);\n      } // Use same configuration\n\n\n      var innerIndicatorOpt = zrUtil.merge(zrUtil.clone(indicatorOpt), {\n        boundaryGap: boundaryGap,\n        splitNumber: splitNumber,\n        scale: scale,\n        axisLine: axisLine,\n        axisTick: axisTick,\n        // axisType: axisType,\n        axisLabel: axisLabel,\n        // Compatible with 2 and use text\n        name: indicatorOpt.text,\n        nameLocation: 'end',\n        nameGap: nameGap,\n        // min: 0,\n        nameTextStyle: iNameTextStyle,\n        triggerEvent: triggerEvent\n      }, false);\n\n      if (!showName) {\n        innerIndicatorOpt.name = '';\n      }\n\n      if (typeof nameFormatter === 'string') {\n        var indName = innerIndicatorOpt.name;\n        innerIndicatorOpt.name = nameFormatter.replace('{value}', indName != null ? indName : '');\n      } else if (typeof nameFormatter === 'function') {\n        innerIndicatorOpt.name = nameFormatter(innerIndicatorOpt.name, innerIndicatorOpt);\n      }\n\n      var model = new Model(innerIndicatorOpt, null, this.ecModel);\n      zrUtil.mixin(model, AxisModelCommonMixin.prototype); // For triggerEvent.\n\n      model.mainType = 'radar';\n      model.componentIndex = this.componentIndex;\n      return model;\n    }, this);\n    this._indicatorModels = indicatorModels;\n  };\n\n  RadarModel.prototype.getIndicatorModels = function () {\n    return this._indicatorModels;\n  };\n\n  RadarModel.type = 'radar';\n  RadarModel.defaultOption = {\n    zlevel: 0,\n    z: 0,\n    center: ['50%', '50%'],\n    radius: '75%',\n    startAngle: 90,\n    axisName: {\n      show: true // formatter: null\n      // textStyle: {}\n\n    },\n    boundaryGap: [0, 0],\n    splitNumber: 5,\n    axisNameGap: 15,\n    scale: false,\n    // Polygon or circle\n    shape: 'polygon',\n    axisLine: zrUtil.merge({\n      lineStyle: {\n        color: '#bbb'\n      }\n    }, valueAxisDefault.axisLine),\n    axisLabel: defaultsShow(valueAxisDefault.axisLabel, false),\n    axisTick: defaultsShow(valueAxisDefault.axisTick, false),\n    // axisType: 'value',\n    splitLine: defaultsShow(valueAxisDefault.splitLine, true),\n    splitArea: defaultsShow(valueAxisDefault.splitArea, true),\n    // {text, min, max}\n    indicator: []\n  };\n  return RadarModel;\n}(ComponentModel);\n\nexport default RadarModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util';\nimport AxisBuilder from '../axis/AxisBuilder';\nimport * as graphic from '../../util/graphic';\nimport ComponentView from '../../view/Component';\nvar axisBuilderAttrs = ['axisLine', 'axisTickLabel', 'axisName'];\n\nvar RadarView =\n/** @class */\nfunction (_super) {\n  __extends(RadarView, _super);\n\n  function RadarView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = RadarView.type;\n    return _this;\n  }\n\n  RadarView.prototype.render = function (radarModel, ecModel, api) {\n    var group = this.group;\n    group.removeAll();\n\n    this._buildAxes(radarModel);\n\n    this._buildSplitLineAndArea(radarModel);\n  };\n\n  RadarView.prototype._buildAxes = function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n    var axisBuilders = zrUtil.map(indicatorAxes, function (indicatorAxis) {\n      var axisBuilder = new AxisBuilder(indicatorAxis.model, {\n        position: [radar.cx, radar.cy],\n        rotation: indicatorAxis.angle,\n        labelDirection: -1,\n        tickDirection: -1,\n        nameDirection: 1\n      });\n      return axisBuilder;\n    });\n    zrUtil.each(axisBuilders, function (axisBuilder) {\n      zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n      this.group.add(axisBuilder.getGroup());\n    }, this);\n  };\n\n  RadarView.prototype._buildSplitLineAndArea = function (radarModel) {\n    var radar = radarModel.coordinateSystem;\n    var indicatorAxes = radar.getIndicatorAxes();\n\n    if (!indicatorAxes.length) {\n      return;\n    }\n\n    var shape = radarModel.get('shape');\n    var splitLineModel = radarModel.getModel('splitLine');\n    var splitAreaModel = radarModel.getModel('splitArea');\n    var lineStyleModel = splitLineModel.getModel('lineStyle');\n    var areaStyleModel = splitAreaModel.getModel('areaStyle');\n    var showSplitLine = splitLineModel.get('show');\n    var showSplitArea = splitAreaModel.get('show');\n    var splitLineColors = lineStyleModel.get('color');\n    var splitAreaColors = areaStyleModel.get('color');\n    var splitLineColorsArr = zrUtil.isArray(splitLineColors) ? splitLineColors : [splitLineColors];\n    var splitAreaColorsArr = zrUtil.isArray(splitAreaColors) ? splitAreaColors : [splitAreaColors];\n    var splitLines = [];\n    var splitAreas = [];\n\n    function getColorIndex(areaOrLine, areaOrLineColorList, idx) {\n      var colorIndex = idx % areaOrLineColorList.length;\n      areaOrLine[colorIndex] = areaOrLine[colorIndex] || [];\n      return colorIndex;\n    }\n\n    if (shape === 'circle') {\n      var ticksRadius = indicatorAxes[0].getTicksCoords();\n      var cx = radar.cx;\n      var cy = radar.cy;\n\n      for (var i = 0; i < ticksRadius.length; i++) {\n        if (showSplitLine) {\n          var colorIndex = getColorIndex(splitLines, splitLineColorsArr, i);\n          splitLines[colorIndex].push(new graphic.Circle({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r: ticksRadius[i].coord\n            }\n          }));\n        }\n\n        if (showSplitArea && i < ticksRadius.length - 1) {\n          var colorIndex = getColorIndex(splitAreas, splitAreaColorsArr, i);\n          splitAreas[colorIndex].push(new graphic.Ring({\n            shape: {\n              cx: cx,\n              cy: cy,\n              r0: ticksRadius[i].coord,\n              r: ticksRadius[i + 1].coord\n            }\n          }));\n        }\n      }\n    } // Polyyon\n    else {\n        var realSplitNumber_1;\n        var axesTicksPoints = zrUtil.map(indicatorAxes, function (indicatorAxis, idx) {\n          var ticksCoords = indicatorAxis.getTicksCoords();\n          realSplitNumber_1 = realSplitNumber_1 == null ? ticksCoords.length - 1 : Math.min(ticksCoords.length - 1, realSplitNumber_1);\n          return zrUtil.map(ticksCoords, function (tickCoord) {\n            return radar.coordToPoint(tickCoord.coord, idx);\n          });\n        });\n        var prevPoints = [];\n\n        for (var i = 0; i <= realSplitNumber_1; i++) {\n          var points = [];\n\n          for (var j = 0; j < indicatorAxes.length; j++) {\n            points.push(axesTicksPoints[j][i]);\n          } // Close\n\n\n          if (points[0]) {\n            points.push(points[0].slice());\n          } else {\n            if (process.env.NODE_ENV !== 'production') {\n              console.error('Can\\'t draw value axis ' + i);\n            }\n          }\n\n          if (showSplitLine) {\n            var colorIndex = getColorIndex(splitLines, splitLineColorsArr, i);\n            splitLines[colorIndex].push(new graphic.Polyline({\n              shape: {\n                points: points\n              }\n            }));\n          }\n\n          if (showSplitArea && prevPoints) {\n            var colorIndex = getColorIndex(splitAreas, splitAreaColorsArr, i - 1);\n            splitAreas[colorIndex].push(new graphic.Polygon({\n              shape: {\n                points: points.concat(prevPoints)\n              }\n            }));\n          }\n\n          prevPoints = points.slice().reverse();\n        }\n      }\n\n    var lineStyle = lineStyleModel.getLineStyle();\n    var areaStyle = areaStyleModel.getAreaStyle(); // Add splitArea before splitLine\n\n    zrUtil.each(splitAreas, function (splitAreas, idx) {\n      this.group.add(graphic.mergePath(splitAreas, {\n        style: zrUtil.defaults({\n          stroke: 'none',\n          fill: splitAreaColorsArr[idx % splitAreaColorsArr.length]\n        }, areaStyle),\n        silent: true\n      }));\n    }, this);\n    zrUtil.each(splitLines, function (splitLines, idx) {\n      this.group.add(graphic.mergePath(splitLines, {\n        style: zrUtil.defaults({\n          fill: 'none',\n          stroke: splitLineColorsArr[idx % splitLineColorsArr.length]\n        }, lineStyle),\n        silent: true\n      }));\n    }, this);\n  };\n\n  RadarView.type = 'radar';\n  return RadarView;\n}(ComponentView);\n\nexport default RadarView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport Axis from '../Axis';\n\nvar IndicatorAxis =\n/** @class */\nfunction (_super) {\n  __extends(IndicatorAxis, _super);\n\n  function IndicatorAxis(dim, scale, radiusExtent) {\n    var _this = _super.call(this, dim, scale, radiusExtent) || this;\n\n    _this.type = 'value';\n    _this.angle = 0;\n    _this.name = '';\n    return _this;\n  }\n\n  return IndicatorAxis;\n}(Axis);\n\nexport default IndicatorAxis;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// TODO clockwise\nimport IndicatorAxis from './IndicatorAxis';\nimport IntervalScale from '../../scale/Interval';\nimport * as numberUtil from '../../util/number';\nimport { getScaleExtent, niceScaleExtent } from '../axisHelper';\nimport { parseAxisModelMinMax } from '../scaleRawExtentInfo';\nimport { map, each } from 'zrender/lib/core/util';\n\nvar Radar =\n/** @class */\nfunction () {\n  function Radar(radarModel, ecModel, api) {\n    /**\n     *\n     * Radar dimensions\n     */\n    this.dimensions = [];\n    this._model = radarModel;\n    this._indicatorAxes = map(radarModel.getIndicatorModels(), function (indicatorModel, idx) {\n      var dim = 'indicator_' + idx;\n      var indicatorAxis = new IndicatorAxis(dim, new IntervalScale() // (indicatorModel.get('axisType') === 'log') ? new LogScale() : new IntervalScale()\n      );\n      indicatorAxis.name = indicatorModel.get('name'); // Inject model and axis\n\n      indicatorAxis.model = indicatorModel;\n      indicatorModel.axis = indicatorAxis;\n      this.dimensions.push(dim);\n      return indicatorAxis;\n    }, this);\n    this.resize(radarModel, api);\n  }\n\n  Radar.prototype.getIndicatorAxes = function () {\n    return this._indicatorAxes;\n  };\n\n  Radar.prototype.dataToPoint = function (value, indicatorIndex) {\n    var indicatorAxis = this._indicatorAxes[indicatorIndex];\n    return this.coordToPoint(indicatorAxis.dataToCoord(value), indicatorIndex);\n  }; // TODO: API should be coordToPoint([coord, indicatorIndex])\n\n\n  Radar.prototype.coordToPoint = function (coord, indicatorIndex) {\n    var indicatorAxis = this._indicatorAxes[indicatorIndex];\n    var angle = indicatorAxis.angle;\n    var x = this.cx + coord * Math.cos(angle);\n    var y = this.cy - coord * Math.sin(angle);\n    return [x, y];\n  };\n\n  Radar.prototype.pointToData = function (pt) {\n    var dx = pt[0] - this.cx;\n    var dy = pt[1] - this.cy;\n    var radius = Math.sqrt(dx * dx + dy * dy);\n    dx /= radius;\n    dy /= radius;\n    var radian = Math.atan2(-dy, dx); // Find the closest angle\n    // FIXME index can calculated directly\n\n    var minRadianDiff = Infinity;\n    var closestAxis;\n    var closestAxisIdx = -1;\n\n    for (var i = 0; i < this._indicatorAxes.length; i++) {\n      var indicatorAxis = this._indicatorAxes[i];\n      var diff = Math.abs(radian - indicatorAxis.angle);\n\n      if (diff < minRadianDiff) {\n        closestAxis = indicatorAxis;\n        closestAxisIdx = i;\n        minRadianDiff = diff;\n      }\n    }\n\n    return [closestAxisIdx, +(closestAxis && closestAxis.coordToData(radius))];\n  };\n\n  Radar.prototype.resize = function (radarModel, api) {\n    var center = radarModel.get('center');\n    var viewWidth = api.getWidth();\n    var viewHeight = api.getHeight();\n    var viewSize = Math.min(viewWidth, viewHeight) / 2;\n    this.cx = numberUtil.parsePercent(center[0], viewWidth);\n    this.cy = numberUtil.parsePercent(center[1], viewHeight);\n    this.startAngle = radarModel.get('startAngle') * Math.PI / 180; // radius may be single value like `20`, `'80%'`, or array like `[10, '80%']`\n\n    var radius = radarModel.get('radius');\n\n    if (typeof radius === 'string' || typeof radius === 'number') {\n      radius = [0, radius];\n    }\n\n    this.r0 = numberUtil.parsePercent(radius[0], viewSize);\n    this.r = numberUtil.parsePercent(radius[1], viewSize);\n    each(this._indicatorAxes, function (indicatorAxis, idx) {\n      indicatorAxis.setExtent(this.r0, this.r);\n      var angle = this.startAngle + idx * Math.PI * 2 / this._indicatorAxes.length; // Normalize to [-PI, PI]\n\n      angle = Math.atan2(Math.sin(angle), Math.cos(angle));\n      indicatorAxis.angle = angle;\n    }, this);\n  };\n\n  Radar.prototype.update = function (ecModel, api) {\n    var indicatorAxes = this._indicatorAxes;\n    var radarModel = this._model;\n    each(indicatorAxes, function (indicatorAxis) {\n      indicatorAxis.scale.setExtent(Infinity, -Infinity);\n    });\n    ecModel.eachSeriesByType('radar', function (radarSeries, idx) {\n      if (radarSeries.get('coordinateSystem') !== 'radar' // @ts-ignore\n      || ecModel.getComponent('radar', radarSeries.get('radarIndex')) !== radarModel) {\n        return;\n      }\n\n      var data = radarSeries.getData();\n      each(indicatorAxes, function (indicatorAxis) {\n        indicatorAxis.scale.unionExtentFromData(data, data.mapDimension(indicatorAxis.dim));\n      });\n    }, this);\n    var splitNumber = radarModel.get('splitNumber');\n\n    function increaseInterval(interval) {\n      var exp10 = Math.pow(10, Math.floor(Math.log(interval) / Math.LN10)); // Increase interval\n\n      var f = interval / exp10;\n\n      if (f === 2) {\n        f = 5;\n      } else {\n        // f is 2 or 5\n        f *= 2;\n      }\n\n      return f * exp10;\n    } // Force all the axis fixing the maxSplitNumber.\n\n\n    each(indicatorAxes, function (indicatorAxis, idx) {\n      var rawExtent = getScaleExtent(indicatorAxis.scale, indicatorAxis.model).extent;\n      niceScaleExtent(indicatorAxis.scale, indicatorAxis.model);\n      var axisModel = indicatorAxis.model;\n      var scale = indicatorAxis.scale;\n      var fixedMin = parseAxisModelMinMax(scale, axisModel.get('min', true));\n      var fixedMax = parseAxisModelMinMax(scale, axisModel.get('max', true));\n      var interval = scale.getInterval();\n\n      if (fixedMin != null && fixedMax != null) {\n        // User set min, max, divide to get new interval\n        scale.setExtent(+fixedMin, +fixedMax);\n        scale.setInterval((fixedMax - fixedMin) / splitNumber);\n      } else if (fixedMin != null) {\n        var max = void 0; // User set min, expand extent on the other side\n\n        do {\n          max = fixedMin + interval * splitNumber;\n          scale.setExtent(+fixedMin, max); // Interval must been set after extent\n          // FIXME\n\n          scale.setInterval(interval);\n          interval = increaseInterval(interval);\n        } while (max < rawExtent[1] && isFinite(max) && isFinite(rawExtent[1]));\n      } else if (fixedMax != null) {\n        var min = void 0; // User set min, expand extent on the other side\n\n        do {\n          min = fixedMax - interval * splitNumber;\n          scale.setExtent(min, +fixedMax);\n          scale.setInterval(interval);\n          interval = increaseInterval(interval);\n        } while (min > rawExtent[0] && isFinite(min) && isFinite(rawExtent[0]));\n      } else {\n        var nicedSplitNumber = scale.getTicks().length - 1;\n\n        if (nicedSplitNumber > splitNumber) {\n          interval = increaseInterval(interval);\n        } // TODO\n\n\n        var max = Math.ceil(rawExtent[1] / interval) * interval;\n        var min = numberUtil.round(max - interval * splitNumber);\n        scale.setExtent(min, max);\n        scale.setInterval(interval);\n      }\n    });\n  };\n\n  Radar.prototype.convertToPixel = function (ecModel, finder, value) {\n    console.warn('Not implemented.');\n    return null;\n  };\n\n  Radar.prototype.convertFromPixel = function (ecModel, finder, pixel) {\n    console.warn('Not implemented.');\n    return null;\n  };\n\n  Radar.prototype.containPoint = function (point) {\n    console.warn('Not implemented.');\n    return false;\n  };\n\n  Radar.create = function (ecModel, api) {\n    var radarList = [];\n    ecModel.eachComponent('radar', function (radarModel) {\n      var radar = new Radar(radarModel, ecModel, api);\n      radarList.push(radar);\n      radarModel.coordinateSystem = radar;\n    });\n    ecModel.eachSeriesByType('radar', function (radarSeries) {\n      if (radarSeries.get('coordinateSystem') === 'radar') {\n        // Inject coordinate system\n        // @ts-ignore\n        radarSeries.coordinateSystem = radarList[radarSeries.get('radarIndex') || 0];\n      }\n    });\n    return radarList;\n  };\n  /**\n   * Radar dimensions is based on the data\n   */\n\n\n  Radar.dimensions = [];\n  return Radar;\n}();\n\nexport default Radar;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport RadarModel from '../../coord/radar/RadarModel';\nimport RadarView from './RadarView';\nimport Radar from '../../coord/radar/Radar';\nexport function install(registers) {\n  registers.registerCoordinateSystem('radar', Radar);\n  registers.registerComponentModel(RadarModel);\n  registers.registerComponentView(RadarView);\n  registers.registerVisual({\n    seriesType: 'radar',\n    reset: function (seriesModel) {\n      var data = seriesModel.getData(); // itemVisual symbol is for selected data\n\n      data.each(function (idx) {\n        data.setItemVisual(idx, 'legendIcon', 'roundRect');\n      }); // visual is for unselected data\n\n      data.setVisual('legendIcon', 'roundRect');\n    }\n  });\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { use } from '../../extension';\nimport radarLayout from '../radar/radarLayout';\nimport dataFilter from '../../processor/dataFilter';\nimport backwardCompat from '../radar/backwardCompat';\nimport RadarView from './RadarView';\nimport RadarSeriesModel from './RadarSeries';\nimport { install as installRadarComponent } from '../../component/radar/install';\nexport function install(registers) {\n  use(installRadarComponent);\n  registers.registerChartView(RadarView);\n  registers.registerSeriesModel(RadarSeriesModel);\n  registers.registerLayout(radarLayout);\n  registers.registerProcessor(dataFilter('radar'));\n  registers.registerPreprocessor(backwardCompat);\n}"],"sourceRoot":""}