{"version":3,"sources":["../../node_modules/echarts/core.js","../../node_modules/echarts/lib/chart/helper/treeHelper.js","../../node_modules/echarts/lib/data/Tree.js","../../node_modules/echarts/lib/chart/tree/layoutHelper.js","../../node_modules/echarts/lib/chart/tree/TreeView.js","../../node_modules/echarts/lib/chart/tree/TreeSeries.js","../../node_modules/echarts/lib/chart/tree/traversalHelper.js","../../node_modules/echarts/lib/chart/tree/treeLayout.js","../../node_modules/echarts/lib/chart/tree/treeVisual.js","../../node_modules/echarts/lib/chart/tree/install.js","../../node_modules/echarts/lib/chart/tree/treeAction.js"],"names":["retrieveTargetInfo","payload","validPayloadTypes","seriesModel","zrUtil","type","root","getData","tree","targetNode","getNodeById","contains","node","targetNodeId","getPathToRoot","path","parentNode","push","reverse","aboveViewRoot","viewRoot","viewPath","wrapTreePathInfo","treePathInfo","nodeDataIndex","dataIndex","name","value","getRawValue","TreeNode","hostTree","this","depth","height","children","viewChildren","isExpand","prototype","isRemoved","eachNode","options","cb","context","order","suppressVisitSub","attr","call","i","length","updateDepthAndHeight","child","id","getId","len","res","getAncestors","includeSelf","ancestors","getAncestorsIndices","indices","currNode","getDescendantIndices","childNode","getValue","dimension","data","getStore","get","getDimensionIndex","setLayout","layout","merge","setItemLayout","getLayout","getItemLayout","getModel","getItemModel","getLevelModel","levelModels","setVisual","key","setItemVisual","getVisual","getItemVisual","getRawIndex","getChildIndex","isAncestorOf","parent","isDescendantOf","Tree","hostModel","_nodes","getNodeByDataIndex","rawIndex","update","nodes","count","clearLayouts","clearItemLayouts","createTree","dataRoot","beforeLink","listData","dimMax","buildHierarchy","dataNode","Math","max","convertOptionIdName","addChild","dimensions","prepareSeriesDataSchema","coordDimensions","dimensionsCount","list","SeriesData","initData","linkSeriesData","mainData","struct","structAttr","firstWalk","separation","siblings","subtreeW","hierNode","n","shift","change","prelim","modifier","executeShifts","midPoint","defaultAncestor","subtreeV","ancestor","nodeOutRight","nodeInRight","nodeOutLeft","nodeInLeft","sumOutRight","sumInRight","sumOutLeft","sumInLeft","nextRight","nextLeft","moveSubtree","nextAncestor","thread","apportion","secondWalk","nodeX","x","arguments","defaultSeparation","radialCoordinate","rad","r","PI","cos","y","sin","wl","wr","node1","node2","TreeEdgeShape","parentPoint","childPoints","TreePath","_super","opts","__extends","getDefaultStyle","stroke","fill","getDefaultShape","buildPath","ctx","shape","childLen","firstChildPos","lastChildPos","moveTo","lineTo","orient","forkDim","otherDim","forkPosition","parsePercent","tmpPoint","point","Path","symbolNeedsDraw","isNaN","updateNode","symbolEl","group","isInit","itemModel","visualColor","symbolInnerColor","virtualRoot","source","sourceSymbolEl","getItemGraphicEl","sourceLayout","sourceOldLayout","__oldX","__oldY","rawX","__radialOldRawX","rawY","__radialOldRawY","targetLayout","SymbolClz","useNameLabel","updateData","__radialRawX","__radialRawY","add","setItemGraphicEl","graphic","symbolPath","getSymbolPath","realRoot","rootLayout","length_1","isLeft","center","atan2","textPosition","normalLabelModel","rotate","labelRotateRadian","textContent","getTextContent","setTextConfig","position","rotation","origin","setStyle","focus","focusDataIndices","getECData","edgeShape","getOrient","curvature","edgeForkPosition","lineStyle","getLineStyle","edge","__edge","getEdgeShape","childLayout","process","useStyle","strokeNoScale","setStatesStylesFromModel","setDefaultStateProxy","drawEdge","onHoverStateChange","toState","parentEl","hoverState","HOVER_STATE_BLUR","setStatesFlag","removeNodeEdge","removeAnimationOpt","_a","getSourceNode","sourceEdge","undefined","layoutOpt","style","opacity","remove","removeOpt","removeNode","duration","easing","fadeOut","fadeLabel","animation","forEach","cpx1","cpy1","cpx2","cpy2","x1","x2","y1","y2","radialCoor1","radialCoor2","radialCoor3","radialCoor4","TreeView","_this","apply","_mainGroup","init","ecModel","api","_controller","RoamController","getZr","_controllerHost","target","render","layoutInfo","width","_updateViewCoordSys","_updateController","oldData","_data","diff","newIdx","oldIdx","execute","_nodeScaleRatio","_updateNodeAndLinkScale","eachItemGraphicEl","el","off","on","dispatchAction","seriesId","points","each","idx","min","bbox","oldMin","_min","oldMax","_max","viewCoordSys","coordinateSystem","View","zoomLimit","setBoundingRect","setCenter","setZoom","scaleX","scaleY","controller","controllerHost","setPointerChecker","e","rect","getBoundingRect","applyTransform","transform","contain","onIrrelevantElement","enable","zoom","getZoom","roamHelper","dx","dy","scale","originX","originY","updateLabelLayout","nodeScale","_getNodeGlobalScale","setSymbolScale","coordSys","nodeScaleRatio","groupZoom","dispose","removeAll","ChartView","TreeSeriesModel","hasSymbolVisual","ignoreStyleOnData","getInitialData","option","leaves","leavesModel","Model","nodeData","wrapMethod","model","parentModel","treeDepth","expandTreeDepth","expandAndCollapse","initialTreeDepth","item","getRawDataItem","collapsed","formatTooltip","multipleSeries","dataType","createTooltipMarkup","noValue","getDataParams","params","treeAncestors","layoutMode","defaultOption","zlevel","z","left","top","right","bottom","roam","symbol","symbolSize","color","curveness","itemStyle","borderWidth","label","show","animationEasing","animationDuration","animationDurationUpdate","SeriesModel","eachBefore","callback","pop","treeLayout","eachSeriesByType","getBoxLayoutParams","getWidth","getHeight","getViewRect","sep","inRoot","next","eachAfter","left_1","right_1","bottom_1","delta","tx_1","kx_1","ky_1","coorX_1","coorY_1","finalCoor","orient_1","commonLayout","treeVisual","getItemStyle","existsStyle","ensureUniqueItemVisual","extend","install","registers","registerChartView","registerSeriesModel","registerLayout","registerVisual","registerAction","event","eachComponent","mainType","subType","query","updateCenterAndZoom","installTreeAction"],"mappings":"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","file":"static/js/27.b442a1c8.chunk.js","sourcesContent":["/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nexport * from './lib/export/core';","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport * as zrUtil from 'zrender/lib/core/util';\nexport function retrieveTargetInfo(payload, validPayloadTypes, seriesModel) {\n  if (payload && zrUtil.indexOf(validPayloadTypes, payload.type) >= 0) {\n    var root = seriesModel.getData().tree.root;\n    var targetNode = payload.targetNode;\n\n    if (typeof targetNode === 'string') {\n      targetNode = root.getNodeById(targetNode);\n    }\n\n    if (targetNode && root.contains(targetNode)) {\n      return {\n        node: targetNode\n      };\n    }\n\n    var targetNodeId = payload.targetNodeId;\n\n    if (targetNodeId != null && (targetNode = root.getNodeById(targetNodeId))) {\n      return {\n        node: targetNode\n      };\n    }\n  }\n} // Not includes the given node at the last item.\n\nexport function getPathToRoot(node) {\n  var path = [];\n\n  while (node) {\n    node = node.parentNode;\n    node && path.push(node);\n  }\n\n  return path.reverse();\n}\nexport function aboveViewRoot(viewRoot, node) {\n  var viewPath = getPathToRoot(viewRoot);\n  return zrUtil.indexOf(viewPath, node) >= 0;\n} // From root to the input node (the input node will be included).\n\nexport function wrapTreePathInfo(node, seriesModel) {\n  var treePathInfo = [];\n\n  while (node) {\n    var nodeDataIndex = node.dataIndex;\n    treePathInfo.push({\n      name: node.name,\n      dataIndex: nodeDataIndex,\n      value: seriesModel.getRawValue(nodeDataIndex)\n    });\n    node = node.parentNode;\n  }\n\n  treePathInfo.reverse();\n  return treePathInfo;\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Tree data structure\n */\nimport * as zrUtil from 'zrender/lib/core/util';\nimport linkSeriesData from './helper/linkSeriesData';\nimport SeriesData from './SeriesData';\nimport prepareSeriesDataSchema from './helper/createDimensions';\nimport { convertOptionIdName } from '../util/model';\n\nvar TreeNode =\n/** @class */\nfunction () {\n  function TreeNode(name, hostTree) {\n    this.depth = 0;\n    this.height = 0;\n    /**\n     * Reference to list item.\n     * Do not persistent dataIndex outside,\n     * besause it may be changed by list.\n     * If dataIndex -1,\n     * this node is logical deleted (filtered) in list.\n     */\n\n    this.dataIndex = -1;\n    this.children = [];\n    this.viewChildren = [];\n    this.isExpand = false;\n    this.name = name || '';\n    this.hostTree = hostTree;\n  }\n  /**\n   * The node is removed.\n   */\n\n\n  TreeNode.prototype.isRemoved = function () {\n    return this.dataIndex < 0;\n  };\n\n  TreeNode.prototype.eachNode = function (options, cb, context) {\n    if (typeof options === 'function') {\n      context = cb;\n      cb = options;\n      options = null;\n    }\n\n    options = options || {};\n\n    if (zrUtil.isString(options)) {\n      options = {\n        order: options\n      };\n    }\n\n    var order = options.order || 'preorder';\n    var children = this[options.attr || 'children'];\n    var suppressVisitSub;\n    order === 'preorder' && (suppressVisitSub = cb.call(context, this));\n\n    for (var i = 0; !suppressVisitSub && i < children.length; i++) {\n      children[i].eachNode(options, cb, context);\n    }\n\n    order === 'postorder' && cb.call(context, this);\n  };\n  /**\n   * Update depth and height of this subtree.\n   */\n\n\n  TreeNode.prototype.updateDepthAndHeight = function (depth) {\n    var height = 0;\n    this.depth = depth;\n\n    for (var i = 0; i < this.children.length; i++) {\n      var child = this.children[i];\n      child.updateDepthAndHeight(depth + 1);\n\n      if (child.height > height) {\n        height = child.height;\n      }\n    }\n\n    this.height = height + 1;\n  };\n\n  TreeNode.prototype.getNodeById = function (id) {\n    if (this.getId() === id) {\n      return this;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].getNodeById(id);\n\n      if (res) {\n        return res;\n      }\n    }\n  };\n\n  TreeNode.prototype.contains = function (node) {\n    if (node === this) {\n      return true;\n    }\n\n    for (var i = 0, children = this.children, len = children.length; i < len; i++) {\n      var res = children[i].contains(node);\n\n      if (res) {\n        return res;\n      }\n    }\n  };\n  /**\n   * @param includeSelf Default false.\n   * @return order: [root, child, grandchild, ...]\n   */\n\n\n  TreeNode.prototype.getAncestors = function (includeSelf) {\n    var ancestors = [];\n    var node = includeSelf ? this : this.parentNode;\n\n    while (node) {\n      ancestors.push(node);\n      node = node.parentNode;\n    }\n\n    ancestors.reverse();\n    return ancestors;\n  };\n\n  TreeNode.prototype.getAncestorsIndices = function () {\n    var indices = [];\n    var currNode = this;\n\n    while (currNode) {\n      indices.push(currNode.dataIndex);\n      currNode = currNode.parentNode;\n    }\n\n    indices.reverse();\n    return indices;\n  };\n\n  TreeNode.prototype.getDescendantIndices = function () {\n    var indices = [];\n    this.eachNode(function (childNode) {\n      indices.push(childNode.dataIndex);\n    });\n    return indices;\n  };\n\n  TreeNode.prototype.getValue = function (dimension) {\n    var data = this.hostTree.data;\n    return data.getStore().get(data.getDimensionIndex(dimension || 'value'), this.dataIndex);\n  };\n\n  TreeNode.prototype.setLayout = function (layout, merge) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemLayout(this.dataIndex, layout, merge);\n  };\n  /**\n   * @return {Object} layout\n   */\n\n\n  TreeNode.prototype.getLayout = function () {\n    return this.hostTree.data.getItemLayout(this.dataIndex);\n  }; // @depcrecated\n  // getModel<T = unknown, S extends keyof T = keyof T>(path: S): Model<T[S]>\n  // eslint-disable-next-line @typescript-eslint/no-unused-vars\n\n\n  TreeNode.prototype.getModel = function (path) {\n    if (this.dataIndex < 0) {\n      return;\n    }\n\n    var hostTree = this.hostTree;\n    var itemModel = hostTree.data.getItemModel(this.dataIndex);\n    return itemModel.getModel(path);\n  }; // TODO: TYPE More specific model\n\n\n  TreeNode.prototype.getLevelModel = function () {\n    return (this.hostTree.levelModels || [])[this.depth];\n  };\n\n  TreeNode.prototype.setVisual = function (key, value) {\n    this.dataIndex >= 0 && this.hostTree.data.setItemVisual(this.dataIndex, key, value);\n  };\n  /**\n   * Get item visual\n   * FIXME: make return type better\n   */\n\n\n  TreeNode.prototype.getVisual = function (key) {\n    return this.hostTree.data.getItemVisual(this.dataIndex, key);\n  };\n\n  TreeNode.prototype.getRawIndex = function () {\n    return this.hostTree.data.getRawIndex(this.dataIndex);\n  };\n\n  TreeNode.prototype.getId = function () {\n    return this.hostTree.data.getId(this.dataIndex);\n  };\n  /**\n   * index in parent's children\n   */\n\n\n  TreeNode.prototype.getChildIndex = function () {\n    if (this.parentNode) {\n      var children = this.parentNode.children;\n\n      for (var i = 0; i < children.length; ++i) {\n        if (children[i] === this) {\n          return i;\n        }\n      }\n\n      return -1;\n    }\n\n    return -1;\n  };\n  /**\n   * if this is an ancestor of another node\n   *\n   * @param node another node\n   * @return if is ancestor\n   */\n\n\n  TreeNode.prototype.isAncestorOf = function (node) {\n    var parent = node.parentNode;\n\n    while (parent) {\n      if (parent === this) {\n        return true;\n      }\n\n      parent = parent.parentNode;\n    }\n\n    return false;\n  };\n  /**\n   * if this is an descendant of another node\n   *\n   * @param node another node\n   * @return if is descendant\n   */\n\n\n  TreeNode.prototype.isDescendantOf = function (node) {\n    return node !== this && node.isAncestorOf(this);\n  };\n\n  return TreeNode;\n}();\n\nexport { TreeNode };\n;\n\nvar Tree =\n/** @class */\nfunction () {\n  function Tree(hostModel) {\n    this.type = 'tree';\n    this._nodes = [];\n    this.hostModel = hostModel;\n  }\n\n  Tree.prototype.eachNode = function (options, cb, context) {\n    this.root.eachNode(options, cb, context);\n  };\n\n  Tree.prototype.getNodeByDataIndex = function (dataIndex) {\n    var rawIndex = this.data.getRawIndex(dataIndex);\n    return this._nodes[rawIndex];\n  };\n\n  Tree.prototype.getNodeById = function (name) {\n    return this.root.getNodeById(name);\n  };\n  /**\n   * Update item available by list,\n   * when list has been performed options like 'filterSelf' or 'map'.\n   */\n\n\n  Tree.prototype.update = function () {\n    var data = this.data;\n    var nodes = this._nodes;\n\n    for (var i = 0, len = nodes.length; i < len; i++) {\n      nodes[i].dataIndex = -1;\n    }\n\n    for (var i = 0, len = data.count(); i < len; i++) {\n      nodes[data.getRawIndex(i)].dataIndex = i;\n    }\n  };\n  /**\n   * Clear all layouts\n   */\n\n\n  Tree.prototype.clearLayouts = function () {\n    this.data.clearItemLayouts();\n  };\n  /**\n   * data node format:\n   * {\n   *     name: ...\n   *     value: ...\n   *     children: [\n   *         {\n   *             name: ...\n   *             value: ...\n   *             children: ...\n   *         },\n   *         ...\n   *     ]\n   * }\n   */\n\n\n  Tree.createTree = function (dataRoot, hostModel, beforeLink) {\n    var tree = new Tree(hostModel);\n    var listData = [];\n    var dimMax = 1;\n    buildHierarchy(dataRoot);\n\n    function buildHierarchy(dataNode, parentNode) {\n      var value = dataNode.value;\n      dimMax = Math.max(dimMax, zrUtil.isArray(value) ? value.length : 1);\n      listData.push(dataNode);\n      var node = new TreeNode(convertOptionIdName(dataNode.name, ''), tree);\n      parentNode ? addChild(node, parentNode) : tree.root = node;\n\n      tree._nodes.push(node);\n\n      var children = dataNode.children;\n\n      if (children) {\n        for (var i = 0; i < children.length; i++) {\n          buildHierarchy(children[i], node);\n        }\n      }\n    }\n\n    tree.root.updateDepthAndHeight(0);\n    var dimensions = prepareSeriesDataSchema(listData, {\n      coordDimensions: ['value'],\n      dimensionsCount: dimMax\n    }).dimensions;\n    var list = new SeriesData(dimensions, hostModel);\n    list.initData(listData);\n    beforeLink && beforeLink(list);\n    linkSeriesData({\n      mainData: list,\n      struct: tree,\n      structAttr: 'tree'\n    });\n    tree.update();\n    return tree;\n  };\n\n  return Tree;\n}();\n/**\n * It is needed to consider the mess of 'list', 'hostModel' when creating a TreeNote,\n * so this function is not ready and not necessary to be public.\n */\n\n\nfunction addChild(child, node) {\n  var children = node.children;\n\n  if (child.parentNode === node) {\n    return;\n  }\n\n  children.push(child);\n  child.parentNode = node;\n}\n\nexport default Tree;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/*\n* A third-party license is embeded for some of the code in this file:\n* The tree layoutHelper implementation was originally copied from\n* \"d3.js\"(https://github.com/d3/d3-hierarchy) with\n* some modifications made for this project.\n* (see more details in the comment of the specific method below.)\n* The use of the source code of this file is also subject to the terms\n* and consitions of the licence of \"d3.js\" (BSD-3Clause, see\n* </licenses/LICENSE-d3>).\n*/\n\n/**\n * @file The layout algorithm of node-link tree diagrams. Here we using Reingold-Tilford algorithm to drawing\n *       the tree.\n */\nimport * as layout from '../../util/layout';\n/**\n * Initialize all computational message for following algorithm.\n */\n\nexport function init(inRoot) {\n  var root = inRoot;\n  root.hierNode = {\n    defaultAncestor: null,\n    ancestor: root,\n    prelim: 0,\n    modifier: 0,\n    change: 0,\n    shift: 0,\n    i: 0,\n    thread: null\n  };\n  var nodes = [root];\n  var node;\n  var children;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    children = node.children;\n\n    if (node.isExpand && children.length) {\n      var n = children.length;\n\n      for (var i = n - 1; i >= 0; i--) {\n        var child = children[i];\n        child.hierNode = {\n          defaultAncestor: null,\n          ancestor: child,\n          prelim: 0,\n          modifier: 0,\n          change: 0,\n          shift: 0,\n          i: i,\n          thread: null\n        };\n        nodes.push(child);\n      }\n    }\n  }\n}\n/**\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n *\n * Computes a preliminary x coordinate for node. Before that, this function is\n * applied recursively to the children of node, as well as the function\n * apportion(). After spacing out the children by calling executeShifts(), the\n * node is placed to the midpoint of its outermost children.\n */\n\nexport function firstWalk(node, separation) {\n  var children = node.isExpand ? node.children : [];\n  var siblings = node.parentNode.children;\n  var subtreeW = node.hierNode.i ? siblings[node.hierNode.i - 1] : null;\n\n  if (children.length) {\n    executeShifts(node);\n    var midPoint = (children[0].hierNode.prelim + children[children.length - 1].hierNode.prelim) / 2;\n\n    if (subtreeW) {\n      node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n      node.hierNode.modifier = node.hierNode.prelim - midPoint;\n    } else {\n      node.hierNode.prelim = midPoint;\n    }\n  } else if (subtreeW) {\n    node.hierNode.prelim = subtreeW.hierNode.prelim + separation(node, subtreeW);\n  }\n\n  node.parentNode.hierNode.defaultAncestor = apportion(node, subtreeW, node.parentNode.hierNode.defaultAncestor || siblings[0], separation);\n}\n/**\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n *\n * Computes all real x-coordinates by summing up the modifiers recursively.\n */\n\nexport function secondWalk(node) {\n  var nodeX = node.hierNode.prelim + node.parentNode.hierNode.modifier;\n  node.setLayout({\n    x: nodeX\n  }, true);\n  node.hierNode.modifier += node.parentNode.hierNode.modifier;\n}\nexport function separation(cb) {\n  return arguments.length ? cb : defaultSeparation;\n}\n/**\n * Transform the common coordinate to radial coordinate.\n */\n\nexport function radialCoordinate(rad, r) {\n  rad -= Math.PI / 2;\n  return {\n    x: r * Math.cos(rad),\n    y: r * Math.sin(rad)\n  };\n}\n/**\n * Get the layout position of the whole view.\n */\n\nexport function getViewRect(seriesModel, api) {\n  return layout.getLayoutRect(seriesModel.getBoxLayoutParams(), {\n    width: api.getWidth(),\n    height: api.getHeight()\n  });\n}\n/**\n * All other shifts, applied to the smaller subtrees between w- and w+, are\n * performed by this function.\n *\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n */\n\nfunction executeShifts(node) {\n  var children = node.children;\n  var n = children.length;\n  var shift = 0;\n  var change = 0;\n\n  while (--n >= 0) {\n    var child = children[n];\n    child.hierNode.prelim += shift;\n    child.hierNode.modifier += shift;\n    change += child.hierNode.change;\n    shift += child.hierNode.shift + change;\n  }\n}\n/**\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n *\n * The core of the algorithm. Here, a new subtree is combined with the\n * previous subtrees. Threads are used to traverse the inside and outside\n * contours of the left and right subtree up to the highest common level.\n * Whenever two nodes of the inside contours conflict, we compute the left\n * one of the greatest uncommon ancestors using the function nextAncestor()\n * and call moveSubtree() to shift the subtree and prepare the shifts of\n * smaller subtrees. Finally, we add a new thread (if necessary).\n */\n\n\nfunction apportion(subtreeV, subtreeW, ancestor, separation) {\n  if (subtreeW) {\n    var nodeOutRight = subtreeV;\n    var nodeInRight = subtreeV;\n    var nodeOutLeft = nodeInRight.parentNode.children[0];\n    var nodeInLeft = subtreeW;\n    var sumOutRight = nodeOutRight.hierNode.modifier;\n    var sumInRight = nodeInRight.hierNode.modifier;\n    var sumOutLeft = nodeOutLeft.hierNode.modifier;\n    var sumInLeft = nodeInLeft.hierNode.modifier;\n\n    while (nodeInLeft = nextRight(nodeInLeft), nodeInRight = nextLeft(nodeInRight), nodeInLeft && nodeInRight) {\n      nodeOutRight = nextRight(nodeOutRight);\n      nodeOutLeft = nextLeft(nodeOutLeft);\n      nodeOutRight.hierNode.ancestor = subtreeV;\n      var shift = nodeInLeft.hierNode.prelim + sumInLeft - nodeInRight.hierNode.prelim - sumInRight + separation(nodeInLeft, nodeInRight);\n\n      if (shift > 0) {\n        moveSubtree(nextAncestor(nodeInLeft, subtreeV, ancestor), subtreeV, shift);\n        sumInRight += shift;\n        sumOutRight += shift;\n      }\n\n      sumInLeft += nodeInLeft.hierNode.modifier;\n      sumInRight += nodeInRight.hierNode.modifier;\n      sumOutRight += nodeOutRight.hierNode.modifier;\n      sumOutLeft += nodeOutLeft.hierNode.modifier;\n    }\n\n    if (nodeInLeft && !nextRight(nodeOutRight)) {\n      nodeOutRight.hierNode.thread = nodeInLeft;\n      nodeOutRight.hierNode.modifier += sumInLeft - sumOutRight;\n    }\n\n    if (nodeInRight && !nextLeft(nodeOutLeft)) {\n      nodeOutLeft.hierNode.thread = nodeInRight;\n      nodeOutLeft.hierNode.modifier += sumInRight - sumOutLeft;\n      ancestor = subtreeV;\n    }\n  }\n\n  return ancestor;\n}\n/**\n * This function is used to traverse the right contour of a subtree.\n * It returns the rightmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n */\n\n\nfunction nextRight(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[children.length - 1] : node.hierNode.thread;\n}\n/**\n * This function is used to traverse the left contour of a subtree (or a subforest).\n * It returns the leftmost child of node or the thread of node. The function\n * returns null if and only if node is on the highest depth of its subtree.\n */\n\n\nfunction nextLeft(node) {\n  var children = node.children;\n  return children.length && node.isExpand ? children[0] : node.hierNode.thread;\n}\n/**\n * If nodeInLeft’s ancestor is a sibling of node, returns nodeInLeft’s ancestor.\n * Otherwise, returns the specified ancestor.\n */\n\n\nfunction nextAncestor(nodeInLeft, node, ancestor) {\n  return nodeInLeft.hierNode.ancestor.parentNode === node.parentNode ? nodeInLeft.hierNode.ancestor : ancestor;\n}\n/**\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n *\n * Shifts the current subtree rooted at wr.\n * This is done by increasing prelim(w+) and modifier(w+) by shift.\n */\n\n\nfunction moveSubtree(wl, wr, shift) {\n  var change = shift / (wr.hierNode.i - wl.hierNode.i);\n  wr.hierNode.change -= change;\n  wr.hierNode.shift += shift;\n  wr.hierNode.modifier += shift;\n  wr.hierNode.prelim += shift;\n  wl.hierNode.change += change;\n}\n/**\n * The implementation of this function was originally copied from \"d3.js\"\n * <https://github.com/d3/d3-hierarchy/blob/4c1f038f2725d6eae2e49b61d01456400694bac4/src/tree.js>\n * with some modifications made for this program.\n * See the license statement at the head of this file.\n */\n\n\nfunction defaultSeparation(node1, node2) {\n  return node1.parentNode === node2.parentNode ? 1 : 2;\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util';\nimport * as graphic from '../../util/graphic';\nimport { getECData } from '../../util/innerStore';\nimport SymbolClz from '../helper/Symbol';\nimport { radialCoordinate } from './layoutHelper';\nimport * as bbox from 'zrender/lib/core/bbox';\nimport View from '../../coord/View';\nimport * as roamHelper from '../../component/helper/roamHelper';\nimport RoamController from '../../component/helper/RoamController';\nimport { onIrrelevantElement } from '../../component/helper/cursorHelper';\nimport { parsePercent } from '../../util/number';\nimport ChartView from '../../view/Chart';\nimport Path from 'zrender/lib/graphic/Path';\nimport { setStatesStylesFromModel, setStatesFlag, setDefaultStateProxy, HOVER_STATE_BLUR } from '../../util/states';\n\nvar TreeEdgeShape =\n/** @class */\nfunction () {\n  function TreeEdgeShape() {\n    this.parentPoint = [];\n    this.childPoints = [];\n  }\n\n  return TreeEdgeShape;\n}();\n\nvar TreePath =\n/** @class */\nfunction (_super) {\n  __extends(TreePath, _super);\n\n  function TreePath(opts) {\n    return _super.call(this, opts) || this;\n  }\n\n  TreePath.prototype.getDefaultStyle = function () {\n    return {\n      stroke: '#000',\n      fill: null\n    };\n  };\n\n  TreePath.prototype.getDefaultShape = function () {\n    return new TreeEdgeShape();\n  };\n\n  TreePath.prototype.buildPath = function (ctx, shape) {\n    var childPoints = shape.childPoints;\n    var childLen = childPoints.length;\n    var parentPoint = shape.parentPoint;\n    var firstChildPos = childPoints[0];\n    var lastChildPos = childPoints[childLen - 1];\n\n    if (childLen === 1) {\n      ctx.moveTo(parentPoint[0], parentPoint[1]);\n      ctx.lineTo(firstChildPos[0], firstChildPos[1]);\n      return;\n    }\n\n    var orient = shape.orient;\n    var forkDim = orient === 'TB' || orient === 'BT' ? 0 : 1;\n    var otherDim = 1 - forkDim;\n    var forkPosition = parsePercent(shape.forkPosition, 1);\n    var tmpPoint = [];\n    tmpPoint[forkDim] = parentPoint[forkDim];\n    tmpPoint[otherDim] = parentPoint[otherDim] + (lastChildPos[otherDim] - parentPoint[otherDim]) * forkPosition;\n    ctx.moveTo(parentPoint[0], parentPoint[1]);\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    ctx.moveTo(firstChildPos[0], firstChildPos[1]);\n    tmpPoint[forkDim] = firstChildPos[forkDim];\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    tmpPoint[forkDim] = lastChildPos[forkDim];\n    ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    ctx.lineTo(lastChildPos[0], lastChildPos[1]);\n\n    for (var i = 1; i < childLen - 1; i++) {\n      var point = childPoints[i];\n      ctx.moveTo(point[0], point[1]);\n      tmpPoint[forkDim] = point[forkDim];\n      ctx.lineTo(tmpPoint[0], tmpPoint[1]);\n    }\n  };\n\n  return TreePath;\n}(Path);\n\nvar TreeView =\n/** @class */\nfunction (_super) {\n  __extends(TreeView, _super);\n\n  function TreeView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = TreeView.type;\n    _this._mainGroup = new graphic.Group();\n    return _this;\n  }\n\n  TreeView.prototype.init = function (ecModel, api) {\n    this._controller = new RoamController(api.getZr());\n    this._controllerHost = {\n      target: this.group\n    };\n    this.group.add(this._mainGroup);\n  };\n\n  TreeView.prototype.render = function (seriesModel, ecModel, api) {\n    var data = seriesModel.getData();\n    var layoutInfo = seriesModel.layoutInfo;\n    var group = this._mainGroup;\n    var layout = seriesModel.get('layout');\n\n    if (layout === 'radial') {\n      group.x = layoutInfo.x + layoutInfo.width / 2;\n      group.y = layoutInfo.y + layoutInfo.height / 2;\n    } else {\n      group.x = layoutInfo.x;\n      group.y = layoutInfo.y;\n    }\n\n    this._updateViewCoordSys(seriesModel);\n\n    this._updateController(seriesModel, ecModel, api);\n\n    var oldData = this._data;\n    data.diff(oldData).add(function (newIdx) {\n      if (symbolNeedsDraw(data, newIdx)) {\n        // Create node and edge\n        updateNode(data, newIdx, null, group, seriesModel);\n      }\n    }).update(function (newIdx, oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx);\n\n      if (!symbolNeedsDraw(data, newIdx)) {\n        symbolEl && removeNode(oldData, oldIdx, symbolEl, group, seriesModel);\n        return;\n      } // Update node and edge\n\n\n      updateNode(data, newIdx, symbolEl, group, seriesModel);\n    }).remove(function (oldIdx) {\n      var symbolEl = oldData.getItemGraphicEl(oldIdx); // When remove a collapsed node of subtree, since the collapsed\n      // node haven't been initialized with a symbol element,\n      // you can't found it's symbol element through index.\n      // so if we want to remove the symbol element we should insure\n      // that the symbol element is not null.\n\n      if (symbolEl) {\n        removeNode(oldData, oldIdx, symbolEl, group, seriesModel);\n      }\n    }).execute();\n    this._nodeScaleRatio = seriesModel.get('nodeScaleRatio');\n\n    this._updateNodeAndLinkScale(seriesModel);\n\n    if (seriesModel.get('expandAndCollapse') === true) {\n      data.eachItemGraphicEl(function (el, dataIndex) {\n        el.off('click').on('click', function () {\n          api.dispatchAction({\n            type: 'treeExpandAndCollapse',\n            seriesId: seriesModel.id,\n            dataIndex: dataIndex\n          });\n        });\n      });\n    }\n\n    this._data = data;\n  };\n\n  TreeView.prototype._updateViewCoordSys = function (seriesModel) {\n    var data = seriesModel.getData();\n    var points = [];\n    data.each(function (idx) {\n      var layout = data.getItemLayout(idx);\n\n      if (layout && !isNaN(layout.x) && !isNaN(layout.y)) {\n        points.push([+layout.x, +layout.y]);\n      }\n    });\n    var min = [];\n    var max = [];\n    bbox.fromPoints(points, min, max); // If don't Store min max when collapse the root node after roam,\n    // the root node will disappear.\n\n    var oldMin = this._min;\n    var oldMax = this._max; // If width or height is 0\n\n    if (max[0] - min[0] === 0) {\n      min[0] = oldMin ? oldMin[0] : min[0] - 1;\n      max[0] = oldMax ? oldMax[0] : max[0] + 1;\n    }\n\n    if (max[1] - min[1] === 0) {\n      min[1] = oldMin ? oldMin[1] : min[1] - 1;\n      max[1] = oldMax ? oldMax[1] : max[1] + 1;\n    }\n\n    var viewCoordSys = seriesModel.coordinateSystem = new View();\n    viewCoordSys.zoomLimit = seriesModel.get('scaleLimit');\n    viewCoordSys.setBoundingRect(min[0], min[1], max[0] - min[0], max[1] - min[1]);\n    viewCoordSys.setCenter(seriesModel.get('center'));\n    viewCoordSys.setZoom(seriesModel.get('zoom')); // Here we use viewCoordSys just for computing the 'position' and 'scale' of the group\n\n    this.group.attr({\n      x: viewCoordSys.x,\n      y: viewCoordSys.y,\n      scaleX: viewCoordSys.scaleX,\n      scaleY: viewCoordSys.scaleY\n    });\n    this._min = min;\n    this._max = max;\n  };\n\n  TreeView.prototype._updateController = function (seriesModel, ecModel, api) {\n    var _this = this;\n\n    var controller = this._controller;\n    var controllerHost = this._controllerHost;\n    var group = this.group;\n    controller.setPointerChecker(function (e, x, y) {\n      var rect = group.getBoundingRect();\n      rect.applyTransform(group.transform);\n      return rect.contain(x, y) && !onIrrelevantElement(e, api, seriesModel);\n    });\n    controller.enable(seriesModel.get('roam'));\n    controllerHost.zoomLimit = seriesModel.get('scaleLimit');\n    controllerHost.zoom = seriesModel.coordinateSystem.getZoom();\n    controller.off('pan').off('zoom').on('pan', function (e) {\n      roamHelper.updateViewOnPan(controllerHost, e.dx, e.dy);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'treeRoam',\n        dx: e.dx,\n        dy: e.dy\n      });\n    }).on('zoom', function (e) {\n      roamHelper.updateViewOnZoom(controllerHost, e.scale, e.originX, e.originY);\n      api.dispatchAction({\n        seriesId: seriesModel.id,\n        type: 'treeRoam',\n        zoom: e.scale,\n        originX: e.originX,\n        originY: e.originY\n      });\n\n      _this._updateNodeAndLinkScale(seriesModel); // Only update label layout on zoom\n\n\n      api.updateLabelLayout();\n    });\n  };\n\n  TreeView.prototype._updateNodeAndLinkScale = function (seriesModel) {\n    var data = seriesModel.getData();\n\n    var nodeScale = this._getNodeGlobalScale(seriesModel);\n\n    data.eachItemGraphicEl(function (el, idx) {\n      el.setSymbolScale(nodeScale);\n    });\n  };\n\n  TreeView.prototype._getNodeGlobalScale = function (seriesModel) {\n    var coordSys = seriesModel.coordinateSystem;\n\n    if (coordSys.type !== 'view') {\n      return 1;\n    }\n\n    var nodeScaleRatio = this._nodeScaleRatio;\n    var groupZoom = coordSys.scaleX || 1; // Scale node when zoom changes\n\n    var roamZoom = coordSys.getZoom();\n    var nodeScale = (roamZoom - 1) * nodeScaleRatio + 1;\n    return nodeScale / groupZoom;\n  };\n\n  TreeView.prototype.dispose = function () {\n    this._controller && this._controller.dispose();\n    this._controllerHost = null;\n  };\n\n  TreeView.prototype.remove = function () {\n    this._mainGroup.removeAll();\n\n    this._data = null;\n  };\n\n  TreeView.type = 'tree';\n  return TreeView;\n}(ChartView);\n\nfunction symbolNeedsDraw(data, dataIndex) {\n  var layout = data.getItemLayout(dataIndex);\n  return layout && !isNaN(layout.x) && !isNaN(layout.y);\n}\n\nfunction updateNode(data, dataIndex, symbolEl, group, seriesModel) {\n  var isInit = !symbolEl;\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var itemModel = node.getModel();\n  var visualColor = node.getVisual('style').fill;\n  var symbolInnerColor = node.isExpand === false && node.children.length !== 0 ? visualColor : '#fff';\n  var virtualRoot = data.tree.root;\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceLayout = source.getLayout();\n  var sourceOldLayout = sourceSymbolEl ? {\n    x: sourceSymbolEl.__oldX,\n    y: sourceSymbolEl.__oldY,\n    rawX: sourceSymbolEl.__radialOldRawX,\n    rawY: sourceSymbolEl.__radialOldRawY\n  } : sourceLayout;\n  var targetLayout = node.getLayout();\n\n  if (isInit) {\n    symbolEl = new SymbolClz(data, dataIndex, null, {\n      symbolInnerColor: symbolInnerColor,\n      useNameLabel: true\n    });\n    symbolEl.x = sourceOldLayout.x;\n    symbolEl.y = sourceOldLayout.y;\n  } else {\n    symbolEl.updateData(data, dataIndex, null, {\n      symbolInnerColor: symbolInnerColor,\n      useNameLabel: true\n    });\n  }\n\n  symbolEl.__radialOldRawX = symbolEl.__radialRawX;\n  symbolEl.__radialOldRawY = symbolEl.__radialRawY;\n  symbolEl.__radialRawX = targetLayout.rawX;\n  symbolEl.__radialRawY = targetLayout.rawY;\n  group.add(symbolEl);\n  data.setItemGraphicEl(dataIndex, symbolEl);\n  symbolEl.__oldX = symbolEl.x;\n  symbolEl.__oldY = symbolEl.y;\n  graphic.updateProps(symbolEl, {\n    x: targetLayout.x,\n    y: targetLayout.y\n  }, seriesModel);\n  var symbolPath = symbolEl.getSymbolPath();\n\n  if (seriesModel.get('layout') === 'radial') {\n    var realRoot = virtualRoot.children[0];\n    var rootLayout = realRoot.getLayout();\n    var length_1 = realRoot.children.length;\n    var rad = void 0;\n    var isLeft = void 0;\n\n    if (targetLayout.x === rootLayout.x && node.isExpand === true) {\n      var center = {\n        x: (realRoot.children[0].getLayout().x + realRoot.children[length_1 - 1].getLayout().x) / 2,\n        y: (realRoot.children[0].getLayout().y + realRoot.children[length_1 - 1].getLayout().y) / 2\n      };\n      rad = Math.atan2(center.y - rootLayout.y, center.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      isLeft = center.x < rootLayout.x;\n\n      if (isLeft) {\n        rad = rad - Math.PI;\n      }\n    } else {\n      rad = Math.atan2(targetLayout.y - rootLayout.y, targetLayout.x - rootLayout.x);\n\n      if (rad < 0) {\n        rad = Math.PI * 2 + rad;\n      }\n\n      if (node.children.length === 0 || node.children.length !== 0 && node.isExpand === false) {\n        isLeft = targetLayout.x < rootLayout.x;\n\n        if (isLeft) {\n          rad = rad - Math.PI;\n        }\n      } else {\n        isLeft = targetLayout.x > rootLayout.x;\n\n        if (!isLeft) {\n          rad = rad - Math.PI;\n        }\n      }\n    }\n\n    var textPosition = isLeft ? 'left' : 'right';\n    var normalLabelModel = itemModel.getModel('label');\n    var rotate = normalLabelModel.get('rotate');\n    var labelRotateRadian = rotate * (Math.PI / 180);\n    var textContent = symbolPath.getTextContent();\n\n    if (textContent) {\n      symbolPath.setTextConfig({\n        position: normalLabelModel.get('position') || textPosition,\n        rotation: rotate == null ? -rad : labelRotateRadian,\n        origin: 'center'\n      });\n      textContent.setStyle('verticalAlign', 'middle');\n    }\n  } // Handle status\n\n\n  var focus = itemModel.get(['emphasis', 'focus']);\n  var focusDataIndices = focus === 'ancestor' ? node.getAncestorsIndices() : focus === 'descendant' ? node.getDescendantIndices() : null;\n\n  if (focusDataIndices) {\n    // Modify the focus to data indices.\n    getECData(symbolEl).focus = focusDataIndices;\n  }\n\n  drawEdge(seriesModel, node, virtualRoot, symbolEl, sourceOldLayout, sourceLayout, targetLayout, group);\n\n  if (symbolEl.__edge) {\n    symbolEl.onHoverStateChange = function (toState) {\n      if (toState !== 'blur') {\n        // NOTE: Ensure the parent elements will been blurred firstly.\n        // According to the return of getAncestorsIndices and getDescendantIndices\n        // TODO: A bit tricky.\n        var parentEl = node.parentNode && data.getItemGraphicEl(node.parentNode.dataIndex);\n\n        if (!(parentEl && parentEl.hoverState === HOVER_STATE_BLUR)) {\n          setStatesFlag(symbolEl.__edge, toState);\n        }\n      }\n    };\n  }\n}\n\nfunction drawEdge(seriesModel, node, virtualRoot, symbolEl, sourceOldLayout, sourceLayout, targetLayout, group) {\n  var itemModel = node.getModel();\n  var edgeShape = seriesModel.get('edgeShape');\n  var layout = seriesModel.get('layout');\n  var orient = seriesModel.getOrient();\n  var curvature = seriesModel.get(['lineStyle', 'curveness']);\n  var edgeForkPosition = seriesModel.get('edgeForkPosition');\n  var lineStyle = itemModel.getModel('lineStyle').getLineStyle();\n  var edge = symbolEl.__edge;\n\n  if (edgeShape === 'curve') {\n    if (node.parentNode && node.parentNode !== virtualRoot) {\n      if (!edge) {\n        edge = symbolEl.__edge = new graphic.BezierCurve({\n          shape: getEdgeShape(layout, orient, curvature, sourceOldLayout, sourceOldLayout)\n        });\n      }\n\n      graphic.updateProps(edge, {\n        shape: getEdgeShape(layout, orient, curvature, sourceLayout, targetLayout)\n      }, seriesModel);\n    }\n  } else if (edgeShape === 'polyline') {\n    if (layout === 'orthogonal') {\n      if (node !== virtualRoot && node.children && node.children.length !== 0 && node.isExpand === true) {\n        var children = node.children;\n        var childPoints = [];\n\n        for (var i = 0; i < children.length; i++) {\n          var childLayout = children[i].getLayout();\n          childPoints.push([childLayout.x, childLayout.y]);\n        }\n\n        if (!edge) {\n          edge = symbolEl.__edge = new TreePath({\n            shape: {\n              parentPoint: [targetLayout.x, targetLayout.y],\n              childPoints: [[targetLayout.x, targetLayout.y]],\n              orient: orient,\n              forkPosition: edgeForkPosition\n            }\n          });\n        }\n\n        graphic.updateProps(edge, {\n          shape: {\n            parentPoint: [targetLayout.x, targetLayout.y],\n            childPoints: childPoints\n          }\n        }, seriesModel);\n      }\n    } else {\n      if (process.env.NODE_ENV !== 'production') {\n        throw new Error('The polyline edgeShape can only be used in orthogonal layout');\n      }\n    }\n  }\n\n  if (edge) {\n    edge.useStyle(zrUtil.defaults({\n      strokeNoScale: true,\n      fill: null\n    }, lineStyle));\n    setStatesStylesFromModel(edge, itemModel, 'lineStyle');\n    setDefaultStateProxy(edge);\n    group.add(edge);\n  }\n}\n\nfunction removeNodeEdge(node, data, group, seriesModel, removeAnimationOpt) {\n  var virtualRoot = data.tree.root;\n\n  var _a = getSourceNode(virtualRoot, node),\n      source = _a.source,\n      sourceLayout = _a.sourceLayout;\n\n  var symbolEl = data.getItemGraphicEl(node.dataIndex);\n\n  if (!symbolEl) {\n    return;\n  }\n\n  var sourceSymbolEl = data.getItemGraphicEl(source.dataIndex);\n  var sourceEdge = sourceSymbolEl.__edge; // 1. when expand the sub tree, delete the children node should delete the edge of\n  // the source at the same time. because the polyline edge shape is only owned by the source.\n  // 2.when the node is the only children of the source, delete the node should delete the edge of\n  // the source at the same time. the same reason as above.\n\n  var edge = symbolEl.__edge || (source.isExpand === false || source.children.length === 1 ? sourceEdge : undefined);\n  var edgeShape = seriesModel.get('edgeShape');\n  var layoutOpt = seriesModel.get('layout');\n  var orient = seriesModel.get('orient');\n  var curvature = seriesModel.get(['lineStyle', 'curveness']);\n\n  if (edge) {\n    if (edgeShape === 'curve') {\n      graphic.removeElement(edge, {\n        shape: getEdgeShape(layoutOpt, orient, curvature, sourceLayout, sourceLayout),\n        style: {\n          opacity: 0\n        }\n      }, seriesModel, {\n        cb: function () {\n          group.remove(edge);\n        },\n        removeOpt: removeAnimationOpt\n      });\n    } else if (edgeShape === 'polyline' && seriesModel.get('layout') === 'orthogonal') {\n      graphic.removeElement(edge, {\n        shape: {\n          parentPoint: [sourceLayout.x, sourceLayout.y],\n          childPoints: [[sourceLayout.x, sourceLayout.y]]\n        },\n        style: {\n          opacity: 0\n        }\n      }, seriesModel, {\n        cb: function () {\n          group.remove(edge);\n        },\n        removeOpt: removeAnimationOpt\n      });\n    }\n  }\n}\n\nfunction getSourceNode(virtualRoot, node) {\n  var source = node.parentNode === virtualRoot ? node : node.parentNode || node;\n  var sourceLayout;\n\n  while (sourceLayout = source.getLayout(), sourceLayout == null) {\n    source = source.parentNode === virtualRoot ? source : source.parentNode || source;\n  }\n\n  return {\n    source: source,\n    sourceLayout: sourceLayout\n  };\n}\n\nfunction removeNode(data, dataIndex, symbolEl, group, seriesModel) {\n  var node = data.tree.getNodeByDataIndex(dataIndex);\n  var virtualRoot = data.tree.root;\n  var sourceLayout = getSourceNode(virtualRoot, node).sourceLayout; // Use same duration and easing with update to have more consistent animation.\n\n  var removeAnimationOpt = {\n    duration: seriesModel.get('animationDurationUpdate'),\n    easing: seriesModel.get('animationEasingUpdate')\n  };\n  graphic.removeElement(symbolEl, {\n    x: sourceLayout.x + 1,\n    y: sourceLayout.y + 1\n  }, seriesModel, {\n    cb: function () {\n      group.remove(symbolEl);\n      data.setItemGraphicEl(dataIndex, null);\n    },\n    removeOpt: removeAnimationOpt\n  });\n  symbolEl.fadeOut(null, {\n    fadeLabel: true,\n    animation: removeAnimationOpt\n  }); // remove edge as parent node\n\n  node.children.forEach(function (childNode) {\n    removeNodeEdge(childNode, data, group, seriesModel, removeAnimationOpt);\n  }); // remove edge as child node\n\n  removeNodeEdge(node, data, group, seriesModel, removeAnimationOpt);\n}\n\nfunction getEdgeShape(layoutOpt, orient, curvature, sourceLayout, targetLayout) {\n  var cpx1;\n  var cpy1;\n  var cpx2;\n  var cpy2;\n  var x1;\n  var x2;\n  var y1;\n  var y2;\n\n  if (layoutOpt === 'radial') {\n    x1 = sourceLayout.rawX;\n    y1 = sourceLayout.rawY;\n    x2 = targetLayout.rawX;\n    y2 = targetLayout.rawY;\n    var radialCoor1 = radialCoordinate(x1, y1);\n    var radialCoor2 = radialCoordinate(x1, y1 + (y2 - y1) * curvature);\n    var radialCoor3 = radialCoordinate(x2, y2 + (y1 - y2) * curvature);\n    var radialCoor4 = radialCoordinate(x2, y2);\n    return {\n      x1: radialCoor1.x || 0,\n      y1: radialCoor1.y || 0,\n      x2: radialCoor4.x || 0,\n      y2: radialCoor4.y || 0,\n      cpx1: radialCoor2.x || 0,\n      cpy1: radialCoor2.y || 0,\n      cpx2: radialCoor3.x || 0,\n      cpy2: radialCoor3.y || 0\n    };\n  } else {\n    x1 = sourceLayout.x;\n    y1 = sourceLayout.y;\n    x2 = targetLayout.x;\n    y2 = targetLayout.y;\n\n    if (orient === 'LR' || orient === 'RL') {\n      cpx1 = x1 + (x2 - x1) * curvature;\n      cpy1 = y1;\n      cpx2 = x2 + (x1 - x2) * curvature;\n      cpy2 = y2;\n    }\n\n    if (orient === 'TB' || orient === 'BT') {\n      cpx1 = x1;\n      cpy1 = y1 + (y2 - y1) * curvature;\n      cpx2 = x2;\n      cpy2 = y2 + (y1 - y2) * curvature;\n    }\n  }\n\n  return {\n    x1: x1,\n    y1: y1,\n    x2: x2,\n    y2: y2,\n    cpx1: cpx1,\n    cpy1: cpy1,\n    cpx2: cpx2,\n    cpy2: cpy2\n  };\n}\n\nexport default TreeView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport SeriesModel from '../../model/Series';\nimport Tree from '../../data/Tree';\nimport Model from '../../model/Model';\nimport { createTooltipMarkup } from '../../component/tooltip/tooltipMarkup';\nimport { wrapTreePathInfo } from '../helper/treeHelper';\n\nvar TreeSeriesModel =\n/** @class */\nfunction (_super) {\n  __extends(TreeSeriesModel, _super);\n\n  function TreeSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.hasSymbolVisual = true; // Do it self.\n\n    _this.ignoreStyleOnData = true;\n    return _this;\n  }\n  /**\n   * Init a tree data structure from data in option series\n   */\n\n\n  TreeSeriesModel.prototype.getInitialData = function (option) {\n    //create an virtual root\n    var root = {\n      name: option.name,\n      children: option.data\n    };\n    var leaves = option.leaves || {};\n    var leavesModel = new Model(leaves, this, this.ecModel);\n    var tree = Tree.createTree(root, this, beforeLink);\n\n    function beforeLink(nodeData) {\n      nodeData.wrapMethod('getItemModel', function (model, idx) {\n        var node = tree.getNodeByDataIndex(idx);\n\n        if (!(node && node.children.length && node.isExpand)) {\n          model.parentModel = leavesModel;\n        }\n\n        return model;\n      });\n    }\n\n    var treeDepth = 0;\n    tree.eachNode('preorder', function (node) {\n      if (node.depth > treeDepth) {\n        treeDepth = node.depth;\n      }\n    });\n    var expandAndCollapse = option.expandAndCollapse;\n    var expandTreeDepth = expandAndCollapse && option.initialTreeDepth >= 0 ? option.initialTreeDepth : treeDepth;\n    tree.root.eachNode('preorder', function (node) {\n      var item = node.hostTree.data.getRawDataItem(node.dataIndex); // Add item.collapsed != null, because users can collapse node original in the series.data.\n\n      node.isExpand = item && item.collapsed != null ? !item.collapsed : node.depth <= expandTreeDepth;\n    });\n    return tree.data;\n  };\n  /**\n   * Make the configuration 'orient' backward compatibly, with 'horizontal = LR', 'vertical = TB'.\n   * @returns {string} orient\n   */\n\n\n  TreeSeriesModel.prototype.getOrient = function () {\n    var orient = this.get('orient');\n\n    if (orient === 'horizontal') {\n      orient = 'LR';\n    } else if (orient === 'vertical') {\n      orient = 'TB';\n    }\n\n    return orient;\n  };\n\n  TreeSeriesModel.prototype.setZoom = function (zoom) {\n    this.option.zoom = zoom;\n  };\n\n  TreeSeriesModel.prototype.setCenter = function (center) {\n    this.option.center = center;\n  };\n\n  TreeSeriesModel.prototype.formatTooltip = function (dataIndex, multipleSeries, dataType) {\n    var tree = this.getData().tree;\n    var realRoot = tree.root.children[0];\n    var node = tree.getNodeByDataIndex(dataIndex);\n    var value = node.getValue();\n    var name = node.name;\n\n    while (node && node !== realRoot) {\n      name = node.parentNode.name + '.' + name;\n      node = node.parentNode;\n    }\n\n    return createTooltipMarkup('nameValue', {\n      name: name,\n      value: value,\n      noValue: isNaN(value) || value == null\n    });\n  }; // Add tree path to tooltip param\n\n\n  TreeSeriesModel.prototype.getDataParams = function (dataIndex) {\n    var params = _super.prototype.getDataParams.apply(this, arguments);\n\n    var node = this.getData().tree.getNodeByDataIndex(dataIndex);\n    params.treeAncestors = wrapTreePathInfo(node, this);\n    return params;\n  };\n\n  TreeSeriesModel.type = 'series.tree'; // can support the position parameters 'left', 'top','right','bottom', 'width',\n  // 'height' in the setOption() with 'merge' mode normal.\n\n  TreeSeriesModel.layoutMode = 'box';\n  TreeSeriesModel.defaultOption = {\n    zlevel: 0,\n    z: 2,\n    coordinateSystem: 'view',\n    // the position of the whole view\n    left: '12%',\n    top: '12%',\n    right: '12%',\n    bottom: '12%',\n    // the layout of the tree, two value can be selected, 'orthogonal' or 'radial'\n    layout: 'orthogonal',\n    // value can be 'polyline'\n    edgeShape: 'curve',\n    edgeForkPosition: '50%',\n    // true | false | 'move' | 'scale', see module:component/helper/RoamController.\n    roam: false,\n    // Symbol size scale ratio in roam\n    nodeScaleRatio: 0.4,\n    // Default on center of graph\n    center: null,\n    zoom: 1,\n    orient: 'LR',\n    symbol: 'emptyCircle',\n    symbolSize: 7,\n    expandAndCollapse: true,\n    initialTreeDepth: 2,\n    lineStyle: {\n      color: '#ccc',\n      width: 1.5,\n      curveness: 0.5\n    },\n    itemStyle: {\n      color: 'lightsteelblue',\n      // borderColor: '#c23531',\n      borderWidth: 1.5\n    },\n    label: {\n      show: true\n    },\n    animationEasing: 'linear',\n    animationDuration: 700,\n    animationDurationUpdate: 500\n  };\n  return TreeSeriesModel;\n}(SeriesModel);\n\nexport default TreeSeriesModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n/**\n * Traverse the tree from bottom to top and do something\n */\nfunction eachAfter(root, callback, separation) {\n  var nodes = [root];\n  var next = [];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    next.push(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = 0; i < children.length; i++) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n\n  while (node = next.pop()) {\n    // jshint ignore:line\n    callback(node, separation);\n  }\n}\n/**\n * Traverse the tree from top to bottom and do something\n */\n\n\nfunction eachBefore(root, callback) {\n  var nodes = [root];\n  var node;\n\n  while (node = nodes.pop()) {\n    // jshint ignore:line\n    callback(node);\n\n    if (node.isExpand) {\n      var children = node.children;\n\n      if (children.length) {\n        for (var i = children.length - 1; i >= 0; i--) {\n          nodes.push(children[i]);\n        }\n      }\n    }\n  }\n}\n\nexport { eachAfter, eachBefore };","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { eachAfter, eachBefore } from './traversalHelper';\nimport { init, firstWalk, secondWalk, separation as sep, radialCoordinate, getViewRect } from './layoutHelper';\nexport default function treeLayout(ecModel, api) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    commonLayout(seriesModel, api);\n  });\n}\n\nfunction commonLayout(seriesModel, api) {\n  var layoutInfo = getViewRect(seriesModel, api);\n  seriesModel.layoutInfo = layoutInfo;\n  var layout = seriesModel.get('layout');\n  var width = 0;\n  var height = 0;\n  var separation = null;\n\n  if (layout === 'radial') {\n    width = 2 * Math.PI;\n    height = Math.min(layoutInfo.height, layoutInfo.width) / 2;\n    separation = sep(function (node1, node2) {\n      return (node1.parentNode === node2.parentNode ? 1 : 2) / node1.depth;\n    });\n  } else {\n    width = layoutInfo.width;\n    height = layoutInfo.height;\n    separation = sep();\n  }\n\n  var virtualRoot = seriesModel.getData().tree.root;\n  var realRoot = virtualRoot.children[0];\n\n  if (realRoot) {\n    init(virtualRoot);\n    eachAfter(realRoot, firstWalk, separation);\n    virtualRoot.hierNode.modifier = -realRoot.hierNode.prelim;\n    eachBefore(realRoot, secondWalk);\n    var left_1 = realRoot;\n    var right_1 = realRoot;\n    var bottom_1 = realRoot;\n    eachBefore(realRoot, function (node) {\n      var x = node.getLayout().x;\n\n      if (x < left_1.getLayout().x) {\n        left_1 = node;\n      }\n\n      if (x > right_1.getLayout().x) {\n        right_1 = node;\n      }\n\n      if (node.depth > bottom_1.depth) {\n        bottom_1 = node;\n      }\n    });\n    var delta = left_1 === right_1 ? 1 : separation(left_1, right_1) / 2;\n    var tx_1 = delta - left_1.getLayout().x;\n    var kx_1 = 0;\n    var ky_1 = 0;\n    var coorX_1 = 0;\n    var coorY_1 = 0;\n\n    if (layout === 'radial') {\n      kx_1 = width / (right_1.getLayout().x + delta + tx_1); // here we use (node.depth - 1), bucause the real root's depth is 1\n\n      ky_1 = height / (bottom_1.depth - 1 || 1);\n      eachBefore(realRoot, function (node) {\n        coorX_1 = (node.getLayout().x + tx_1) * kx_1;\n        coorY_1 = (node.depth - 1) * ky_1;\n        var finalCoor = radialCoordinate(coorX_1, coorY_1);\n        node.setLayout({\n          x: finalCoor.x,\n          y: finalCoor.y,\n          rawX: coorX_1,\n          rawY: coorY_1\n        }, true);\n      });\n    } else {\n      var orient_1 = seriesModel.getOrient();\n\n      if (orient_1 === 'RL' || orient_1 === 'LR') {\n        ky_1 = height / (right_1.getLayout().x + delta + tx_1);\n        kx_1 = width / (bottom_1.depth - 1 || 1);\n        eachBefore(realRoot, function (node) {\n          coorY_1 = (node.getLayout().x + tx_1) * ky_1;\n          coorX_1 = orient_1 === 'LR' ? (node.depth - 1) * kx_1 : width - (node.depth - 1) * kx_1;\n          node.setLayout({\n            x: coorX_1,\n            y: coorY_1\n          }, true);\n        });\n      } else if (orient_1 === 'TB' || orient_1 === 'BT') {\n        kx_1 = width / (right_1.getLayout().x + delta + tx_1);\n        ky_1 = height / (bottom_1.depth - 1 || 1);\n        eachBefore(realRoot, function (node) {\n          coorX_1 = (node.getLayout().x + tx_1) * kx_1;\n          coorY_1 = orient_1 === 'TB' ? (node.depth - 1) * ky_1 : height - (node.depth - 1) * ky_1;\n          node.setLayout({\n            x: coorX_1,\n            y: coorY_1\n          }, true);\n        });\n      }\n    }\n  }\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { extend } from 'zrender/lib/core/util';\nexport default function treeVisual(ecModel) {\n  ecModel.eachSeriesByType('tree', function (seriesModel) {\n    var data = seriesModel.getData();\n    var tree = data.tree;\n    tree.eachNode(function (node) {\n      var model = node.getModel(); // TODO Optimize\n\n      var style = model.getModel('itemStyle').getItemStyle();\n      var existsStyle = data.ensureUniqueItemVisual(node.dataIndex, 'style');\n      extend(existsStyle, style);\n    });\n  });\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport TreeView from './TreeView';\nimport TreeSeriesModel from './TreeSeries';\nimport treeLayout from './treeLayout';\nimport treeVisual from './treeVisual';\nimport { installTreeAction } from './treeAction';\nexport function install(registers) {\n  registers.registerChartView(TreeView);\n  registers.registerSeriesModel(TreeSeriesModel);\n  registers.registerLayout(treeLayout);\n  registers.registerVisual(treeVisual);\n  installTreeAction(registers);\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { updateCenterAndZoom } from '../../action/roamHelper';\nexport function installTreeAction(registers) {\n  registers.registerAction({\n    type: 'treeExpandAndCollapse',\n    event: 'treeExpandAndCollapse',\n    update: 'update'\n  }, function (payload, ecModel) {\n    ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'tree',\n      query: payload\n    }, function (seriesModel) {\n      var dataIndex = payload.dataIndex;\n      var tree = seriesModel.getData().tree;\n      var node = tree.getNodeByDataIndex(dataIndex);\n      node.isExpand = !node.isExpand;\n    });\n  });\n  registers.registerAction({\n    type: 'treeRoam',\n    event: 'treeRoam',\n    // Here we set 'none' instead of 'update', because roam action\n    // just need to update the transform matrix without having to recalculate\n    // the layout. So don't need to go through the whole update process, such\n    // as 'dataPrcocess', 'coordSystemUpdate', 'layout' and so on.\n    update: 'none'\n  }, function (payload, ecModel) {\n    ecModel.eachComponent({\n      mainType: 'series',\n      subType: 'tree',\n      query: payload\n    }, function (seriesModel) {\n      var coordSys = seriesModel.coordinateSystem;\n      var res = updateCenterAndZoom(coordSys, payload);\n      seriesModel.setCenter && seriesModel.setCenter(res.center);\n      seriesModel.setZoom && seriesModel.setZoom(res.zoom);\n    });\n  });\n}"],"sourceRoot":""}