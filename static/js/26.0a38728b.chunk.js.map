{"version":3,"sources":["../../node_modules/echarts/core.js","../../node_modules/echarts/lib/chart/helper/createSeriesDataSimply.js","../../node_modules/echarts/lib/util/shape/sausage.js","../../node_modules/echarts/lib/chart/gauge/PointerPath.js","../../node_modules/echarts/lib/chart/gauge/GaugeView.js","../../node_modules/echarts/lib/chart/gauge/GaugeSeries.js","../../node_modules/echarts/lib/chart/gauge/install.js"],"names":["createSeriesDataSimply","seriesModel","opt","nameList","isArray","coordDimensions","extend","encodeDefine","getEncode","source","getSource","dimensions","prepareSeriesDataSchema","list","SeriesData","initData","SausageShape","this","cx","cy","r0","r","startAngle","endAngle","Math","PI","clockwise","SausagePath","_super","opts","_this","call","type","__extends","prototype","getDefaultShape","buildPath","ctx","shape","x","y","max","dr","rCenter","unitStartX","cos","unitStartY","sin","unitEndX","unitEndY","moveTo","arc","closePath","Path","PointerShape","angle","width","PointerPath","mathCos","mathSin","lineTo","formatLabel","value","labelFormatter","label","replace","PI2","GaugeView","apply","arguments","render","ecModel","api","group","removeAll","colorList","get","posInfo","center","getWidth","height","getHeight","size","min","parsePercent","parsePosition","_renderMain","_data","getData","dispose","axisLineModel","getModel","MainPath","Sausage","graphic","showAxis","lineStyleModel","axisLineWidth","angleRangeSpan","prevEndAngle","i","length","sector","silent","setStyle","fill","getLineStyle","add","getColor","percent","tmp","_renderTicks","_renderTitleAndDetail","_renderAnchor","_renderPointer","unitX","unitY","minVal","maxVal","splitLineModel","tickModel","labelModel","splitNumber","subSplitNumber","splitLineLen","tickLen","step","subStep","splitLineStyle","tickLineStyle","splitLineDistance","distance","splitLine","x1","y1","x2","y2","style","stroke","round","autoColor","createTextStyle","text","verticalAlign","align","inheritColor","j","tickLine","oldData","oldProgressData","_progressEls","progressList","showPointer","progressModel","showProgress","data","valueDim","mapDimension","valueExtent","angleExtent","createPointer","idx","pointer","pointerModel","getItemModel","pointerWidth","pointerLength","pointerStr","pointerOffset","pointerOffsetX","pointerOffsetY","pointerKeepAspect","createSymbol","rotation","createProgress","ProgressPath","isOverlap","progressWidth","count","progress","z2","diff","linearMap","setItemGraphicEl","isClip","setCommonECData","seriesIndex","dataType","update","newIdx","oldIdx","previousPointer","getItemGraphicEl","previousRotate","previousProgress","execute","each","itemModel","emphasisModel","symbolStyle","getItemVisual","visualColor","ZRImage","pathStyle","useStyle","image","setColor","getItemStyle","z2EmphasisLift","setStatesStylesFromModel","enableHoverEmphasis","anchorModel","anchorSize","anchorType","offsetCenter","anchorKeepAspect","anchor","contentGroup","newTitleEls","newDetailEls","hasAnimation","isAnimationEnabled","showPointerAbove","_titleEls","_detailEls","itemGroup","itemTitleModel","titleOffsetCenter","titleX","titleY","labelEl","attr","getName","itemDetailModel","detailOffsetCenter","detailX","detailY","detailColor","formatter_1","isNaN","setLabelValueAnimation","normal","animateLabelValue","getFormattedLabel","labelDataIndex","status","labelDimIndex","fmt","extendParams","interpolatedValue","ChartView","GaugeSeriesModel","visualStyleAccessPath","getInitialData","option","defaultOption","zlevel","z","colorBy","legendHoverLink","radius","axisLine","show","roundCap","lineStyle","color","overlap","clip","axisTick","axisLabel","fontSize","icon","showAbove","keepAspect","itemStyle","borderWidth","borderColor","title","valueAnimation","detail","backgroundColor","padding","fontWeight","lineHeight","SeriesModel","install","registers","registerChartView","registerSeriesModel"],"mappings":"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","file":"static/js/26.0a38728b.chunk.js","sourcesContent":["/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\nexport * from './lib/export/core';","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport prepareSeriesDataSchema from '../../data/helper/createDimensions';\nimport SeriesData from '../../data/SeriesData';\nimport { extend, isArray } from 'zrender/lib/core/util';\n/**\n * [Usage]:\n * (1)\n * createListSimply(seriesModel, ['value']);\n * (2)\n * createListSimply(seriesModel, {\n *     coordDimensions: ['value'],\n *     dimensionsCount: 5\n * });\n */\n\nexport default function createSeriesDataSimply(seriesModel, opt, nameList) {\n  opt = isArray(opt) && {\n    coordDimensions: opt\n  } || extend({\n    encodeDefine: seriesModel.getEncode()\n  }, opt);\n  var source = seriesModel.getSource();\n  var dimensions = prepareSeriesDataSchema(source, opt).dimensions;\n  var list = new SeriesData(dimensions, seriesModel);\n  list.initData(source, nameList);\n  return list;\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport { Path } from '../graphic';\n/**\n * Sausage: similar to sector, but have half circle on both sides\n */\n\nvar SausageShape =\n/** @class */\nfunction () {\n  function SausageShape() {\n    this.cx = 0;\n    this.cy = 0;\n    this.r0 = 0;\n    this.r = 0;\n    this.startAngle = 0;\n    this.endAngle = Math.PI * 2;\n    this.clockwise = true;\n  }\n\n  return SausageShape;\n}();\n\nvar SausagePath =\n/** @class */\nfunction (_super) {\n  __extends(SausagePath, _super);\n\n  function SausagePath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this.type = 'sausage';\n    return _this;\n  }\n\n  SausagePath.prototype.getDefaultShape = function () {\n    return new SausageShape();\n  };\n\n  SausagePath.prototype.buildPath = function (ctx, shape) {\n    var x = shape.cx;\n    var y = shape.cy;\n    var r0 = Math.max(shape.r0 || 0, 0);\n    var r = Math.max(shape.r, 0);\n    var dr = (r - r0) * 0.5;\n    var rCenter = r0 + dr;\n    var startAngle = shape.startAngle;\n    var endAngle = shape.endAngle;\n    var clockwise = shape.clockwise;\n    var unitStartX = Math.cos(startAngle);\n    var unitStartY = Math.sin(startAngle);\n    var unitEndX = Math.cos(endAngle);\n    var unitEndY = Math.sin(endAngle);\n    var lessThanCircle = clockwise ? endAngle - startAngle < Math.PI * 2 : startAngle - endAngle < Math.PI * 2;\n\n    if (lessThanCircle) {\n      ctx.moveTo(unitStartX * r0 + x, unitStartY * r0 + y);\n      ctx.arc(unitStartX * rCenter + x, unitStartY * rCenter + y, dr, -Math.PI + startAngle, startAngle, !clockwise);\n    }\n\n    ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n    ctx.moveTo(unitEndX * r + x, unitEndY * r + y);\n    ctx.arc(unitEndX * rCenter + x, unitEndY * rCenter + y, dr, endAngle - Math.PI * 2, endAngle - Math.PI, !clockwise);\n\n    if (r0 !== 0) {\n      ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n      ctx.moveTo(unitStartX * r0 + x, unitEndY * r0 + y);\n    }\n\n    ctx.closePath();\n  };\n\n  return SausagePath;\n}(Path);\n\nexport default SausagePath;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport Path from 'zrender/lib/graphic/Path';\n\nvar PointerShape =\n/** @class */\nfunction () {\n  function PointerShape() {\n    this.angle = 0;\n    this.width = 10;\n    this.r = 10;\n    this.x = 0;\n    this.y = 0;\n  }\n\n  return PointerShape;\n}();\n\nvar PointerPath =\n/** @class */\nfunction (_super) {\n  __extends(PointerPath, _super);\n\n  function PointerPath(opts) {\n    var _this = _super.call(this, opts) || this;\n\n    _this.type = 'pointer';\n    return _this;\n  }\n\n  PointerPath.prototype.getDefaultShape = function () {\n    return new PointerShape();\n  };\n\n  PointerPath.prototype.buildPath = function (ctx, shape) {\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var r = shape.r;\n    var width = shape.width;\n    var angle = shape.angle;\n    var x = shape.x - mathCos(angle) * width * (width >= r / 3 ? 1 : 2);\n    var y = shape.y - mathSin(angle) * width * (width >= r / 3 ? 1 : 2);\n    angle = shape.angle - Math.PI / 2;\n    ctx.moveTo(x, y);\n    ctx.lineTo(shape.x + mathCos(angle) * width, shape.y + mathSin(angle) * width);\n    ctx.lineTo(shape.x + mathCos(shape.angle) * r, shape.y + mathSin(shape.angle) * r);\n    ctx.lineTo(shape.x - mathCos(angle) * width, shape.y - mathSin(angle) * width);\n    ctx.lineTo(x, y);\n  };\n\n  return PointerPath;\n}(Path);\n\nexport default PointerPath;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport PointerPath from './PointerPath';\nimport * as graphic from '../../util/graphic';\nimport { setStatesStylesFromModel, enableHoverEmphasis } from '../../util/states';\nimport { createTextStyle, setLabelValueAnimation, animateLabelValue } from '../../label/labelStyle';\nimport ChartView from '../../view/Chart';\nimport { parsePercent, round, linearMap } from '../../util/number';\nimport Sausage from '../../util/shape/sausage';\nimport { createSymbol } from '../../util/symbol';\nimport ZRImage from 'zrender/lib/graphic/Image';\nimport { extend } from 'zrender/lib/core/util';\nimport { setCommonECData } from '../../util/innerStore';\n\nfunction parsePosition(seriesModel, api) {\n  var center = seriesModel.get('center');\n  var width = api.getWidth();\n  var height = api.getHeight();\n  var size = Math.min(width, height);\n  var cx = parsePercent(center[0], api.getWidth());\n  var cy = parsePercent(center[1], api.getHeight());\n  var r = parsePercent(seriesModel.get('radius'), size / 2);\n  return {\n    cx: cx,\n    cy: cy,\n    r: r\n  };\n}\n\nfunction formatLabel(value, labelFormatter) {\n  var label = value == null ? '' : value + '';\n\n  if (labelFormatter) {\n    if (typeof labelFormatter === 'string') {\n      label = labelFormatter.replace('{value}', label);\n    } else if (typeof labelFormatter === 'function') {\n      label = labelFormatter(value);\n    }\n  }\n\n  return label;\n}\n\nvar PI2 = Math.PI * 2;\n\nvar GaugeView =\n/** @class */\nfunction (_super) {\n  __extends(GaugeView, _super);\n\n  function GaugeView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = GaugeView.type;\n    return _this;\n  }\n\n  GaugeView.prototype.render = function (seriesModel, ecModel, api) {\n    this.group.removeAll();\n    var colorList = seriesModel.get(['axisLine', 'lineStyle', 'color']);\n    var posInfo = parsePosition(seriesModel, api);\n\n    this._renderMain(seriesModel, ecModel, api, colorList, posInfo);\n\n    this._data = seriesModel.getData();\n  };\n\n  GaugeView.prototype.dispose = function () {};\n\n  GaugeView.prototype._renderMain = function (seriesModel, ecModel, api, colorList, posInfo) {\n    var group = this.group;\n    var clockwise = seriesModel.get('clockwise');\n    var startAngle = -seriesModel.get('startAngle') / 180 * Math.PI;\n    var endAngle = -seriesModel.get('endAngle') / 180 * Math.PI;\n    var axisLineModel = seriesModel.getModel('axisLine');\n    var roundCap = axisLineModel.get('roundCap');\n    var MainPath = roundCap ? Sausage : graphic.Sector;\n    var showAxis = axisLineModel.get('show');\n    var lineStyleModel = axisLineModel.getModel('lineStyle');\n    var axisLineWidth = lineStyleModel.get('width');\n    var angleRangeSpan = !((endAngle - startAngle) % PI2) && endAngle !== startAngle ? PI2 : (endAngle - startAngle) % PI2;\n    var prevEndAngle = startAngle;\n\n    for (var i = 0; showAxis && i < colorList.length; i++) {\n      // Clamp\n      var percent = Math.min(Math.max(colorList[i][0], 0), 1);\n      endAngle = startAngle + angleRangeSpan * percent;\n      var sector = new MainPath({\n        shape: {\n          startAngle: prevEndAngle,\n          endAngle: endAngle,\n          cx: posInfo.cx,\n          cy: posInfo.cy,\n          clockwise: clockwise,\n          r0: posInfo.r - axisLineWidth,\n          r: posInfo.r\n        },\n        silent: true\n      });\n      sector.setStyle({\n        fill: colorList[i][1]\n      });\n      sector.setStyle(lineStyleModel.getLineStyle( // Because we use sector to simulate arc\n      // so the properties for stroking are useless\n      ['color', 'width']));\n      group.add(sector);\n      prevEndAngle = endAngle;\n    }\n\n    var getColor = function (percent) {\n      // Less than 0\n      if (percent <= 0) {\n        return colorList[0][1];\n      }\n\n      var i;\n\n      for (i = 0; i < colorList.length; i++) {\n        if (colorList[i][0] >= percent && (i === 0 ? 0 : colorList[i - 1][0]) < percent) {\n          return colorList[i][1];\n        }\n      } // More than 1\n\n\n      return colorList[i - 1][1];\n    };\n\n    if (!clockwise) {\n      var tmp = startAngle;\n      startAngle = endAngle;\n      endAngle = tmp;\n    }\n\n    this._renderTicks(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise, axisLineWidth);\n\n    this._renderTitleAndDetail(seriesModel, ecModel, api, getColor, posInfo);\n\n    this._renderAnchor(seriesModel, posInfo);\n\n    this._renderPointer(seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise, axisLineWidth);\n  };\n\n  GaugeView.prototype._renderTicks = function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise, axisLineWidth) {\n    var group = this.group;\n    var cx = posInfo.cx;\n    var cy = posInfo.cy;\n    var r = posInfo.r;\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n    var splitLineModel = seriesModel.getModel('splitLine');\n    var tickModel = seriesModel.getModel('axisTick');\n    var labelModel = seriesModel.getModel('axisLabel');\n    var splitNumber = seriesModel.get('splitNumber');\n    var subSplitNumber = tickModel.get('splitNumber');\n    var splitLineLen = parsePercent(splitLineModel.get('length'), r);\n    var tickLen = parsePercent(tickModel.get('length'), r);\n    var angle = startAngle;\n    var step = (endAngle - startAngle) / splitNumber;\n    var subStep = step / subSplitNumber;\n    var splitLineStyle = splitLineModel.getModel('lineStyle').getLineStyle();\n    var tickLineStyle = tickModel.getModel('lineStyle').getLineStyle();\n    var splitLineDistance = splitLineModel.get('distance');\n    var unitX;\n    var unitY;\n\n    for (var i = 0; i <= splitNumber; i++) {\n      unitX = Math.cos(angle);\n      unitY = Math.sin(angle); // Split line\n\n      if (splitLineModel.get('show')) {\n        var distance = splitLineDistance ? splitLineDistance + axisLineWidth : axisLineWidth;\n        var splitLine = new graphic.Line({\n          shape: {\n            x1: unitX * (r - distance) + cx,\n            y1: unitY * (r - distance) + cy,\n            x2: unitX * (r - splitLineLen - distance) + cx,\n            y2: unitY * (r - splitLineLen - distance) + cy\n          },\n          style: splitLineStyle,\n          silent: true\n        });\n\n        if (splitLineStyle.stroke === 'auto') {\n          splitLine.setStyle({\n            stroke: getColor(i / splitNumber)\n          });\n        }\n\n        group.add(splitLine);\n      } // Label\n\n\n      if (labelModel.get('show')) {\n        var distance = labelModel.get('distance') + splitLineDistance;\n        var label = formatLabel(round(i / splitNumber * (maxVal - minVal) + minVal), labelModel.get('formatter'));\n        var autoColor = getColor(i / splitNumber);\n        group.add(new graphic.Text({\n          style: createTextStyle(labelModel, {\n            text: label,\n            x: unitX * (r - splitLineLen - distance) + cx,\n            y: unitY * (r - splitLineLen - distance) + cy,\n            verticalAlign: unitY < -0.8 ? 'top' : unitY > 0.8 ? 'bottom' : 'middle',\n            align: unitX < -0.4 ? 'left' : unitX > 0.4 ? 'right' : 'center'\n          }, {\n            inheritColor: autoColor\n          }),\n          silent: true\n        }));\n      } // Axis tick\n\n\n      if (tickModel.get('show') && i !== splitNumber) {\n        var distance = tickModel.get('distance');\n        distance = distance ? distance + axisLineWidth : axisLineWidth;\n\n        for (var j = 0; j <= subSplitNumber; j++) {\n          unitX = Math.cos(angle);\n          unitY = Math.sin(angle);\n          var tickLine = new graphic.Line({\n            shape: {\n              x1: unitX * (r - distance) + cx,\n              y1: unitY * (r - distance) + cy,\n              x2: unitX * (r - tickLen - distance) + cx,\n              y2: unitY * (r - tickLen - distance) + cy\n            },\n            silent: true,\n            style: tickLineStyle\n          });\n\n          if (tickLineStyle.stroke === 'auto') {\n            tickLine.setStyle({\n              stroke: getColor((i + j / subSplitNumber) / splitNumber)\n            });\n          }\n\n          group.add(tickLine);\n          angle += subStep;\n        }\n\n        angle -= subStep;\n      } else {\n        angle += step;\n      }\n    }\n  };\n\n  GaugeView.prototype._renderPointer = function (seriesModel, ecModel, api, getColor, posInfo, startAngle, endAngle, clockwise, axisLineWidth) {\n    var group = this.group;\n    var oldData = this._data;\n    var oldProgressData = this._progressEls;\n    var progressList = [];\n    var showPointer = seriesModel.get(['pointer', 'show']);\n    var progressModel = seriesModel.getModel('progress');\n    var showProgress = progressModel.get('show');\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n    var valueExtent = [minVal, maxVal];\n    var angleExtent = [startAngle, endAngle];\n\n    function createPointer(idx, angle) {\n      var itemModel = data.getItemModel(idx);\n      var pointerModel = itemModel.getModel('pointer');\n      var pointerWidth = parsePercent(pointerModel.get('width'), posInfo.r);\n      var pointerLength = parsePercent(pointerModel.get('length'), posInfo.r);\n      var pointerStr = seriesModel.get(['pointer', 'icon']);\n      var pointerOffset = pointerModel.get('offsetCenter');\n      var pointerOffsetX = parsePercent(pointerOffset[0], posInfo.r);\n      var pointerOffsetY = parsePercent(pointerOffset[1], posInfo.r);\n      var pointerKeepAspect = pointerModel.get('keepAspect');\n      var pointer; // not exist icon type will be set 'rect'\n\n      if (pointerStr) {\n        pointer = createSymbol(pointerStr, pointerOffsetX - pointerWidth / 2, pointerOffsetY - pointerLength, pointerWidth, pointerLength, null, pointerKeepAspect);\n      } else {\n        pointer = new PointerPath({\n          shape: {\n            angle: -Math.PI / 2,\n            width: pointerWidth,\n            r: pointerLength,\n            x: pointerOffsetX,\n            y: pointerOffsetY\n          }\n        });\n      }\n\n      pointer.rotation = -(angle + Math.PI / 2);\n      pointer.x = posInfo.cx;\n      pointer.y = posInfo.cy;\n      return pointer;\n    }\n\n    function createProgress(idx, endAngle) {\n      var roundCap = progressModel.get('roundCap');\n      var ProgressPath = roundCap ? Sausage : graphic.Sector;\n      var isOverlap = progressModel.get('overlap');\n      var progressWidth = isOverlap ? progressModel.get('width') : axisLineWidth / data.count();\n      var r0 = isOverlap ? posInfo.r - progressWidth : posInfo.r - (idx + 1) * progressWidth;\n      var r = isOverlap ? posInfo.r : posInfo.r - idx * progressWidth;\n      var progress = new ProgressPath({\n        shape: {\n          startAngle: startAngle,\n          endAngle: endAngle,\n          cx: posInfo.cx,\n          cy: posInfo.cy,\n          clockwise: clockwise,\n          r0: r0,\n          r: r\n        }\n      });\n      isOverlap && (progress.z2 = maxVal - data.get(valueDim, idx) % maxVal);\n      return progress;\n    }\n\n    if (showProgress || showPointer) {\n      data.diff(oldData).add(function (idx) {\n        if (showPointer) {\n          var pointer = createPointer(idx, startAngle);\n          graphic.initProps(pointer, {\n            rotation: -(linearMap(data.get(valueDim, idx), valueExtent, angleExtent, true) + Math.PI / 2)\n          }, seriesModel);\n          group.add(pointer);\n          data.setItemGraphicEl(idx, pointer);\n        }\n\n        if (showProgress) {\n          var progress = createProgress(idx, startAngle);\n          var isClip = progressModel.get('clip');\n          graphic.initProps(progress, {\n            shape: {\n              endAngle: linearMap(data.get(valueDim, idx), valueExtent, angleExtent, isClip)\n            }\n          }, seriesModel);\n          group.add(progress); // Add data index and series index for indexing the data by element\n          // Useful in tooltip\n\n          setCommonECData(seriesModel.seriesIndex, data.dataType, idx, progress);\n          progressList[idx] = progress;\n        }\n      }).update(function (newIdx, oldIdx) {\n        if (showPointer) {\n          var previousPointer = oldData.getItemGraphicEl(oldIdx);\n          var previousRotate = previousPointer ? previousPointer.rotation : startAngle;\n          var pointer = createPointer(newIdx, previousRotate);\n          pointer.rotation = previousRotate;\n          graphic.updateProps(pointer, {\n            rotation: -(linearMap(data.get(valueDim, newIdx), valueExtent, angleExtent, true) + Math.PI / 2)\n          }, seriesModel);\n          group.add(pointer);\n          data.setItemGraphicEl(newIdx, pointer);\n        }\n\n        if (showProgress) {\n          var previousProgress = oldProgressData[oldIdx];\n          var previousEndAngle = previousProgress ? previousProgress.shape.endAngle : startAngle;\n          var progress = createProgress(newIdx, previousEndAngle);\n          var isClip = progressModel.get('clip');\n          graphic.updateProps(progress, {\n            shape: {\n              endAngle: linearMap(data.get(valueDim, newIdx), valueExtent, angleExtent, isClip)\n            }\n          }, seriesModel);\n          group.add(progress); // Add data index and series index for indexing the data by element\n          // Useful in tooltip\n\n          setCommonECData(seriesModel.seriesIndex, data.dataType, newIdx, progress);\n          progressList[newIdx] = progress;\n        }\n      }).execute();\n      data.each(function (idx) {\n        var itemModel = data.getItemModel(idx);\n        var emphasisModel = itemModel.getModel('emphasis');\n\n        if (showPointer) {\n          var pointer = data.getItemGraphicEl(idx);\n          var symbolStyle = data.getItemVisual(idx, 'style');\n          var visualColor = symbolStyle.fill;\n\n          if (pointer instanceof ZRImage) {\n            var pathStyle = pointer.style;\n            pointer.useStyle(extend({\n              image: pathStyle.image,\n              x: pathStyle.x,\n              y: pathStyle.y,\n              width: pathStyle.width,\n              height: pathStyle.height\n            }, symbolStyle));\n          } else {\n            pointer.useStyle(symbolStyle);\n            pointer.type !== 'pointer' && pointer.setColor(visualColor);\n          }\n\n          pointer.setStyle(itemModel.getModel(['pointer', 'itemStyle']).getItemStyle());\n\n          if (pointer.style.fill === 'auto') {\n            pointer.setStyle('fill', getColor(linearMap(data.get(valueDim, idx), valueExtent, [0, 1], true)));\n          }\n\n          pointer.z2EmphasisLift = 0;\n          setStatesStylesFromModel(pointer, itemModel);\n          enableHoverEmphasis(pointer, emphasisModel.get('focus'), emphasisModel.get('blurScope'));\n        }\n\n        if (showProgress) {\n          var progress = progressList[idx];\n          progress.useStyle(data.getItemVisual(idx, 'style'));\n          progress.setStyle(itemModel.getModel(['progress', 'itemStyle']).getItemStyle());\n          progress.z2EmphasisLift = 0;\n          setStatesStylesFromModel(progress, itemModel);\n          enableHoverEmphasis(progress, emphasisModel.get('focus'), emphasisModel.get('blurScope'));\n        }\n      });\n      this._progressEls = progressList;\n    }\n  };\n\n  GaugeView.prototype._renderAnchor = function (seriesModel, posInfo) {\n    var anchorModel = seriesModel.getModel('anchor');\n    var showAnchor = anchorModel.get('show');\n\n    if (showAnchor) {\n      var anchorSize = anchorModel.get('size');\n      var anchorType = anchorModel.get('icon');\n      var offsetCenter = anchorModel.get('offsetCenter');\n      var anchorKeepAspect = anchorModel.get('keepAspect');\n      var anchor = createSymbol(anchorType, posInfo.cx - anchorSize / 2 + parsePercent(offsetCenter[0], posInfo.r), posInfo.cy - anchorSize / 2 + parsePercent(offsetCenter[1], posInfo.r), anchorSize, anchorSize, null, anchorKeepAspect);\n      anchor.z2 = anchorModel.get('showAbove') ? 1 : 0;\n      anchor.setStyle(anchorModel.getModel('itemStyle').getItemStyle());\n      this.group.add(anchor);\n    }\n  };\n\n  GaugeView.prototype._renderTitleAndDetail = function (seriesModel, ecModel, api, getColor, posInfo) {\n    var _this = this;\n\n    var data = seriesModel.getData();\n    var valueDim = data.mapDimension('value');\n    var minVal = +seriesModel.get('min');\n    var maxVal = +seriesModel.get('max');\n    var contentGroup = new graphic.Group();\n    var newTitleEls = [];\n    var newDetailEls = [];\n    var hasAnimation = seriesModel.isAnimationEnabled();\n    var showPointerAbove = seriesModel.get(['pointer', 'showAbove']);\n    data.diff(this._data).add(function (idx) {\n      newTitleEls[idx] = new graphic.Text({\n        silent: true\n      });\n      newDetailEls[idx] = new graphic.Text({\n        silent: true\n      });\n    }).update(function (idx, oldIdx) {\n      newTitleEls[idx] = _this._titleEls[oldIdx];\n      newDetailEls[idx] = _this._detailEls[oldIdx];\n    }).execute();\n    data.each(function (idx) {\n      var itemModel = data.getItemModel(idx);\n      var value = data.get(valueDim, idx);\n      var itemGroup = new graphic.Group();\n      var autoColor = getColor(linearMap(value, [minVal, maxVal], [0, 1], true));\n      var itemTitleModel = itemModel.getModel('title');\n\n      if (itemTitleModel.get('show')) {\n        var titleOffsetCenter = itemTitleModel.get('offsetCenter');\n        var titleX = posInfo.cx + parsePercent(titleOffsetCenter[0], posInfo.r);\n        var titleY = posInfo.cy + parsePercent(titleOffsetCenter[1], posInfo.r);\n        var labelEl = newTitleEls[idx];\n        labelEl.attr({\n          z2: showPointerAbove ? 0 : 2,\n          style: createTextStyle(itemTitleModel, {\n            x: titleX,\n            y: titleY,\n            text: data.getName(idx),\n            align: 'center',\n            verticalAlign: 'middle'\n          }, {\n            inheritColor: autoColor\n          })\n        });\n        itemGroup.add(labelEl);\n      }\n\n      var itemDetailModel = itemModel.getModel('detail');\n\n      if (itemDetailModel.get('show')) {\n        var detailOffsetCenter = itemDetailModel.get('offsetCenter');\n        var detailX = posInfo.cx + parsePercent(detailOffsetCenter[0], posInfo.r);\n        var detailY = posInfo.cy + parsePercent(detailOffsetCenter[1], posInfo.r);\n        var width = parsePercent(itemDetailModel.get('width'), posInfo.r);\n        var height = parsePercent(itemDetailModel.get('height'), posInfo.r);\n        var detailColor = seriesModel.get(['progress', 'show']) ? data.getItemVisual(idx, 'style').fill : autoColor;\n        var labelEl = newDetailEls[idx];\n        var formatter_1 = itemDetailModel.get('formatter');\n        labelEl.attr({\n          z2: showPointerAbove ? 0 : 2,\n          style: createTextStyle(itemDetailModel, {\n            x: detailX,\n            y: detailY,\n            text: formatLabel(value, formatter_1),\n            width: isNaN(width) ? null : width,\n            height: isNaN(height) ? null : height,\n            align: 'center',\n            verticalAlign: 'middle'\n          }, {\n            inheritColor: detailColor\n          })\n        });\n        setLabelValueAnimation(labelEl, {\n          normal: itemDetailModel\n        }, value, function (value) {\n          return formatLabel(value, formatter_1);\n        });\n        hasAnimation && animateLabelValue(labelEl, idx, data, seriesModel, {\n          getFormattedLabel: function (labelDataIndex, status, dataType, labelDimIndex, fmt, extendParams) {\n            return formatLabel(extendParams ? extendParams.interpolatedValue : value, formatter_1);\n          }\n        });\n        itemGroup.add(labelEl);\n      }\n\n      contentGroup.add(itemGroup);\n    });\n    this.group.add(contentGroup);\n    this._titleEls = newTitleEls;\n    this._detailEls = newDetailEls;\n  };\n\n  GaugeView.type = 'gauge';\n  return GaugeView;\n}(ChartView);\n\nexport default GaugeView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport createSeriesDataSimply from '../helper/createSeriesDataSimply';\nimport SeriesModel from '../../model/Series';\n\nvar GaugeSeriesModel =\n/** @class */\nfunction (_super) {\n  __extends(GaugeSeriesModel, _super);\n\n  function GaugeSeriesModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = GaugeSeriesModel.type;\n    _this.visualStyleAccessPath = 'itemStyle';\n    return _this;\n  }\n\n  GaugeSeriesModel.prototype.getInitialData = function (option, ecModel) {\n    return createSeriesDataSimply(this, ['value']);\n  };\n\n  GaugeSeriesModel.type = 'series.gauge';\n  GaugeSeriesModel.defaultOption = {\n    zlevel: 0,\n    z: 2,\n    colorBy: 'data',\n    // 默认全局居中\n    center: ['50%', '50%'],\n    legendHoverLink: true,\n    radius: '75%',\n    startAngle: 225,\n    endAngle: -45,\n    clockwise: true,\n    // 最小值\n    min: 0,\n    // 最大值\n    max: 100,\n    // 分割段数，默认为10\n    splitNumber: 10,\n    // 坐标轴线\n    axisLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      roundCap: false,\n      lineStyle: {\n        color: [[1, '#E6EBF8']],\n        width: 10\n      }\n    },\n    // 坐标轴线\n    progress: {\n      // 默认显示，属性show控制显示与否\n      show: false,\n      overlap: true,\n      width: 10,\n      roundCap: false,\n      clip: true\n    },\n    // 分隔线\n    splitLine: {\n      // 默认显示，属性show控制显示与否\n      show: true,\n      // 属性length控制线长\n      length: 10,\n      distance: 10,\n      // 属性lineStyle（详见lineStyle）控制线条样式\n      lineStyle: {\n        color: '#63677A',\n        width: 3,\n        type: 'solid'\n      }\n    },\n    // 坐标轴小标记\n    axisTick: {\n      // 属性show控制显示与否，默认不显示\n      show: true,\n      // 每份split细分多少段\n      splitNumber: 5,\n      // 属性length控制线长\n      length: 6,\n      distance: 10,\n      // 属性lineStyle控制线条样式\n      lineStyle: {\n        color: '#63677A',\n        width: 1,\n        type: 'solid'\n      }\n    },\n    axisLabel: {\n      show: true,\n      distance: 15,\n      // formatter: null,\n      color: '#464646',\n      fontSize: 12\n    },\n    pointer: {\n      icon: null,\n      offsetCenter: [0, 0],\n      show: true,\n      showAbove: true,\n      length: '60%',\n      width: 6,\n      keepAspect: false\n    },\n    anchor: {\n      show: false,\n      showAbove: false,\n      size: 6,\n      icon: 'circle',\n      offsetCenter: [0, 0],\n      keepAspect: false,\n      itemStyle: {\n        color: '#fff',\n        borderWidth: 0,\n        borderColor: '#5470c6'\n      }\n    },\n    title: {\n      show: true,\n      // x, y，单位px\n      offsetCenter: [0, '20%'],\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#464646',\n      fontSize: 16,\n      valueAnimation: false\n    },\n    detail: {\n      show: true,\n      backgroundColor: 'rgba(0,0,0,0)',\n      borderWidth: 0,\n      borderColor: '#ccc',\n      width: 100,\n      height: null,\n      padding: [5, 10],\n      // x, y，单位px\n      offsetCenter: [0, '40%'],\n      // formatter: null,\n      // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n      color: '#464646',\n      fontSize: 30,\n      fontWeight: 'bold',\n      lineHeight: 30,\n      valueAnimation: false\n    }\n  };\n  return GaugeSeriesModel;\n}(SeriesModel);\n\nexport default GaugeSeriesModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport GaugeView from './GaugeView';\nimport GaugeSeriesModel from './GaugeSeries';\nexport function install(registers) {\n  registers.registerChartView(GaugeView);\n  registers.registerSeriesModel(GaugeSeriesModel);\n}"],"sourceRoot":""}