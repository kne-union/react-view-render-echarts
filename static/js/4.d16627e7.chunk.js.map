{"version":3,"sources":["../../node_modules/echarts/lib/component/helper/listComponent.js","../../node_modules/echarts/lib/component/legend/LegendModel.js","../../node_modules/echarts/lib/component/legend/LegendView.js","../../node_modules/echarts/lib/component/legend/legendFilter.js","../../node_modules/echarts/lib/component/legend/legendAction.js","../../node_modules/echarts/lib/component/legend/installLegendPlain.js","../../node_modules/echarts/lib/component/legend/ScrollableLegendModel.js","../../node_modules/echarts/lib/component/legend/ScrollableLegendView.js","../../node_modules/echarts/lib/component/legend/installLegendScroll.js","../../node_modules/echarts/lib/component/legend/scrollableLegendAction.js","../../node_modules/echarts/lib/component/legend/install.js"],"names":["layout","group","componentModel","api","boxLayoutParams","getBoxLayoutParams","padding","get","viewportSize","width","getWidth","height","getHeight","rect","getLayoutRect","layoutBox","positionElement","makeBackground","formatUtil","style","getItemStyle","fill","graphic","shape","x","y","r","silent","z2","LegendModel","_super","_this","apply","this","arguments","type","layoutMode","ignoreSize","__extends","prototype","init","option","parentModel","ecModel","mergeDefaultAndTheme","selected","_updateSelector","mergeOption","call","selector","zrUtil","item","index","title","getLocaleModel","getDefaultSelectorOptions","optionUpdated","_updateData","legendData","_data","hasSelected","i","length","name_1","isSelected","select","potentialData","availableNames","eachRawSeries","seriesModel","isPotential","seriesName","name","push","legendVisualProvider","names","getAllNames","isSeriesFiltered","concat","isNameSpecified","_availableNames","rawData","dataItem","Model","getData","data","unSelect","toggleSelected","hasOwnProperty","allSelect","inverseSelect","getOrient","dependencies","defaultOption","zlevel","z","show","orient","left","top","align","backgroundColor","borderColor","borderRadius","borderWidth","itemGap","itemWidth","itemHeight","symbolRotate","inactiveColor","inactiveBorderColor","inactiveBorderWidth","itemStyle","color","opacity","decal","shadowBlur","shadowColor","shadowOffsetX","shadowOffsetY","borderCap","borderJoin","borderDashOffset","borderMiterLimit","lineStyle","inactiveWidth","cap","join","dashOffset","miterLimit","textStyle","selectedMode","selectorLabel","fontSize","fontFamily","emphasis","selectorPosition","selectorItemGap","selectorButtonGap","tooltip","ComponentModel","curry","each","Group","dispatchSelectAction","dataName","excludeSeriesId","dispatchDownplayAction","dispatchAction","dispatchHighlightAction","isUseHoverLayer","emphasisState","list","getZr","storage","getDisplayList","len","states","hoverLayer","LegendView","newlineDisabled","add","_contentGroup","_selectorGroup","_isFirstRender","getContentGroup","getSelectorGroup","render","legendModel","isFirstRender","resetInner","itemAlign","renderInner","positionInfo","maxSize","layoutUtil","mainRect","layoutInner","layoutRect","markRedraw","_backgroundEl","removeAll","remove","contentGroup","legendDrawnMap","selectMode","id","legendItemModel","dataIndex","g","newline","getSeriesByName","lineVisualStyle","getVisual","legendIcon","_createItem","on","set","provider","containName","idx","indexOfName","getItemVisual","colorArr","parse","stringify","process","_createSelector","selectorGroup","selectorItem","labelText","verticalAlign","onclick","labelModel","getModel","emphasisLabelModel","setLabelStyle","normal","defaultText","enableHoverEmphasis","itemVisualStyle","drawType","visualDrawType","iconRotate","legendIconType","iconType","legendLineStyle","itemProperties","ITEM_STYLE_KEY_MAP","propName","visualName","value","getShallow","stroke","lastIndexOf","lineWidth","legendLineModel","lineProperties","LINE_STYLE_KEY_MAP","visualHasBorder","indexOf","getLegendStyle","itemGroup","textStyleModel","getLegendIcon","rotate","opt","symboType","icon","createSymbol","setStyle","rotation","Math","PI","setOrigin","getDefaultLegendIcon","textX","textAlign","formatter","content","replace","createTextStyle","text","getTextColor","hitRect","getBoundingRect","invisible","tooltipModel","el","itemName","itemTooltipOption","eachChild","child","__legendDataIndex","contentRect","contentPos","selectorRect","selectorPos","orientIdx","wh","hw","yx","max","min","ComponentView","legendFilter","legendModels","findComponents","mainType","filterSeries","series","legendSelectActionHandler","methodName","payload","selectedMap","isToggleSelect","eachComponent","model","isItemSelected","install","registers","registerComponentModel","registerComponentView","registerProcessor","PRIORITY","PROCESSOR","SERIES_FILTER","registerSubTypeDefaulter","registerAction","installLegendAction","mergeAndNormalizeLayoutParams","target","raw","mergeLayoutParam","ScrollableLegendModel","setScrollDataIndex","scrollDataIndex","inputPositionParams","getLayoutParams","inheritDefaultOption","pageButtonItemGap","pageButtonGap","pageButtonPosition","pageFormatter","pageIcons","horizontal","vertical","pageIconColor","pageIconInactiveColor","pageIconSize","pageTextStyle","animationDurationUpdate","WH","XY","ScrollableLegendView","_currentIndex","_containerGroup","_controllerGroup","removeClipPath","__rectSize","self","controllerGroup","pageIconSizeArr","createPageButton","pageTextStyleModel","iconIdx","pageDataIndexName","_pageGo","font","getFont","xy","processMaxSize","_layoutContentAndController","offset","containerGroup","controllerRect","showController","_showController","containerPos","controllerPos","setPosition","clipShape","setClipPath","attr","pageInfo","_getPageInfo","pageIndex","contentPosition","_updatePageInfoView","to","legendId","canJump","childOfName","cursor","pageText","current","total","pageCount","containerRectSize","targetItemIndex","_findTargetItemIndex","children","targetItem","itemCount","pCount","result","pagePrevDataIndex","pageNextDataIndex","targetItemInfo","getItemInfo","s","winStartItemInfo","winEndItemInfo","currItemInfo","e","intersect","itemRect","start","itemInfo","winStart","targetDataIndex","legendDataIdx","defaultIndex","use","installLegendPlain","subType","query","installScrollableLegendAction","installLegendScroll"],"mappings":"8IACA,mGAsDO,SAASA,EAAOC,EAAOC,EAAgBC,GAC5C,IAAIC,EAAkBF,EAAeG,qBACjCC,EAAUJ,EAAeK,IAAI,WAC7BC,EAAe,CACjBC,MAAON,EAAIO,WACXC,OAAQR,EAAIS,aAEVC,EAAOC,YAAcV,EAAiBI,EAAcF,GACxDS,YAAUb,EAAeK,IAAI,UAAWN,EAAOC,EAAeK,IAAI,WAAYM,EAAKJ,MAAOI,EAAKF,QAC/FK,YAAgBf,EAAOG,EAAiBI,EAAcF,GAEjD,SAASW,EAAeJ,EAAMX,GACnC,IAAII,EAAUY,IAA6BhB,EAAeK,IAAI,YAC1DY,EAAQjB,EAAekB,aAAa,CAAC,QAAS,YAkBlD,OAjBAD,EAAME,KAAOnB,EAAeK,IAAI,mBAChCM,EAAO,IAAIS,IAAa,CACtBC,MAAO,CACLC,EAAGX,EAAKW,EAAIlB,EAAQ,GACpBmB,EAAGZ,EAAKY,EAAInB,EAAQ,GACpBG,MAAOI,EAAKJ,MAAQH,EAAQ,GAAKA,EAAQ,GACzCK,OAAQE,EAAKF,OAASL,EAAQ,GAAKA,EAAQ,GAC3CoB,EAAGxB,EAAeK,IAAI,iBAExBY,MAAOA,EACPQ,QAAQ,EACRC,IAAK,M,6HCmRMC,EAlSf,SAAUC,GAGR,SAASD,IACP,IAAIE,EAAmB,OAAXD,GAAmBA,EAAOE,MAAMC,KAAMC,YAAcD,KAchE,OAZAF,EAAMI,KAAON,EAAYM,KACzBJ,EAAMK,WAAa,CACjBD,KAAM,MAQNE,YAAY,GAEPN,EA6QT,OA9RAO,YAAUT,EAAaC,GAoBvBD,EAAYU,UAAUC,KAAO,SAAUC,EAAQC,EAAaC,GAC1DV,KAAKW,qBAAqBH,EAAQE,GAClCF,EAAOI,SAAWJ,EAAOI,UAAY,GAErCZ,KAAKa,gBAAgBL,IAGvBZ,EAAYU,UAAUQ,YAAc,SAAUN,EAAQE,GACpDb,EAAOS,UAAUQ,YAAYC,KAAKf,KAAMQ,EAAQE,GAEhDV,KAAKa,gBAAgBL,IAGvBZ,EAAYU,UAAUO,gBAAkB,SAAUL,GAChD,IAAIQ,EAAWR,EAAOQ,SAClBN,EAAUV,KAAKU,SAEF,IAAbM,IACFA,EAAWR,EAAOQ,SAAW,CAAC,MAAO,YAGnCC,UAAeD,IACjBC,OAAYD,GAAU,SAAUE,EAAMC,GACpCF,WAAgBC,KAAUA,EAAO,CAC/BhB,KAAMgB,IAERF,EAASG,GAASF,QAAaC,EA/DP,SAAUR,EAASR,GACjD,MAAa,QAATA,EACK,CACLA,KAAM,MACNkB,MAAOV,EAAQW,iBAAiB/C,IAAI,CAAC,SAAU,WAAY,SAE3C,YAAT4B,EACF,CACLA,KAAM,UACNkB,MAAOV,EAAQW,iBAAiB/C,IAAI,CAAC,SAAU,WAAY,kBAHxD,EAyDoCgD,CAA0BZ,EAASQ,EAAKhB,WAKnFN,EAAYU,UAAUiB,cAAgB,WACpCvB,KAAKwB,YAAYxB,KAAKU,SAEtB,IAAIe,EAAazB,KAAK0B,MAEtB,GAAID,EAAW,IAAmC,WAA7BzB,KAAK1B,IAAI,gBAA8B,CAG1D,IAFA,IAAIqD,GAAc,EAETC,EAAI,EAAGA,EAAIH,EAAWI,OAAQD,IAAK,CAC1C,IAAIE,EAASL,EAAWG,GAAGtD,IAAI,QAE/B,GAAI0B,KAAK+B,WAAWD,GAAS,CAE3B9B,KAAKgC,OAAOF,GACZH,GAAc,EACd,QAKHA,GAAe3B,KAAKgC,OAAOP,EAAW,GAAGnD,IAAI,WAIlDsB,EAAYU,UAAUkB,YAAc,SAAUd,GAC5C,IAAIuB,EAAgB,GAChBC,EAAiB,GACrBxB,EAAQyB,eAAc,SAAUC,GAC9B,IAEIC,EAFAC,EAAaF,EAAYG,KAI7B,GAHAL,EAAeM,KAAKF,GAGhBF,EAAYK,qBAAsB,CACpC,IACIC,EADWN,EAAYK,qBACNE,cAEhBjC,EAAQkC,iBAAiBR,KAC5BF,EAAiBA,EAAeW,OAAOH,IAGrCA,EAAMb,OACRI,EAAgBA,EAAcY,OAAOH,GAErCL,GAAc,OAGhBA,GAAc,EAGZA,GAAeS,YAAgBV,IACjCH,EAAcO,KAAKJ,EAAYG,SAQnCvC,KAAK+C,gBAAkBb,EAGvB,IAAIc,EAAUhD,KAAK1B,IAAI,SAAW2D,EAC9BR,EAAaR,MAAW+B,GAAS,SAAUC,GAQ7C,MANwB,kBAAbA,GAA6C,kBAAbA,IACzCA,EAAW,CACTV,KAAMU,IAIH,IAAIC,IAAMD,EAAUjD,KAAMA,KAAKU,WACrCV,MAMHA,KAAK0B,MAAQD,GAGf7B,EAAYU,UAAU6C,QAAU,WAC9B,OAAOnD,KAAK0B,OAGd9B,EAAYU,UAAU0B,OAAS,SAAUO,GACvC,IAAI3B,EAAWZ,KAAKQ,OAAOI,SAG3B,GAAqB,WAFFZ,KAAK1B,IAAI,gBAEG,CAC7B,IAAI8E,EAAOpD,KAAK0B,MAChBT,OAAYmC,GAAM,SAAUH,GAC1BrC,EAASqC,EAAS3E,IAAI,UAAW,KAIrCsC,EAAS2B,IAAQ,GAGnB3C,EAAYU,UAAU+C,SAAW,SAAUd,GACR,WAA7BvC,KAAK1B,IAAI,kBACX0B,KAAKQ,OAAOI,SAAS2B,IAAQ,IAIjC3C,EAAYU,UAAUgD,eAAiB,SAAUf,GAC/C,IAAI3B,EAAWZ,KAAKQ,OAAOI,SAEtBA,EAAS2C,eAAehB,KAC3B3B,EAAS2B,IAAQ,GAGnBvC,KAAKY,EAAS2B,GAAQ,WAAa,UAAUA,IAG/C3C,EAAYU,UAAUkD,UAAY,WAChC,IAAIJ,EAAOpD,KAAK0B,MACZd,EAAWZ,KAAKQ,OAAOI,SAC3BK,OAAYmC,GAAM,SAAUH,GAC1BrC,EAASqC,EAAS3E,IAAI,QAAQ,KAAS,MAI3CsB,EAAYU,UAAUmD,cAAgB,WACpC,IAAIL,EAAOpD,KAAK0B,MACZd,EAAWZ,KAAKQ,OAAOI,SAC3BK,OAAYmC,GAAM,SAAUH,GAC1B,IAAIV,EAAOU,EAAS3E,IAAI,QAAQ,GAE3BsC,EAAS2C,eAAehB,KAC3B3B,EAAS2B,IAAQ,GAGnB3B,EAAS2B,IAAS3B,EAAS2B,OAI/B3C,EAAYU,UAAUyB,WAAa,SAAUQ,GAC3C,IAAI3B,EAAWZ,KAAKQ,OAAOI,SAC3B,QAASA,EAAS2C,eAAehB,KAAU3B,EAAS2B,KAAUtB,UAAejB,KAAK+C,gBAAiBR,IAAS,GAG9G3C,EAAYU,UAAUoD,UAAY,WAChC,MAA8B,aAAvB1D,KAAK1B,IAAI,UAA2B,CACzC6C,MAAO,EACPoB,KAAM,YACJ,CACFpB,MAAO,EACPoB,KAAM,eAIV3C,EAAYM,KAAO,eACnBN,EAAY+D,aAAe,CAAC,UAC5B/D,EAAYgE,cAAgB,CAC1BC,OAAQ,EACRC,EAAG,EACHC,MAAM,EACNC,OAAQ,aACRC,KAAM,SAENC,IAAK,EAELC,MAAO,OACPC,gBAAiB,gBACjBC,YAAa,OACbC,aAAc,EACdC,YAAa,EACblG,QAAS,EACTmG,QAAS,GACTC,UAAW,GACXC,WAAY,GACZC,aAAc,UACdC,cAAe,OACfC,oBAAqB,OACrBC,oBAAqB,OACrBC,UAAW,CACTC,MAAO,UACPC,QAAS,UACTC,MAAO,UACPC,WAAY,EACZC,YAAa,KACbC,cAAe,EACfC,cAAe,EACfjB,YAAa,UACbE,YAAa,OACbgB,UAAW,UACXC,WAAY,UACZC,iBAAkB,UAClBC,iBAAkB,WAEpBC,UAAW,CACTnH,MAAO,OACPwG,MAAO,UACPJ,cAAe,OACfgB,cAAe,EACfX,QAAS,UACT/E,KAAM,UACN2F,IAAK,UACLC,KAAM,UACNC,WAAY,UACZC,WAAY,UACZb,WAAY,EACZC,YAAa,KACbC,cAAe,EACfC,cAAe,GAEjBW,UAAW,CACTjB,MAAO,QAETkB,cAAc,EACdlF,UAAU,EACVmF,cAAe,CACbpC,MAAM,EACNO,aAAc,GACdjG,QAAS,CAAC,EAAG,EAAG,EAAG,GACnB+H,SAAU,GACVC,WAAY,cACZrB,MAAO,OACPT,YAAa,EACbF,YAAa,QAEfiC,SAAU,CACRH,cAAe,CACbpC,MAAM,EACNiB,MAAO,OACPZ,gBAAiB,SAGrBmC,iBAAkB,OAClBC,gBAAiB,EACjBC,kBAAmB,GACnBC,QAAS,CACP3C,MAAM,IAGHnE,EA/RT,CAgSE+G,K,qHC1SEC,EAAQ3F,QACR4F,EAAO5F,OACP6F,EAAQzH,IA+dZ,SAAS0H,EAAqBzE,EAAY0E,EAAU9I,EAAK+I,GAEvDC,EAAuB5E,EAAY0E,EAAU9I,EAAK+I,GAClD/I,EAAIiJ,eAAe,CACjBjH,KAAM,qBACNqC,KAAoB,MAAdD,EAAqBA,EAAa0E,IAI1CI,EAAwB9E,EAAY0E,EAAU9I,EAAK+I,GAGrD,SAASI,EAAgBnJ,GAMvB,IALA,IACIoJ,EADAC,EAAOrJ,EAAIsJ,QAAQC,QAAQC,iBAE3B9F,EAAI,EACJ+F,EAAMJ,EAAK1F,OAERD,EAAI+F,KAASL,EAAgBC,EAAK3F,GAAGgG,OAAOtB,WACjD1E,IAGF,OAAO0F,GAAiBA,EAAcO,WAGxC,SAAST,EAAwB9E,EAAY0E,EAAU9I,EAAK+I,GAErDI,EAAgBnJ,IACnBA,EAAIiJ,eAAe,CACjBjH,KAAM,YACNoC,WAAYA,EACZC,KAAMyE,EACNC,gBAAiBA,IAKvB,SAASC,EAAuB5E,EAAY0E,EAAU9I,EAAK+I,GAEpDI,EAAgBnJ,IACnBA,EAAIiJ,eAAe,CACjBjH,KAAM,WACNoC,WAAYA,EACZC,KAAMyE,EACNC,gBAAiBA,IAKRa,MA5gBf,SAAUjI,GAGR,SAASiI,IACP,IAAIhI,EAAmB,OAAXD,GAAmBA,EAAOE,MAAMC,KAAMC,YAAcD,KAIhE,OAFAF,EAAMI,KAAO4H,EAAW5H,KACxBJ,EAAMiI,iBAAkB,EACjBjI,EA8VT,OArWAO,YAAUyH,EAAYjI,GAUtBiI,EAAWxH,UAAUC,KAAO,WAC1BP,KAAKhC,MAAMgK,IAAIhI,KAAKiI,cAAgB,IAAInB,GACxC9G,KAAKhC,MAAMgK,IAAIhI,KAAKkI,eAAiB,IAAIpB,GACzC9G,KAAKmI,gBAAiB,GAOxBL,EAAWxH,UAAU8H,gBAAkB,WACrC,OAAOpI,KAAKiI,eAOdH,EAAWxH,UAAU+H,iBAAmB,WACtC,OAAOrI,KAAKkI,gBAOdJ,EAAWxH,UAAUgI,OAAS,SAAUC,EAAa7H,EAASxC,GAC5D,IAAIsK,EAAgBxI,KAAKmI,eAIzB,GAHAnI,KAAKmI,gBAAiB,EACtBnI,KAAKyI,aAEAF,EAAYjK,IAAI,QAAQ,GAA7B,CAIA,IAAIoK,EAAYH,EAAYjK,IAAI,SAC5B0F,EAASuE,EAAYjK,IAAI,UAExBoK,GAA2B,SAAdA,IAChBA,EAAwC,UAA5BH,EAAYjK,IAAI,SAAkC,aAAX0F,EAAwB,QAAU,QAIvF,IAAIhD,EAAWuH,EAAYjK,IAAI,YAAY,GACvCiI,EAAmBgC,EAAYjK,IAAI,oBAAoB,IAEvD0C,GAAcuF,GAAyC,SAArBA,IACpCA,EAA8B,eAAXvC,EAA0B,MAAQ,SAGvDhE,KAAK2I,YAAYD,EAAWH,EAAa7H,EAASxC,EAAK8C,EAAUgD,EAAQuC,GAEzE,IAAIqC,EAAeL,EAAYnK,qBAC3BG,EAAe,CACjBC,MAAON,EAAIO,WACXC,OAAQR,EAAIS,aAEVN,EAAUkK,EAAYjK,IAAI,WAC1BuK,EAAUC,IAAyBF,EAAcrK,EAAcF,GAC/D0K,EAAW/I,KAAKgJ,YAAYT,EAAaG,EAAWG,EAASL,EAAexH,EAAUuF,GAEtF0C,EAAaH,IAAyB7H,WAAgB,CACxDzC,MAAOuK,EAASvK,MAChBE,OAAQqK,EAASrK,QAChBkK,GAAerK,EAAcF,GAChC2B,KAAKhC,MAAMuB,EAAI0J,EAAW1J,EAAIwJ,EAASxJ,EACvCS,KAAKhC,MAAMwB,EAAIyJ,EAAWzJ,EAAIuJ,EAASvJ,EACvCQ,KAAKhC,MAAMkL,aAEXlJ,KAAKhC,MAAMgK,IAAIhI,KAAKmJ,cAAgBnK,YAAe+J,EAAUR,MAG/DT,EAAWxH,UAAUmI,WAAa,WAChCzI,KAAKoI,kBAAkBgB,YACvBpJ,KAAKmJ,eAAiBnJ,KAAKhC,MAAMqL,OAAOrJ,KAAKmJ,eAC7CnJ,KAAKqI,mBAAmBe,aAG1BtB,EAAWxH,UAAUqI,YAAc,SAAUD,EAAWH,EAAa7H,EAASxC,EAAK8C,EAAUgD,EAAQuC,GACnG,IAAI+C,EAAetJ,KAAKoI,kBACpBmB,EAAiBtI,kBACjBuI,EAAajB,EAAYjK,IAAI,gBAC7B2I,EAAkB,GACtBvG,EAAQyB,eAAc,SAAUC,IAC7BA,EAAY9D,IAAI,oBAAsB2I,EAAgBzE,KAAKJ,EAAYqH,OAE1E5C,EAAK0B,EAAYpF,WAAW,SAAUuG,EAAiBC,GACrD,IAAIpH,EAAOmH,EAAgBpL,IAAI,QAE/B,IAAK0B,KAAK+H,kBAA6B,KAATxF,GAAwB,OAATA,GAAgB,CAC3D,IAAIqH,EAAI,IAAI9C,EAIZ,OAFA8C,EAAEC,SAAU,OACZP,EAAatB,IAAI4B,GAKnB,IAAIxH,EAAc1B,EAAQoJ,gBAAgBvH,GAAM,GAEhD,IAAIgH,EAAejL,IAAIiE,GAAvB,CAMA,GAAIH,EAAa,CACf,IAAIgB,EAAOhB,EAAYe,UACnB4G,EAAkB3G,EAAK4G,UAAU,oBAAsB,GACvDC,EAAa7G,EAAK4G,UAAU,cAM5B9K,EAAQkE,EAAK4G,UAAU,SAEXhK,KAAKkK,YAAY9H,EAAaG,EAAMoH,EAAWD,EAAiBnB,EAAaG,EAAWqB,EAAiB7K,EAAO+K,EAAYT,GAElIW,GAAG,QAASvD,EAAMG,EAAsBxE,EAAM,KAAMrE,EAAK+I,IAAkBkD,GAAG,YAAavD,EAAMQ,EAAyBhF,EAAYG,KAAM,KAAMrE,EAAK+I,IAAkBkD,GAAG,WAAYvD,EAAMM,EAAwB9E,EAAYG,KAAM,KAAMrE,EAAK+I,IAC7PsC,EAAea,IAAI7H,GAAM,QAGzB7B,EAAQyB,eAAc,SAAUC,GAE9B,IAAImH,EAAejL,IAAIiE,IAInBH,EAAYK,qBAAsB,CACpC,IAAI4H,EAAWjI,EAAYK,qBAE3B,IAAK4H,EAASC,YAAY/H,GACxB,OAGF,IAAIgI,EAAMF,EAASG,YAAYjI,GAC3BrD,EAAQmL,EAASI,cAAcF,EAAK,SACpCN,EAAaI,EAASI,cAAcF,EAAK,cACzCG,EAAWC,gBAAMzL,EAAME,MAGvBsL,GAA4B,IAAhBA,EAAS,KACvBA,EAAS,GAAK,GAEdxL,EAAME,KAAOwL,oBAAUF,EAAU,SAGnB1K,KAAKkK,YAAY9H,EAAaG,EAAMoH,EAAWD,EAAiBnB,EAAaG,EAAW,GAAIxJ,EAAO+K,EAAYT,GAGrHW,GAAG,QAASvD,EAAMG,EAAsB,KAAMxE,EAAMrE,EAAK+I,IAElEkD,GAAG,YAAavD,EAAMQ,EAAyB,KAAM7E,EAAMrE,EAAK+I,IAAkBkD,GAAG,WAAYvD,EAAMM,EAAwB,KAAM3E,EAAMrE,EAAK+I,IACjJsC,EAAea,IAAI7H,GAAM,MAE1BvC,MAGD6K,KAKH7K,MAECgB,GACFhB,KAAK8K,gBAAgB9J,EAAUuH,EAAarK,EAAK8F,EAAQuC,IAI7DuB,EAAWxH,UAAUwK,gBAAkB,SAAU9J,EAAUuH,EAAarK,EAAK8F,EAAQuC,GACnF,IAAIwE,EAAgB/K,KAAKqI,mBACzBxB,EAAK7F,GAAU,SAA8BgK,GAC3C,IAAI9K,EAAO8K,EAAa9K,KACpB+K,EAAY,IAAI5L,IAAa,CAC/BH,MAAO,CACLK,EAAG,EACHC,EAAG,EACH2E,MAAO,SACP+G,cAAe,UAEjBC,QAAS,WACPjN,EAAIiJ,eAAe,CACjBjH,KAAe,QAATA,EAAiB,kBAAoB,2BAIjD6K,EAAc/C,IAAIiD,GAClB,IAAIG,EAAa7C,EAAY8C,SAAS,iBAClCC,EAAqB/C,EAAY8C,SAAS,CAAC,WAAY,kBAC3DE,YAAcN,EAAW,CACvBO,OAAQJ,EACR9E,SAAUgF,GACT,CACDG,YAAaT,EAAa5J,QAE5BsK,YAAoBT,OAIxBnD,EAAWxH,UAAU4J,YAAc,SAAU9H,EAAaG,EAAMoH,EAAWD,EAAiBnB,EAAaG,EAAWqB,EAAiB4B,EAAiB1B,EAAYT,GAChK,IAAIoC,EAAWxJ,EAAYyJ,eACvBpH,EAAY8D,EAAYjK,IAAI,aAC5BoG,EAAa6D,EAAYjK,IAAI,cAC7ByD,EAAawG,EAAYxG,WAAWQ,GACpCuJ,EAAapC,EAAgBpL,IAAI,gBACjCyN,EAAiBrC,EAAgBpL,IAAI,QAGrCY,EA4IR,SAAwB8M,EAAUzD,EAAa0D,EAAiBlC,EAAiB4B,EAAiBC,EAAU7J,GAU1G,IAJA,IAAI2H,EAAkBnB,EAAY8C,SAAS,aACvCa,EAAiBC,IAAmBtJ,OAAO,CAAC,CAAC,WAC7CkC,EAAY,GAEPnD,EAAI,EAAGA,EAAIsK,EAAerK,SAAUD,EAAG,CAC9C,IAAIwK,EAAWF,EAAetK,GAAGsK,EAAetK,GAAGC,OAAS,GACxDwK,EAAaH,EAAetK,GAAG,GAGnC,GAAc,aAFV0K,EAAQ5C,EAAgB6C,WAAWH,IAGrC,OAAQC,GACN,IAAK,OAKHtH,EAAU3F,KAAOuM,EAAgBC,GACjC,MAEF,IAAK,SAKH7G,EAAUyH,OAASb,EAAqD,IAArCK,EAASS,YAAY,QAAS,GAAW,OAAS,UACrF,MAEF,IAAK,UAIH1H,EAAUE,SAAwB,SAAb2G,EAAsBD,EAAkB5B,GAAiB9E,QAC9E,MAEF,QACEF,EAAUsH,GAAcV,EAAgBU,OAEzB,SAAVC,GAAmC,cAAfD,EAE7BtH,EAAU2H,UAAYf,EAAgBe,UAAY,EAAI,EAAI,EAE1D3H,EAAUsH,GAAcC,EAK5B,IAAIK,EAAkBpE,EAAY8C,SAAS,aACvCuB,EAAiBC,IAAmBhK,OAAO,CAAC,CAAC,iBAAkB,CAAC,mBAChE8C,EAAY,GAEhB,IAAS/D,EAAI,EAAGA,EAAIgL,EAAe/K,SAAUD,EAAG,CAC9C,IAEI0K,EAFAF,EAAWQ,EAAehL,GAAG,GAC7ByK,EAAaO,EAAehL,GAAG,GAGrB,aAFV0K,EAAQK,EAAgBJ,WAAWH,IAGrCzG,EAAU0G,GAActC,EAAgBsC,GACrB,SAAVC,GAAmC,cAAfD,EAE7B1G,EAAU+G,UAAY3C,EAAgB2C,UAAY,EAAI,EAAI,EAE1D/G,EAAU0G,GAAcC,EAS5B,GAJmB,SAAnBvH,EAAU3F,OAAoB2F,EAAU3F,KAAOuM,EAAgBvM,MAC1C,SAArB2F,EAAUyH,SAAsBzH,EAAUyH,OAASb,EAAgBvM,MAC9C,SAArBuG,EAAU6G,SAAsB7G,EAAU6G,OAASb,EAAgBvM,OAE9D2C,EAAY,CACf,IAAIwC,EAAcgE,EAAYjK,IAAI,uBAO9BwO,EAAkB/H,EAAUiH,EAASe,QAAQ,UAAY,EAAI,OAAS,UAC1EhI,EAAU2H,UAA4B,SAAhBnI,EAAyBoH,EAAgBe,UAAY,GAAKI,EAAkB,EAAI,EAAI/H,EAAU2H,UACpH3H,EAAU3F,KAAOmJ,EAAYjK,IAAI,iBACjCyG,EAAUyH,OAASjE,EAAYjK,IAAI,uBACnCqH,EAAU6G,OAASP,EAAgB3N,IAAI,iBACvCqH,EAAU+G,UAAYT,EAAgB3N,IAAI,iBAG5C,MAAO,CACLyG,UAAWA,EACXY,UAAWA,GA1OCqH,CAFZ/C,EAAa8B,GAAkB9B,GAAc,YAENP,EADjBnB,EAAY8C,SAAS,aAC8BtB,EAAiB4B,EAAiBC,EAAU7J,GACjHkL,EAAY,IAAInG,EAChBoG,EAAiBxD,EAAgB2B,SAAS,aAE9C,GAAyC,oBAA9BjJ,EAAY+K,eAAkCpB,GAAqC,YAAnBA,EAUpE,CAEL,IAAIqB,EAA4B,YAAnBrB,GAAgC3J,EAAYe,UAAU6G,UAAU,UAA2B,YAAf8B,EAA2B1J,EAAYe,UAAU6G,UAAU,gBAAkB8B,EAAa,EAEnLmB,EAAUjF,IA4NhB,SAA8BqF,GAC5B,IAAIC,EAAYD,EAAIE,MAAQ,YACxBA,EAAOC,YAAaF,EAAW,EAAG,EAAGD,EAAI5I,UAAW4I,EAAI3I,WAAY2I,EAAItI,UAAU3F,MACtFmO,EAAKE,SAASJ,EAAItI,WAClBwI,EAAKG,UAAYL,EAAIvB,YAAc,GAAK6B,KAAKC,GAAK,IAClDL,EAAKM,UAAU,CAACR,EAAI5I,UAAY,EAAG4I,EAAI3I,WAAa,IAEhD4I,EAAUP,QAAQ,UAAY,IAChCQ,EAAKrO,MAAMsN,OAASe,EAAKrO,MAAME,KAC/BmO,EAAKrO,MAAME,KAAO,OAClBmO,EAAKrO,MAAMwN,UAAY,GAGzB,OAAOa,EAzOWO,CAAqB,CACjCrJ,UAAWA,EACXC,WAAYA,EACZ6I,KAAMtD,EACN6B,WAAYsB,EACZrI,UAAW7F,EAAM6F,UACjBY,UAAWzG,EAAMyG,kBAlBnBsH,EAAUjF,IAAI5F,EAAY+K,cAAc,CACtC1I,UAAWA,EACXC,WAAYA,EACZ6I,KAAMtD,EACN6B,WAAYA,EACZ/G,UAAW7F,EAAM6F,UACjBY,UAAWzG,EAAMyG,aAgBrB,IAAIoI,EAAsB,SAAdrF,EAAuBjE,EAAY,GAAK,EAChDuJ,EAAYtF,EACZuF,EAAY1F,EAAYjK,IAAI,aAC5B4P,EAAU3L,EAEW,kBAAd0L,GAA0BA,EACnCC,EAAUD,EAAUE,QAAQ,SAAkB,MAAR5L,EAAeA,EAAO,IAC9B,oBAAd0L,IAChBC,EAAUD,EAAU1L,IAGtB,IAAIqC,EAAgB8E,EAAgBpL,IAAI,iBACxC2O,EAAUjF,IAAI,IAAI3I,IAAa,CAC7BH,MAAOkP,YAAgBlB,EAAgB,CACrCmB,KAAMH,EACN3O,EAAGwO,EACHvO,EAAGkF,EAAa,EAChBtF,KAAM2C,EAAamL,EAAeoB,eAAiB1J,EACnDT,MAAO6J,EACP9C,cAAe,cAInB,IAAIqD,EAAU,IAAIlP,IAAa,CAC7BC,MAAO2N,EAAUuB,kBACjBC,WAAW,IAETC,EAAehF,EAAgB2B,SAAS,WAoB5C,OAlBIqD,EAAapQ,IAAI,SACnBe,mBAAyB,CACvBsP,GAAIJ,EACJtQ,eAAgBsK,EAChBqG,SAAUrM,EACVsM,kBAAmBH,EAAalO,SAIpCyM,EAAUjF,IAAIuG,GACdtB,EAAU6B,WAAU,SAAUC,GAC5BA,EAAMrP,QAAS,KAEjB6O,EAAQ7O,QAAU8J,EAClBxJ,KAAKoI,kBAAkBJ,IAAIiF,GAC3BvB,YAAoBuB,GAEpBA,EAAU+B,kBAAoBrF,EACvBsD,GAGTnF,EAAWxH,UAAU0I,YAAc,SAAUT,EAAaG,EAAWG,EAASL,EAAexH,EAAUuF,GACrG,IAAI+C,EAAetJ,KAAKoI,kBACpB2C,EAAgB/K,KAAKqI,mBAEzBS,IAAeP,EAAYjK,IAAI,UAAWgL,EAAcf,EAAYjK,IAAI,WAAYuK,EAAQrK,MAAOqK,EAAQnK,QAC3G,IAAIuQ,EAAc3F,EAAakF,kBAC3BU,EAAa,EAAED,EAAY1P,GAAI0P,EAAYzP,GAI/C,GAHAuL,EAAc7B,aACdI,EAAaJ,aAETlI,EAAU,CAEZ8H,IACA,aAAciC,EAAexC,EAAYjK,IAAI,mBAAmB,IAChE,IAAI6Q,EAAepE,EAAcyD,kBAC7BY,EAAc,EAAED,EAAa5P,GAAI4P,EAAa3P,GAC9CiH,EAAoB8B,EAAYjK,IAAI,qBAAqB,GACzD+Q,EAAY9G,EAAY7E,YAAYvC,MACpCmO,EAAmB,IAAdD,EAAkB,QAAU,SACjCE,EAAmB,IAAdF,EAAkB,SAAW,QAClCG,EAAmB,IAAdH,EAAkB,IAAM,IAER,QAArB9I,EACF6I,EAAYC,IAAcJ,EAAYK,GAAM7I,EAE5CyI,EAAWG,IAAcF,EAAaG,GAAM7I,EAI9C2I,EAAY,EAAIC,IAAcJ,EAAYM,GAAM,EAAIJ,EAAaI,GAAM,EACvExE,EAAcxL,EAAI6P,EAAY,GAC9BrE,EAAcvL,EAAI4P,EAAY,GAC9B9F,EAAa/J,EAAI2P,EAAW,GAC5B5F,EAAa9J,EAAI0P,EAAW,GAC5B,IAAInG,EAAW,CACbxJ,EAAG,EACHC,EAAG,GAKL,OAHAuJ,EAASuG,GAAML,EAAYK,GAAM7I,EAAoB0I,EAAaG,GAClEvG,EAASwG,GAAM5B,KAAK8B,IAAIR,EAAYM,GAAKJ,EAAaI,IACtDxG,EAASyG,GAAM7B,KAAK+B,IAAI,EAAGP,EAAaK,GAAMJ,EAAY,EAAIC,IACvDtG,EAIP,OAFAO,EAAa/J,EAAI2P,EAAW,GAC5B5F,EAAa9J,EAAI0P,EAAW,GACrBlP,KAAKhC,MAAMwQ,mBAQtB1G,EAAWxH,UAAU+I,OAAS,WAC5BrJ,KAAKoI,kBAAkBgB,YACvBpJ,KAAKmI,gBAAiB,GAGxBL,EAAW5H,KAAO,eACX4H,EAtWT,CAuWE6H,KCzXa,SAASC,EAAalP,GACnC,IAAImP,EAAenP,EAAQoP,eAAe,CACxCC,SAAU,WAGRF,GAAgBA,EAAahO,QAC/BnB,EAAQsP,cAAa,SAAUC,GAG7B,IAAK,IAAIrO,EAAI,EAAGA,EAAIiO,EAAahO,OAAQD,IACvC,IAAKiO,EAAajO,GAAGG,WAAWkO,EAAO1N,MACrC,OAAO,EAIX,OAAO,KCZb,SAAS2N,EAA0BC,EAAYC,EAAS1P,GACtD,IAEIqB,EAFAsO,EAAc,GACdC,EAAgC,mBAAfH,EAoCrB,OAjCAzP,EAAQ6P,cAAc,UAAU,SAAUhI,GACpC+H,GAAgC,MAAdvO,EAKpBwG,EAAYxG,EAAa,SAAW,YAAYqO,EAAQ7N,MAChC,cAAf4N,GAA6C,kBAAfA,EACvC5H,EAAY4H,MAEZ5H,EAAY4H,GAAYC,EAAQ7N,MAChCR,EAAawG,EAAYxG,WAAWqO,EAAQ7N,OAG9C,IAAId,EAAa8G,EAAYpF,UAC7B0D,eAAKpF,GAAY,SAAU+O,GACzB,IAAIjO,EAAOiO,EAAMlS,IAAI,QAErB,GAAa,OAATiE,GAA0B,KAATA,EAArB,CAIA,IAAIkO,EAAiBlI,EAAYxG,WAAWQ,GAExC8N,EAAY9M,eAAehB,GAE7B8N,EAAY9N,GAAQ8N,EAAY9N,IAASkO,EAEzCJ,EAAY9N,GAAQkO,SAKJ,cAAfN,GAA6C,kBAAfA,EAAiC,CACpEvP,SAAUyP,GACR,CACF9N,KAAM6N,EAAQ7N,KACd3B,SAAUyP,GCzCP,SAASK,EAAQC,GACtBA,EAAUC,uBAAuBhR,GACjC+Q,EAAUE,sBAAsB/I,GAChC6I,EAAUG,kBAAkBH,EAAUI,SAASC,UAAUC,cAAerB,GACxEe,EAAUO,yBAAyB,UAAU,WAC3C,MAAO,WDwCJ,SAA6BP,GAQlCA,EAAUQ,eAAe,qBAAsB,sBAAuBvK,gBAAMsJ,EAA2B,mBACvGS,EAAUQ,eAAe,kBAAmB,kBAAmBvK,gBAAMsJ,EAA2B,cAChGS,EAAUQ,eAAe,sBAAuB,sBAAuBvK,gBAAMsJ,EAA2B,kBAQxGS,EAAUQ,eAAe,eAAgB,iBAAkBvK,gBAAMsJ,EAA2B,WAQ5FS,EAAUQ,eAAe,iBAAkB,mBAAoBvK,gBAAMsJ,EAA2B,aChEhGkB,CAAoBT,G,aCwDtB,SAASU,EAA8B9I,EAAa+I,EAAQC,GAC1D,IACInR,EAAa,CAAC,EAAG,GACrBA,EAFamI,EAAY7E,YAEPvC,OAAS,EAC3BqQ,YAAiBF,EAAQC,EAAK,CAC5BrR,KAAM,MACNE,aAAcA,IAIHqR,MAtEf,SAAU5R,GAGR,SAAS4R,IACP,IAAI3R,EAAmB,OAAXD,GAAmBA,EAAOE,MAAMC,KAAMC,YAAcD,KAGhE,OADAF,EAAMI,KAAOuR,EAAsBvR,KAC5BJ,EAgDT,OAtDAO,YAAUoR,EAAuB5R,GAajC4R,EAAsBnR,UAAUoR,mBAAqB,SAAUC,GAC7D3R,KAAKQ,OAAOmR,gBAAkBA,GAGhCF,EAAsBnR,UAAUC,KAAO,SAAUC,EAAQC,EAAaC,GACpE,IAAIkR,EAAsBC,YAAgBrR,GAE1CX,EAAOS,UAAUC,KAAKQ,KAAKf,KAAMQ,EAAQC,EAAaC,GAEtD2Q,EAA8BrR,KAAMQ,EAAQoR,IAO9CH,EAAsBnR,UAAUQ,YAAc,SAAUN,EAAQE,GAC9Db,EAAOS,UAAUQ,YAAYC,KAAKf,KAAMQ,EAAQE,GAEhD2Q,EAA8BrR,KAAMA,KAAKQ,OAAQA,IAGnDiR,EAAsBvR,KAAO,gBAC7BuR,EAAsB7N,cAAgBkO,YAAqBlS,EAAYgE,cAAe,CACpF+N,gBAAiB,EACjBI,kBAAmB,EACnBC,cAAe,KACfC,mBAAoB,MACpBC,cAAe,oBACfC,UAAW,CACTC,WAAY,CAAC,qBAAsB,wBACnCC,SAAU,CAAC,oBAAqB,qBAElCC,cAAe,UACfC,sBAAuB,OACvBC,aAAc,GACdC,cAAe,CACbzN,MAAO,QAET0N,wBAAyB,MAEpBjB,EAvDT,CAwDE7R,G,SCtDEkH,EAAQzH,IACRsT,EAAK,CAAC,QAAS,UACfC,EAAK,CAAC,IAAK,KA8YAC,EA1Yf,SAAUhT,GAGR,SAASgT,IACP,IAAI/S,EAAmB,OAAXD,GAAmBA,EAAOE,MAAMC,KAAMC,YAAcD,KAKhE,OAHAF,EAAMI,KAAO2S,EAAqB3S,KAClCJ,EAAMiI,iBAAkB,EACxBjI,EAAMgT,cAAgB,EACfhT,EA8XT,OAtYAO,YAAUwS,EAAsBhT,GAWhCgT,EAAqBvS,UAAUC,KAAO,WACpCV,EAAOS,UAAUC,KAAKQ,KAAKf,MAE3BA,KAAKhC,MAAMgK,IAAIhI,KAAK+S,gBAAkB,IAAIjM,GAE1C9G,KAAK+S,gBAAgB/K,IAAIhI,KAAKoI,mBAE9BpI,KAAKhC,MAAMgK,IAAIhI,KAAKgT,iBAAmB,IAAIlM,IAO7C+L,EAAqBvS,UAAUmI,WAAa,WAC1C5I,EAAOS,UAAUmI,WAAW1H,KAAKf,MAEjCA,KAAKgT,iBAAiB5J,YAEtBpJ,KAAK+S,gBAAgBE,iBAErBjT,KAAK+S,gBAAgBG,WAAa,MAOpCL,EAAqBvS,UAAUqI,YAAc,SAAUD,EAAWH,EAAa7H,EAASxC,EAAK8C,EAAUgD,EAAQuC,GAC7G,IAAI4M,EAAOnT,KAEXH,EAAOS,UAAUqI,YAAY5H,KAAKf,KAAM0I,EAAWH,EAAa7H,EAASxC,EAAK8C,EAAUgD,EAAQuC,GAEhG,IAAI6M,EAAkBpT,KAAKgT,iBAGvBR,EAAejK,EAAYjK,IAAI,gBAAgB,GAC/C+U,EAAkBpS,UAAeuR,GAAgBA,EAAe,CAACA,EAAcA,GACnFc,EAAiB,WAAY,GAC7B,IAAIC,EAAqBhL,EAAY8C,SAAS,iBAe9C,SAASiI,EAAiB/Q,EAAMiR,GAC9B,IAAIC,EAAoBlR,EAAO,YAC3BgL,EAAOlO,aAAmBkJ,EAAYjK,IAAI,aAAa,GAAMiK,EAAY7E,YAAYnB,MAAMiR,GAAU,CAGvGrI,QAASlK,OAAYkS,EAAKO,QAASP,EAAMM,EAAmBlL,EAAarK,IACxE,CACDqB,GAAI8T,EAAgB,GAAK,EACzB7T,GAAI6T,EAAgB,GAAK,EACzB7U,MAAO6U,EAAgB,GACvB3U,OAAQ2U,EAAgB,KAE1B9F,EAAKhL,KAAOA,EACZ6Q,EAAgBpL,IAAIuF,GA3BtB6F,EAAgBpL,IAAI,IAAI3I,IAAa,CACnCkD,KAAM,WACNrD,MAAO,CAELmP,KAAM,QACNjP,KAAMmU,EAAmBjF,eACzBqF,KAAMJ,EAAmBK,UACzB1I,cAAe,SACf/G,MAAO,UAETzE,QAAQ,KAEV4T,EAAiB,WAAY,IAuB/BT,EAAqBvS,UAAU0I,YAAc,SAAUT,EAAaG,EAAWG,EAASL,EAAexH,EAAUuF,GAC/G,IAAIwE,EAAgB/K,KAAKqI,mBACrBgH,EAAY9G,EAAY7E,YAAYvC,MACpCmO,EAAKqD,EAAGtD,GACRwE,EAAKjB,EAAGvD,GACRE,EAAKoD,EAAG,EAAItD,GACZG,EAAKoD,EAAG,EAAIvD,GAChBrO,GAAY8H,IACZ,aAAciC,EAAexC,EAAYjK,IAAI,mBAAmB,IAChE,IAAImI,EAAoB8B,EAAYjK,IAAI,qBAAqB,GACzD6Q,EAAepE,EAAcyD,kBAC7BY,EAAc,EAAED,EAAa5P,GAAI4P,EAAa3P,GAC9CsU,EAAiB7S,QAAa4H,GAClC7H,IAAa8S,EAAexE,GAAMzG,EAAQyG,GAAMH,EAAaG,GAAM7I,GAEnE,IAAIsC,EAAW/I,KAAK+T,4BAA4BxL,EAAaC,EAAesL,EAAgBzE,EAAWC,EAAIC,EAAIC,EAAIqE,GAEnH,GAAI7S,EAAU,CACZ,GAAyB,QAArBuF,EACF6I,EAAYC,IAActG,EAASuG,GAAM7I,MACpC,CACL,IAAIuN,EAAS7E,EAAaG,GAAM7I,EAChC2I,EAAYC,IAAc2E,EAC1BjL,EAAS8K,IAAOG,EAGlBjL,EAASuG,IAAOH,EAAaG,GAAM7I,EACnC2I,EAAY,EAAIC,IAActG,EAASyG,GAAMzG,EAASwG,GAAM,EAAIJ,EAAaI,GAAM,EACnFxG,EAASwG,GAAM5B,KAAK8B,IAAI1G,EAASwG,GAAKJ,EAAaI,IACnDxG,EAASyG,GAAM7B,KAAK+B,IAAI3G,EAASyG,GAAKL,EAAaK,GAAMJ,EAAY,EAAIC,IACzEtE,EAAcxL,EAAI6P,EAAY,GAC9BrE,EAAcvL,EAAI4P,EAAY,GAC9BrE,EAAc7B,aAGhB,OAAOH,GAGT8J,EAAqBvS,UAAUyT,4BAA8B,SAAUxL,EAAaC,EAAeK,EAASwG,EAAWC,EAAIC,EAAIC,EAAIqE,GACjI,IAAIvK,EAAetJ,KAAKoI,kBACpB6L,EAAiBjU,KAAK+S,gBACtBK,EAAkBpT,KAAKgT,iBAE3BlK,IAAeP,EAAYjK,IAAI,UAAWgL,EAAcf,EAAYjK,IAAI,WAAa+Q,EAAmBxG,EAAQrK,MAAf,KAAsB6Q,EAAY,KAAOxG,EAAQnK,QAClJoK,IACA,aAAcsK,EAAiB7K,EAAYjK,IAAI,qBAAqB,IACpE,IAAI2Q,EAAc3F,EAAakF,kBAC3B0F,EAAiBd,EAAgB5E,kBACjC2F,EAAiBnU,KAAKoU,gBAAkBnF,EAAYK,GAAMzG,EAAQyG,GAElEJ,EAAa,EAAED,EAAY1P,GAAI0P,EAAYzP,GAI1CgJ,IACH0G,EAAWG,GAAa/F,EAAauK,IAIvC,IAAIQ,EAAe,CAAC,EAAG,GACnBC,EAAgB,EAAEJ,EAAe3U,GAAI2U,EAAe1U,GACpDwS,EAAgB/Q,YAAiBsH,EAAYjK,IAAI,iBAAiB,GAAOiK,EAAYjK,IAAI,WAAW,IAEpG6V,IAGyB,QAFF5L,EAAYjK,IAAI,sBAAsB,GAG7DgW,EAAcjF,IAAcxG,EAAQyG,GAAM4E,EAAe5E,GAGvD+E,EAAahF,IAAc6E,EAAe5E,GAAM0C,GAKtDsC,EAAc,EAAIjF,IAAcJ,EAAYM,GAAM,EAAI2E,EAAe3E,GAAM,EAC3EjG,EAAaiL,YAAYrF,GACzB+E,EAAeM,YAAYF,GAC3BjB,EAAgBmB,YAAYD,GAI5B,IAAIvL,EAAW,CACbxJ,EAAG,EACHC,EAAG,GASL,GANAuJ,EAASuG,GAAM6E,EAAiBtL,EAAQyG,GAAML,EAAYK,GAC1DvG,EAASwG,GAAM5B,KAAK8B,IAAIR,EAAYM,GAAK2E,EAAe3E,IAExDxG,EAASyG,GAAM7B,KAAK+B,IAAI,EAAGwE,EAAe1E,GAAM8E,EAAc,EAAIjF,IAClE4E,EAAef,WAAarK,EAAQyG,GAEhC6E,EAAgB,CAClB,IAAIK,EAAY,CACdjV,EAAG,EACHC,EAAG,GAELgV,EAAUlF,GAAM3B,KAAK8B,IAAI5G,EAAQyG,GAAM4E,EAAe5E,GAAM0C,EAAe,GAC3EwC,EAAUjF,GAAMxG,EAASwG,GACzB0E,EAAeQ,YAAY,IAAIpV,IAAa,CAC1CC,MAAOkV,KAITP,EAAef,WAAasB,EAAUlF,QAGtC8D,EAAgBtE,WAAU,SAAUC,GAClCA,EAAM2F,KAAK,CACTjG,WAAW,EACX/O,QAAQ,OAMd,IAAIiV,EAAW3U,KAAK4U,aAAarM,GAWjC,OATsB,MAAtBoM,EAASE,WAAqBxV,IAAoBiK,EAAc,CAC9D/J,EAAGoV,EAASG,gBAAgB,GAC5BtV,EAAGmV,EAASG,gBAAgB,IAG9BX,EAAiB5L,EAAc,MAE/BvI,KAAK+U,oBAAoBxM,EAAaoM,GAE/B5L,GAGT8J,EAAqBvS,UAAUoT,QAAU,SAAUsB,EAAIzM,EAAarK,GAClE,IAAIyT,EAAkB3R,KAAK4U,aAAarM,GAAayM,GAElC,MAAnBrD,GAA2BzT,EAAIiJ,eAAe,CAC5CjH,KAAM,eACNyR,gBAAiBA,EACjBsD,SAAU1M,EAAYkB,MAI1BoJ,EAAqBvS,UAAUyU,oBAAsB,SAAUxM,EAAaoM,GAC1E,IAAIvB,EAAkBpT,KAAKgT,iBAC3B/R,OAAY,CAAC,WAAY,aAAa,SAAUsB,GAC9C,IACI2S,EAA2B,MAAjBP,EADJpS,EAAO,aAEbgL,EAAO6F,EAAgB+B,YAAY5S,GAEnCgL,IACFA,EAAKE,SAAS,OAAQyH,EAAU3M,EAAYjK,IAAI,iBAAiB,GAAQiK,EAAYjK,IAAI,yBAAyB,IAClHiP,EAAK6H,OAASF,EAAU,UAAY,cAGxC,IAAIG,EAAWjC,EAAgB+B,YAAY,YACvCjD,EAAgB3J,EAAYjK,IAAI,iBAChCuW,EAAYF,EAASE,UACrBS,EAAuB,MAAbT,EAAoBA,EAAY,EAAI,EAC9CU,EAAQZ,EAASa,UACrBH,GAAYnD,GAAiBmD,EAAS5H,SAAS,OAAQxM,WAAgBiR,GAAiBA,EAAc/D,QAAQ,YAAwB,MAAXmH,EAAkB,GAAKA,EAAU,IAAInH,QAAQ,UAAoB,MAAToH,EAAgB,GAAKA,EAAQ,IAAMrD,EAAc,CAClOoD,QAASA,EACTC,MAAOA,MAaX1C,EAAqBvS,UAAUsU,aAAe,SAAUrM,GACtD,IAAIoJ,EAAkBpJ,EAAYjK,IAAI,mBAAmB,GACrDgL,EAAetJ,KAAKoI,kBACpBqN,EAAoBzV,KAAK+S,gBAAgBG,WACzC7D,EAAY9G,EAAY7E,YAAYvC,MACpCmO,EAAKqD,EAAGtD,GACRwE,EAAKjB,EAAGvD,GAERqG,EAAkB1V,KAAK2V,qBAAqBhE,GAE5CiE,EAAWtM,EAAasM,WACxBC,EAAaD,EAASF,GACtBI,EAAYF,EAAS/T,OACrBkU,EAAUD,EAAgB,EAAJ,EACtBE,EAAS,CACXlB,gBAAiB,CAACxL,EAAa/J,EAAG+J,EAAa9J,GAC/CgW,UAAWO,EACXlB,UAAWkB,EAAS,EACpBE,kBAAmB,KACnBC,kBAAmB,MAGrB,IAAKL,EACH,OAAOG,EAGT,IAAIG,EAAiBC,EAAYP,GACjCG,EAAOlB,gBAAgBzF,IAAc8G,EAAeE,EAYpD,IAAK,IAAIzU,EAAI8T,EAAkB,EAAGY,EAAmBH,EAAgBI,EAAiBJ,EAAgBK,EAAe,KAAM5U,GAAKkU,IAAalU,KAC3I4U,EAAeJ,EAAYR,EAAShU,MAGnB2U,EAAeE,EAAIH,EAAiBD,EAAIZ,GAEzDe,IAAiBE,EAAUF,EAAcF,EAAiBD,MAEtDC,EADEC,EAAe3U,EAAI0U,EAAiB1U,EACnB2U,EAGAC,KAIa,MAA5BR,EAAOE,oBACTF,EAAOE,kBAAoBI,EAAiB1U,KAG5CoU,EAAOR,WAIbe,EAAiBC,EAGnB,IAAS5U,EAAI8T,EAAkB,EAAGY,EAAmBH,EAAgBI,EAAiBJ,EAAgBK,EAAe,KAAM5U,IAAM,IAAKA,GACpI4U,EAAeJ,EAAYR,EAAShU,MAIjB8U,EAAUH,EAAgBC,EAAaH,MAC1DC,EAAiB1U,EAAI2U,EAAe3U,KAClC2U,EAAiBD,EAEe,MAA5BN,EAAOC,oBACTD,EAAOC,kBAAoBK,EAAiB1U,KAG5CoU,EAAOR,YACPQ,EAAOnB,WAGXyB,EAAmBE,EAGrB,OAAOR,EAEP,SAASI,EAAYzH,GACnB,GAAIA,EAAI,CACN,IAAIgI,EAAWhI,EAAGH,kBACdoI,EAAQD,EAAS9C,GAAMlF,EAAGkF,GAC9B,MAAO,CACLwC,EAAGO,EACHH,EAAGG,EAAQD,EAASrH,GACpB1N,EAAG+M,EAAGK,oBAKZ,SAAS0H,EAAUG,EAAUC,GAC3B,OAAOD,EAASJ,GAAKK,GAAYD,EAASR,GAAKS,EAAWrB,IAI9D5C,EAAqBvS,UAAUqV,qBAAuB,SAAUoB,GAC9D,OAAK/W,KAAKoU,iBAKSpU,KAAKoI,kBAEX0G,WAAU,SAAUC,EAAOxE,GACtC,IAAIyM,EAAgBjI,EAAMC,kBAMN,MAAhBiI,GAAyC,MAAjBD,IAC1BC,EAAe1M,GAGbyM,IAAkBD,IACpB5V,EAAQoJ,MAGI,MAATpJ,EAAgBA,EAAQ8V,GArBtB,EAGT,IAAI9V,EAEA8V,GAmBNpE,EAAqB3S,KAAO,gBACrB2S,EAvYT,CAwYE/K,GClZK,SAAS4I,EAAQC,GACtBuG,YAAIC,GACJxG,EAAUC,uBAAuBa,GACjCd,EAAUE,sBAAsBgC,GCRnB,SAAuClC,GAOpDA,EAAUQ,eAAe,eAAgB,gBAAgB,SAAUf,EAAS1P,GAC1E,IAAIiR,EAAkBvB,EAAQuB,gBACX,MAAnBA,GAA2BjR,EAAQ6P,cAAc,CAC/CR,SAAU,SACVqH,QAAS,SACTC,MAAOjH,IACN,SAAU7H,GACXA,EAAYmJ,mBAAmBC,SDLnC2F,CAA8B3G,GENzB,SAASD,EAAQC,GACtBuG,YAAIC,GACJD,YAAIK","file":"static/js/4.d16627e7.chunk.js","sourcesContent":["\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// @ts-nocheck\nimport { getLayoutRect, box as layoutBox, positionElement } from '../../util/layout';\nimport * as formatUtil from '../../util/format';\nimport * as graphic from '../../util/graphic';\n/**\n * Layout list like component.\n * It will box layout each items in group of component and then position the whole group in the viewport\n * @param {module:zrender/group/Group} group\n * @param {module:echarts/model/Component} componentModel\n * @param {module:echarts/ExtensionAPI}\n */\n\nexport function layout(group, componentModel, api) {\n  var boxLayoutParams = componentModel.getBoxLayoutParams();\n  var padding = componentModel.get('padding');\n  var viewportSize = {\n    width: api.getWidth(),\n    height: api.getHeight()\n  };\n  var rect = getLayoutRect(boxLayoutParams, viewportSize, padding);\n  layoutBox(componentModel.get('orient'), group, componentModel.get('itemGap'), rect.width, rect.height);\n  positionElement(group, boxLayoutParams, viewportSize, padding);\n}\nexport function makeBackground(rect, componentModel) {\n  var padding = formatUtil.normalizeCssArray(componentModel.get('padding'));\n  var style = componentModel.getItemStyle(['color', 'opacity']);\n  style.fill = componentModel.get('backgroundColor');\n  rect = new graphic.Rect({\n    shape: {\n      x: rect.x - padding[3],\n      y: rect.y - padding[0],\n      width: rect.width + padding[1] + padding[3],\n      height: rect.height + padding[0] + padding[2],\n      r: componentModel.get('borderRadius')\n    },\n    style: style,\n    silent: true,\n    z2: -1\n  }); // FIXME\n  // `subPixelOptimizeRect` may bring some gap between edge of viewpart\n  // and background rect when setting like `left: 0`, `top: 0`.\n  // graphic.subPixelOptimizeRect(rect);\n\n  return rect;\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util';\nimport Model from '../../model/Model';\nimport { isNameSpecified } from '../../util/model';\nimport ComponentModel from '../../model/Component';\n\nvar getDefaultSelectorOptions = function (ecModel, type) {\n  if (type === 'all') {\n    return {\n      type: 'all',\n      title: ecModel.getLocaleModel().get(['legend', 'selector', 'all'])\n    };\n  } else if (type === 'inverse') {\n    return {\n      type: 'inverse',\n      title: ecModel.getLocaleModel().get(['legend', 'selector', 'inverse'])\n    };\n  }\n};\n\nvar LegendModel =\n/** @class */\nfunction (_super) {\n  __extends(LegendModel, _super);\n\n  function LegendModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = LegendModel.type;\n    _this.layoutMode = {\n      type: 'box',\n      // legend.width/height are maxWidth/maxHeight actually,\n      // whereas realy width/height is calculated by its content.\n      // (Setting {left: 10, right: 10} does not make sense).\n      // So consider the case:\n      // `setOption({legend: {left: 10});`\n      // then `setOption({legend: {right: 10});`\n      // The previous `left` should be cleared by setting `ignoreSize`.\n      ignoreSize: true\n    };\n    return _this;\n  }\n\n  LegendModel.prototype.init = function (option, parentModel, ecModel) {\n    this.mergeDefaultAndTheme(option, ecModel);\n    option.selected = option.selected || {};\n\n    this._updateSelector(option);\n  };\n\n  LegendModel.prototype.mergeOption = function (option, ecModel) {\n    _super.prototype.mergeOption.call(this, option, ecModel);\n\n    this._updateSelector(option);\n  };\n\n  LegendModel.prototype._updateSelector = function (option) {\n    var selector = option.selector;\n    var ecModel = this.ecModel;\n\n    if (selector === true) {\n      selector = option.selector = ['all', 'inverse'];\n    }\n\n    if (zrUtil.isArray(selector)) {\n      zrUtil.each(selector, function (item, index) {\n        zrUtil.isString(item) && (item = {\n          type: item\n        });\n        selector[index] = zrUtil.merge(item, getDefaultSelectorOptions(ecModel, item.type));\n      });\n    }\n  };\n\n  LegendModel.prototype.optionUpdated = function () {\n    this._updateData(this.ecModel);\n\n    var legendData = this._data; // If selectedMode is single, try to select one\n\n    if (legendData[0] && this.get('selectedMode') === 'single') {\n      var hasSelected = false; // If has any selected in option.selected\n\n      for (var i = 0; i < legendData.length; i++) {\n        var name_1 = legendData[i].get('name');\n\n        if (this.isSelected(name_1)) {\n          // Force to unselect others\n          this.select(name_1);\n          hasSelected = true;\n          break;\n        }\n      } // Try select the first if selectedMode is single\n\n\n      !hasSelected && this.select(legendData[0].get('name'));\n    }\n  };\n\n  LegendModel.prototype._updateData = function (ecModel) {\n    var potentialData = [];\n    var availableNames = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      var seriesName = seriesModel.name;\n      availableNames.push(seriesName);\n      var isPotential;\n\n      if (seriesModel.legendVisualProvider) {\n        var provider = seriesModel.legendVisualProvider;\n        var names = provider.getAllNames();\n\n        if (!ecModel.isSeriesFiltered(seriesModel)) {\n          availableNames = availableNames.concat(names);\n        }\n\n        if (names.length) {\n          potentialData = potentialData.concat(names);\n        } else {\n          isPotential = true;\n        }\n      } else {\n        isPotential = true;\n      }\n\n      if (isPotential && isNameSpecified(seriesModel)) {\n        potentialData.push(seriesModel.name);\n      }\n    });\n    /**\n     * @type {Array.<string>}\n     * @private\n     */\n\n    this._availableNames = availableNames; // If legend.data not specified in option, use availableNames as data,\n    // which is convinient for user preparing option.\n\n    var rawData = this.get('data') || potentialData;\n    var legendData = zrUtil.map(rawData, function (dataItem) {\n      // Can be string or number\n      if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n        dataItem = {\n          name: dataItem\n        };\n      }\n\n      return new Model(dataItem, this, this.ecModel);\n    }, this);\n    /**\n     * @type {Array.<module:echarts/model/Model>}\n     * @private\n     */\n\n    this._data = legendData;\n  };\n\n  LegendModel.prototype.getData = function () {\n    return this._data;\n  };\n\n  LegendModel.prototype.select = function (name) {\n    var selected = this.option.selected;\n    var selectedMode = this.get('selectedMode');\n\n    if (selectedMode === 'single') {\n      var data = this._data;\n      zrUtil.each(data, function (dataItem) {\n        selected[dataItem.get('name')] = false;\n      });\n    }\n\n    selected[name] = true;\n  };\n\n  LegendModel.prototype.unSelect = function (name) {\n    if (this.get('selectedMode') !== 'single') {\n      this.option.selected[name] = false;\n    }\n  };\n\n  LegendModel.prototype.toggleSelected = function (name) {\n    var selected = this.option.selected; // Default is true\n\n    if (!selected.hasOwnProperty(name)) {\n      selected[name] = true;\n    }\n\n    this[selected[name] ? 'unSelect' : 'select'](name);\n  };\n\n  LegendModel.prototype.allSelect = function () {\n    var data = this._data;\n    var selected = this.option.selected;\n    zrUtil.each(data, function (dataItem) {\n      selected[dataItem.get('name', true)] = true;\n    });\n  };\n\n  LegendModel.prototype.inverseSelect = function () {\n    var data = this._data;\n    var selected = this.option.selected;\n    zrUtil.each(data, function (dataItem) {\n      var name = dataItem.get('name', true); // Initially, default value is true\n\n      if (!selected.hasOwnProperty(name)) {\n        selected[name] = true;\n      }\n\n      selected[name] = !selected[name];\n    });\n  };\n\n  LegendModel.prototype.isSelected = function (name) {\n    var selected = this.option.selected;\n    return !(selected.hasOwnProperty(name) && !selected[name]) && zrUtil.indexOf(this._availableNames, name) >= 0;\n  };\n\n  LegendModel.prototype.getOrient = function () {\n    return this.get('orient') === 'vertical' ? {\n      index: 1,\n      name: 'vertical'\n    } : {\n      index: 0,\n      name: 'horizontal'\n    };\n  };\n\n  LegendModel.type = 'legend.plain';\n  LegendModel.dependencies = ['series'];\n  LegendModel.defaultOption = {\n    zlevel: 0,\n    z: 4,\n    show: true,\n    orient: 'horizontal',\n    left: 'center',\n    // right: 'center',\n    top: 0,\n    // bottom: null,\n    align: 'auto',\n    backgroundColor: 'rgba(0,0,0,0)',\n    borderColor: '#ccc',\n    borderRadius: 0,\n    borderWidth: 0,\n    padding: 5,\n    itemGap: 10,\n    itemWidth: 25,\n    itemHeight: 14,\n    symbolRotate: 'inherit',\n    inactiveColor: '#ccc',\n    inactiveBorderColor: '#ccc',\n    inactiveBorderWidth: 'auto',\n    itemStyle: {\n      color: 'inherit',\n      opacity: 'inherit',\n      decal: 'inherit',\n      shadowBlur: 0,\n      shadowColor: null,\n      shadowOffsetX: 0,\n      shadowOffsetY: 0,\n      borderColor: 'inherit',\n      borderWidth: 'auto',\n      borderCap: 'inherit',\n      borderJoin: 'inherit',\n      borderDashOffset: 'inherit',\n      borderMiterLimit: 'inherit'\n    },\n    lineStyle: {\n      width: 'auto',\n      color: 'inherit',\n      inactiveColor: '#ccc',\n      inactiveWidth: 2,\n      opacity: 'inherit',\n      type: 'inherit',\n      cap: 'inherit',\n      join: 'inherit',\n      dashOffset: 'inherit',\n      miterLimit: 'inherit',\n      shadowBlur: 0,\n      shadowColor: null,\n      shadowOffsetX: 0,\n      shadowOffsetY: 0\n    },\n    textStyle: {\n      color: '#333'\n    },\n    selectedMode: true,\n    selector: false,\n    selectorLabel: {\n      show: true,\n      borderRadius: 10,\n      padding: [3, 5, 3, 5],\n      fontSize: 12,\n      fontFamily: ' sans-serif',\n      color: '#666',\n      borderWidth: 1,\n      borderColor: '#666'\n    },\n    emphasis: {\n      selectorLabel: {\n        show: true,\n        color: '#eee',\n        backgroundColor: '#666'\n      }\n    },\n    selectorPosition: 'auto',\n    selectorItemGap: 7,\n    selectorButtonGap: 10,\n    tooltip: {\n      show: false\n    }\n  };\n  return LegendModel;\n}(ComponentModel);\n\nexport default LegendModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport * as zrUtil from 'zrender/lib/core/util';\nimport { parse, stringify } from 'zrender/lib/tool/color';\nimport * as graphic from '../../util/graphic';\nimport { enableHoverEmphasis } from '../../util/states';\nimport { setLabelStyle, createTextStyle } from '../../label/labelStyle';\nimport { makeBackground } from '../helper/listComponent';\nimport * as layoutUtil from '../../util/layout';\nimport ComponentView from '../../view/Component';\nimport { LINE_STYLE_KEY_MAP } from '../../model/mixin/lineStyle';\nimport { ITEM_STYLE_KEY_MAP } from '../../model/mixin/itemStyle';\nimport { createSymbol } from '../../util/symbol';\nvar curry = zrUtil.curry;\nvar each = zrUtil.each;\nvar Group = graphic.Group;\n\nvar LegendView =\n/** @class */\nfunction (_super) {\n  __extends(LegendView, _super);\n\n  function LegendView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = LegendView.type;\n    _this.newlineDisabled = false;\n    return _this;\n  }\n\n  LegendView.prototype.init = function () {\n    this.group.add(this._contentGroup = new Group());\n    this.group.add(this._selectorGroup = new Group());\n    this._isFirstRender = true;\n  };\n  /**\n   * @protected\n   */\n\n\n  LegendView.prototype.getContentGroup = function () {\n    return this._contentGroup;\n  };\n  /**\n   * @protected\n   */\n\n\n  LegendView.prototype.getSelectorGroup = function () {\n    return this._selectorGroup;\n  };\n  /**\n   * @override\n   */\n\n\n  LegendView.prototype.render = function (legendModel, ecModel, api) {\n    var isFirstRender = this._isFirstRender;\n    this._isFirstRender = false;\n    this.resetInner();\n\n    if (!legendModel.get('show', true)) {\n      return;\n    }\n\n    var itemAlign = legendModel.get('align');\n    var orient = legendModel.get('orient');\n\n    if (!itemAlign || itemAlign === 'auto') {\n      itemAlign = legendModel.get('left') === 'right' && orient === 'vertical' ? 'right' : 'left';\n    } // selector has been normalized to an array in model\n\n\n    var selector = legendModel.get('selector', true);\n    var selectorPosition = legendModel.get('selectorPosition', true);\n\n    if (selector && (!selectorPosition || selectorPosition === 'auto')) {\n      selectorPosition = orient === 'horizontal' ? 'end' : 'start';\n    }\n\n    this.renderInner(itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition); // Perform layout.\n\n    var positionInfo = legendModel.getBoxLayoutParams();\n    var viewportSize = {\n      width: api.getWidth(),\n      height: api.getHeight()\n    };\n    var padding = legendModel.get('padding');\n    var maxSize = layoutUtil.getLayoutRect(positionInfo, viewportSize, padding);\n    var mainRect = this.layoutInner(legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition); // Place mainGroup, based on the calculated `mainRect`.\n\n    var layoutRect = layoutUtil.getLayoutRect(zrUtil.defaults({\n      width: mainRect.width,\n      height: mainRect.height\n    }, positionInfo), viewportSize, padding);\n    this.group.x = layoutRect.x - mainRect.x;\n    this.group.y = layoutRect.y - mainRect.y;\n    this.group.markRedraw(); // Render background after group is layout.\n\n    this.group.add(this._backgroundEl = makeBackground(mainRect, legendModel));\n  };\n\n  LegendView.prototype.resetInner = function () {\n    this.getContentGroup().removeAll();\n    this._backgroundEl && this.group.remove(this._backgroundEl);\n    this.getSelectorGroup().removeAll();\n  };\n\n  LegendView.prototype.renderInner = function (itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition) {\n    var contentGroup = this.getContentGroup();\n    var legendDrawnMap = zrUtil.createHashMap();\n    var selectMode = legendModel.get('selectedMode');\n    var excludeSeriesId = [];\n    ecModel.eachRawSeries(function (seriesModel) {\n      !seriesModel.get('legendHoverLink') && excludeSeriesId.push(seriesModel.id);\n    });\n    each(legendModel.getData(), function (legendItemModel, dataIndex) {\n      var name = legendItemModel.get('name'); // Use empty string or \\n as a newline string\n\n      if (!this.newlineDisabled && (name === '' || name === '\\n')) {\n        var g = new Group(); // @ts-ignore\n\n        g.newline = true;\n        contentGroup.add(g);\n        return;\n      } // Representitive series.\n\n\n      var seriesModel = ecModel.getSeriesByName(name)[0];\n\n      if (legendDrawnMap.get(name)) {\n        // Have been drawed\n        return;\n      } // Legend to control series.\n\n\n      if (seriesModel) {\n        var data = seriesModel.getData();\n        var lineVisualStyle = data.getVisual('legendLineStyle') || {};\n        var legendIcon = data.getVisual('legendIcon');\n        /**\n         * `data.getVisual('style')` may be the color from the register\n         * in series. For example, for line series,\n         */\n\n        var style = data.getVisual('style');\n\n        var itemGroup = this._createItem(seriesModel, name, dataIndex, legendItemModel, legendModel, itemAlign, lineVisualStyle, style, legendIcon, selectMode);\n\n        itemGroup.on('click', curry(dispatchSelectAction, name, null, api, excludeSeriesId)).on('mouseover', curry(dispatchHighlightAction, seriesModel.name, null, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, seriesModel.name, null, api, excludeSeriesId));\n        legendDrawnMap.set(name, true);\n      } else {\n        // Legend to control data. In pie and funnel.\n        ecModel.eachRawSeries(function (seriesModel) {\n          // In case multiple series has same data name\n          if (legendDrawnMap.get(name)) {\n            return;\n          }\n\n          if (seriesModel.legendVisualProvider) {\n            var provider = seriesModel.legendVisualProvider;\n\n            if (!provider.containName(name)) {\n              return;\n            }\n\n            var idx = provider.indexOfName(name);\n            var style = provider.getItemVisual(idx, 'style');\n            var legendIcon = provider.getItemVisual(idx, 'legendIcon');\n            var colorArr = parse(style.fill); // Color may be set to transparent in visualMap when data is out of range.\n            // Do not show nothing.\n\n            if (colorArr && colorArr[3] === 0) {\n              colorArr[3] = 0.2; // TODO color is set to 0, 0, 0, 0. Should show correct RGBA\n\n              style.fill = stringify(colorArr, 'rgba');\n            }\n\n            var itemGroup = this._createItem(seriesModel, name, dataIndex, legendItemModel, legendModel, itemAlign, {}, style, legendIcon, selectMode); // FIXME: consider different series has items with the same name.\n\n\n            itemGroup.on('click', curry(dispatchSelectAction, null, name, api, excludeSeriesId)) // Should not specify the series name, consider legend controls\n            // more than one pie series.\n            .on('mouseover', curry(dispatchHighlightAction, null, name, api, excludeSeriesId)).on('mouseout', curry(dispatchDownplayAction, null, name, api, excludeSeriesId));\n            legendDrawnMap.set(name, true);\n          }\n        }, this);\n      }\n\n      if (process.env.NODE_ENV !== 'production') {\n        if (!legendDrawnMap.get(name)) {\n          console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n        }\n      }\n    }, this);\n\n    if (selector) {\n      this._createSelector(selector, legendModel, api, orient, selectorPosition);\n    }\n  };\n\n  LegendView.prototype._createSelector = function (selector, legendModel, api, orient, selectorPosition) {\n    var selectorGroup = this.getSelectorGroup();\n    each(selector, function createSelectorButton(selectorItem) {\n      var type = selectorItem.type;\n      var labelText = new graphic.Text({\n        style: {\n          x: 0,\n          y: 0,\n          align: 'center',\n          verticalAlign: 'middle'\n        },\n        onclick: function () {\n          api.dispatchAction({\n            type: type === 'all' ? 'legendAllSelect' : 'legendInverseSelect'\n          });\n        }\n      });\n      selectorGroup.add(labelText);\n      var labelModel = legendModel.getModel('selectorLabel');\n      var emphasisLabelModel = legendModel.getModel(['emphasis', 'selectorLabel']);\n      setLabelStyle(labelText, {\n        normal: labelModel,\n        emphasis: emphasisLabelModel\n      }, {\n        defaultText: selectorItem.title\n      });\n      enableHoverEmphasis(labelText);\n    });\n  };\n\n  LegendView.prototype._createItem = function (seriesModel, name, dataIndex, legendItemModel, legendModel, itemAlign, lineVisualStyle, itemVisualStyle, legendIcon, selectMode) {\n    var drawType = seriesModel.visualDrawType;\n    var itemWidth = legendModel.get('itemWidth');\n    var itemHeight = legendModel.get('itemHeight');\n    var isSelected = legendModel.isSelected(name);\n    var iconRotate = legendItemModel.get('symbolRotate');\n    var legendIconType = legendItemModel.get('icon');\n    legendIcon = legendIconType || legendIcon || 'roundRect';\n    var legendLineStyle = legendModel.getModel('lineStyle');\n    var style = getLegendStyle(legendIcon, legendItemModel, legendLineStyle, lineVisualStyle, itemVisualStyle, drawType, isSelected);\n    var itemGroup = new Group();\n    var textStyleModel = legendItemModel.getModel('textStyle');\n\n    if (typeof seriesModel.getLegendIcon === 'function' && (!legendIconType || legendIconType === 'inherit')) {\n      // Series has specific way to define legend icon\n      itemGroup.add(seriesModel.getLegendIcon({\n        itemWidth: itemWidth,\n        itemHeight: itemHeight,\n        icon: legendIcon,\n        iconRotate: iconRotate,\n        itemStyle: style.itemStyle,\n        lineStyle: style.lineStyle\n      }));\n    } else {\n      // Use default legend icon policy for most series\n      var rotate = legendIconType === 'inherit' && seriesModel.getData().getVisual('symbol') ? iconRotate === 'inherit' ? seriesModel.getData().getVisual('symbolRotate') : iconRotate : 0; // No rotation for no icon\n\n      itemGroup.add(getDefaultLegendIcon({\n        itemWidth: itemWidth,\n        itemHeight: itemHeight,\n        icon: legendIcon,\n        iconRotate: rotate,\n        itemStyle: style.itemStyle,\n        lineStyle: style.lineStyle\n      }));\n    }\n\n    var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n    var textAlign = itemAlign;\n    var formatter = legendModel.get('formatter');\n    var content = name;\n\n    if (typeof formatter === 'string' && formatter) {\n      content = formatter.replace('{name}', name != null ? name : '');\n    } else if (typeof formatter === 'function') {\n      content = formatter(name);\n    }\n\n    var inactiveColor = legendItemModel.get('inactiveColor');\n    itemGroup.add(new graphic.Text({\n      style: createTextStyle(textStyleModel, {\n        text: content,\n        x: textX,\n        y: itemHeight / 2,\n        fill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n        align: textAlign,\n        verticalAlign: 'middle'\n      })\n    })); // Add a invisible rect to increase the area of mouse hover\n\n    var hitRect = new graphic.Rect({\n      shape: itemGroup.getBoundingRect(),\n      invisible: true\n    });\n    var tooltipModel = legendItemModel.getModel('tooltip');\n\n    if (tooltipModel.get('show')) {\n      graphic.setTooltipConfig({\n        el: hitRect,\n        componentModel: legendModel,\n        itemName: name,\n        itemTooltipOption: tooltipModel.option\n      });\n    }\n\n    itemGroup.add(hitRect);\n    itemGroup.eachChild(function (child) {\n      child.silent = true;\n    });\n    hitRect.silent = !selectMode;\n    this.getContentGroup().add(itemGroup);\n    enableHoverEmphasis(itemGroup); // @ts-ignore\n\n    itemGroup.__legendDataIndex = dataIndex;\n    return itemGroup;\n  };\n\n  LegendView.prototype.layoutInner = function (legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition) {\n    var contentGroup = this.getContentGroup();\n    var selectorGroup = this.getSelectorGroup(); // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), maxSize.width, maxSize.height);\n    var contentRect = contentGroup.getBoundingRect();\n    var contentPos = [-contentRect.x, -contentRect.y];\n    selectorGroup.markRedraw();\n    contentGroup.markRedraw();\n\n    if (selector) {\n      // Place buttons in selectorGroup\n      layoutUtil.box( // Buttons in selectorGroup always layout horizontally\n      'horizontal', selectorGroup, legendModel.get('selectorItemGap', true));\n      var selectorRect = selectorGroup.getBoundingRect();\n      var selectorPos = [-selectorRect.x, -selectorRect.y];\n      var selectorButtonGap = legendModel.get('selectorButtonGap', true);\n      var orientIdx = legendModel.getOrient().index;\n      var wh = orientIdx === 0 ? 'width' : 'height';\n      var hw = orientIdx === 0 ? 'height' : 'width';\n      var yx = orientIdx === 0 ? 'y' : 'x';\n\n      if (selectorPosition === 'end') {\n        selectorPos[orientIdx] += contentRect[wh] + selectorButtonGap;\n      } else {\n        contentPos[orientIdx] += selectorRect[wh] + selectorButtonGap;\n      } //Always align selector to content as 'middle'\n\n\n      selectorPos[1 - orientIdx] += contentRect[hw] / 2 - selectorRect[hw] / 2;\n      selectorGroup.x = selectorPos[0];\n      selectorGroup.y = selectorPos[1];\n      contentGroup.x = contentPos[0];\n      contentGroup.y = contentPos[1];\n      var mainRect = {\n        x: 0,\n        y: 0\n      };\n      mainRect[wh] = contentRect[wh] + selectorButtonGap + selectorRect[wh];\n      mainRect[hw] = Math.max(contentRect[hw], selectorRect[hw]);\n      mainRect[yx] = Math.min(0, selectorRect[yx] + selectorPos[1 - orientIdx]);\n      return mainRect;\n    } else {\n      contentGroup.x = contentPos[0];\n      contentGroup.y = contentPos[1];\n      return this.group.getBoundingRect();\n    }\n  };\n  /**\n   * @protected\n   */\n\n\n  LegendView.prototype.remove = function () {\n    this.getContentGroup().removeAll();\n    this._isFirstRender = true;\n  };\n\n  LegendView.type = 'legend.plain';\n  return LegendView;\n}(ComponentView);\n\nfunction getLegendStyle(iconType, legendModel, legendLineStyle, lineVisualStyle, itemVisualStyle, drawType, isSelected) {\n  /**\n   * Use series style if is inherit;\n   * elsewise, use legend style\n   */\n  // itemStyle\n  var legendItemModel = legendModel.getModel('itemStyle');\n  var itemProperties = ITEM_STYLE_KEY_MAP.concat([['decal']]);\n  var itemStyle = {};\n\n  for (var i = 0; i < itemProperties.length; ++i) {\n    var propName = itemProperties[i][itemProperties[i].length - 1];\n    var visualName = itemProperties[i][0];\n    var value = legendItemModel.getShallow(propName);\n\n    if (value === 'inherit') {\n      switch (visualName) {\n        case 'fill':\n          /**\n           * Series with visualDrawType as 'stroke' should have\n           * series stroke as legend fill\n           */\n          itemStyle.fill = itemVisualStyle[drawType];\n          break;\n\n        case 'stroke':\n          /**\n           * icon type with \"emptyXXX\" should use fill color\n           * in visual style\n           */\n          itemStyle.stroke = itemVisualStyle[iconType.lastIndexOf('empty', 0) === 0 ? 'fill' : 'stroke'];\n          break;\n\n        case 'opacity':\n          /**\n           * Use lineStyle.opacity if drawType is stroke\n           */\n          itemStyle.opacity = (drawType === 'fill' ? itemVisualStyle : lineVisualStyle).opacity;\n          break;\n\n        default:\n          itemStyle[visualName] = itemVisualStyle[visualName];\n      }\n    } else if (value === 'auto' && visualName === 'lineWidth') {\n      // If lineStyle.width is 'auto', it is set to be 2 if series has border\n      itemStyle.lineWidth = itemVisualStyle.lineWidth > 0 ? 2 : 0;\n    } else {\n      itemStyle[visualName] = value;\n    }\n  } // lineStyle\n\n\n  var legendLineModel = legendModel.getModel('lineStyle');\n  var lineProperties = LINE_STYLE_KEY_MAP.concat([['inactiveColor'], ['inactiveWidth']]);\n  var lineStyle = {};\n\n  for (var i = 0; i < lineProperties.length; ++i) {\n    var propName = lineProperties[i][1];\n    var visualName = lineProperties[i][0];\n    var value = legendLineModel.getShallow(propName);\n\n    if (value === 'inherit') {\n      lineStyle[visualName] = lineVisualStyle[visualName];\n    } else if (value === 'auto' && visualName === 'lineWidth') {\n      // If lineStyle.width is 'auto', it is set to be 2 if series has border\n      lineStyle.lineWidth = lineVisualStyle.lineWidth > 0 ? 2 : 0;\n    } else {\n      lineStyle[visualName] = value;\n    }\n  } // Fix auto color to real color\n\n\n  itemStyle.fill === 'auto' && (itemStyle.fill = itemVisualStyle.fill);\n  itemStyle.stroke === 'auto' && (itemStyle.stroke = itemVisualStyle.fill);\n  lineStyle.stroke === 'auto' && (lineStyle.stroke = itemVisualStyle.fill);\n\n  if (!isSelected) {\n    var borderWidth = legendModel.get('inactiveBorderWidth');\n    /**\n     * Since stroke is set to be inactiveBorderColor, it may occur that\n     * there is no border in series but border in legend, so we need to\n     * use border only when series has border if is set to be auto\n     */\n\n    var visualHasBorder = itemStyle[iconType.indexOf('empty') > -1 ? 'fill' : 'stroke'];\n    itemStyle.lineWidth = borderWidth === 'auto' ? itemVisualStyle.lineWidth > 0 && visualHasBorder ? 2 : 0 : itemStyle.lineWidth;\n    itemStyle.fill = legendModel.get('inactiveColor');\n    itemStyle.stroke = legendModel.get('inactiveBorderColor');\n    lineStyle.stroke = legendLineStyle.get('inactiveColor');\n    lineStyle.lineWidth = legendLineStyle.get('inactiveWidth');\n  }\n\n  return {\n    itemStyle: itemStyle,\n    lineStyle: lineStyle\n  };\n}\n\nfunction getDefaultLegendIcon(opt) {\n  var symboType = opt.icon || 'roundRect';\n  var icon = createSymbol(symboType, 0, 0, opt.itemWidth, opt.itemHeight, opt.itemStyle.fill);\n  icon.setStyle(opt.itemStyle);\n  icon.rotation = (opt.iconRotate || 0) * Math.PI / 180;\n  icon.setOrigin([opt.itemWidth / 2, opt.itemHeight / 2]);\n\n  if (symboType.indexOf('empty') > -1) {\n    icon.style.stroke = icon.style.fill;\n    icon.style.fill = '#fff';\n    icon.style.lineWidth = 2;\n  }\n\n  return icon;\n}\n\nfunction dispatchSelectAction(seriesName, dataName, api, excludeSeriesId) {\n  // downplay before unselect\n  dispatchDownplayAction(seriesName, dataName, api, excludeSeriesId);\n  api.dispatchAction({\n    type: 'legendToggleSelect',\n    name: seriesName != null ? seriesName : dataName\n  }); // highlight after select\n  // TODO higlight immediately may cause animation loss.\n\n  dispatchHighlightAction(seriesName, dataName, api, excludeSeriesId);\n}\n\nfunction isUseHoverLayer(api) {\n  var list = api.getZr().storage.getDisplayList();\n  var emphasisState;\n  var i = 0;\n  var len = list.length;\n\n  while (i < len && !(emphasisState = list[i].states.emphasis)) {\n    i++;\n  }\n\n  return emphasisState && emphasisState.hoverLayer;\n}\n\nfunction dispatchHighlightAction(seriesName, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  if (!isUseHoverLayer(api)) {\n    api.dispatchAction({\n      type: 'highlight',\n      seriesName: seriesName,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nfunction dispatchDownplayAction(seriesName, dataName, api, excludeSeriesId) {\n  // If element hover will move to a hoverLayer.\n  if (!isUseHoverLayer(api)) {\n    api.dispatchAction({\n      type: 'downplay',\n      seriesName: seriesName,\n      name: dataName,\n      excludeSeriesId: excludeSeriesId\n    });\n  }\n}\n\nexport default LegendView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nexport default function legendFilter(ecModel) {\n  var legendModels = ecModel.findComponents({\n    mainType: 'legend'\n  });\n\n  if (legendModels && legendModels.length) {\n    ecModel.filterSeries(function (series) {\n      // If in any legend component the status is not selected.\n      // Because in legend series is assumed selected when it is not in the legend data.\n      for (var i = 0; i < legendModels.length; i++) {\n        if (!legendModels[i].isSelected(series.name)) {\n          return false;\n        }\n      }\n\n      return true;\n    });\n  }\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n// @ts-nocheck\nimport { curry, each } from 'zrender/lib/core/util';\n\nfunction legendSelectActionHandler(methodName, payload, ecModel) {\n  var selectedMap = {};\n  var isToggleSelect = methodName === 'toggleSelected';\n  var isSelected; // Update all legend components\n\n  ecModel.eachComponent('legend', function (legendModel) {\n    if (isToggleSelect && isSelected != null) {\n      // Force other legend has same selected status\n      // Or the first is toggled to true and other are toggled to false\n      // In the case one legend has some item unSelected in option. And if other legend\n      // doesn't has the item, they will assume it is selected.\n      legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n    } else if (methodName === 'allSelect' || methodName === 'inverseSelect') {\n      legendModel[methodName]();\n    } else {\n      legendModel[methodName](payload.name);\n      isSelected = legendModel.isSelected(payload.name);\n    }\n\n    var legendData = legendModel.getData();\n    each(legendData, function (model) {\n      var name = model.get('name'); // Wrap element\n\n      if (name === '\\n' || name === '') {\n        return;\n      }\n\n      var isItemSelected = legendModel.isSelected(name);\n\n      if (selectedMap.hasOwnProperty(name)) {\n        // Unselected if any legend is unselected\n        selectedMap[name] = selectedMap[name] && isItemSelected;\n      } else {\n        selectedMap[name] = isItemSelected;\n      }\n    });\n  }); // Return the event explicitly\n\n  return methodName === 'allSelect' || methodName === 'inverseSelect' ? {\n    selected: selectedMap\n  } : {\n    name: payload.name,\n    selected: selectedMap\n  };\n}\n\nexport function installLegendAction(registers) {\n  /**\n   * @event legendToggleSelect\n   * @type {Object}\n   * @property {string} type 'legendToggleSelect'\n   * @property {string} [from]\n   * @property {string} name Series name or data item name\n   */\n  registers.registerAction('legendToggleSelect', 'legendselectchanged', curry(legendSelectActionHandler, 'toggleSelected'));\n  registers.registerAction('legendAllSelect', 'legendselectall', curry(legendSelectActionHandler, 'allSelect'));\n  registers.registerAction('legendInverseSelect', 'legendinverseselect', curry(legendSelectActionHandler, 'inverseSelect'));\n  /**\n   * @event legendSelect\n   * @type {Object}\n   * @property {string} type 'legendSelect'\n   * @property {string} name Series name or data item name\n   */\n\n  registers.registerAction('legendSelect', 'legendselected', curry(legendSelectActionHandler, 'select'));\n  /**\n   * @event legendUnSelect\n   * @type {Object}\n   * @property {string} type 'legendUnSelect'\n   * @property {string} name Series name or data item name\n   */\n\n  registers.registerAction('legendUnSelect', 'legendunselected', curry(legendSelectActionHandler, 'unSelect'));\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport LegendModel from './LegendModel';\nimport LegendView from './LegendView';\nimport legendFilter from './legendFilter';\nimport { installLegendAction } from './legendAction';\nexport function install(registers) {\n  registers.registerComponentModel(LegendModel);\n  registers.registerComponentView(LegendView);\n  registers.registerProcessor(registers.PRIORITY.PROCESSOR.SERIES_FILTER, legendFilter);\n  registers.registerSubTypeDefaulter('legend', function () {\n    return 'plain';\n  });\n  installLegendAction(registers);\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\nimport LegendModel from './LegendModel';\nimport { mergeLayoutParam, getLayoutParams } from '../../util/layout';\nimport { inheritDefaultOption } from '../../util/component';\n\nvar ScrollableLegendModel =\n/** @class */\nfunction (_super) {\n  __extends(ScrollableLegendModel, _super);\n\n  function ScrollableLegendModel() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = ScrollableLegendModel.type;\n    return _this;\n  }\n  /**\n   * @param {number} scrollDataIndex\n   */\n\n\n  ScrollableLegendModel.prototype.setScrollDataIndex = function (scrollDataIndex) {\n    this.option.scrollDataIndex = scrollDataIndex;\n  };\n\n  ScrollableLegendModel.prototype.init = function (option, parentModel, ecModel) {\n    var inputPositionParams = getLayoutParams(option);\n\n    _super.prototype.init.call(this, option, parentModel, ecModel);\n\n    mergeAndNormalizeLayoutParams(this, option, inputPositionParams);\n  };\n  /**\n   * @override\n   */\n\n\n  ScrollableLegendModel.prototype.mergeOption = function (option, ecModel) {\n    _super.prototype.mergeOption.call(this, option, ecModel);\n\n    mergeAndNormalizeLayoutParams(this, this.option, option);\n  };\n\n  ScrollableLegendModel.type = 'legend.scroll';\n  ScrollableLegendModel.defaultOption = inheritDefaultOption(LegendModel.defaultOption, {\n    scrollDataIndex: 0,\n    pageButtonItemGap: 5,\n    pageButtonGap: null,\n    pageButtonPosition: 'end',\n    pageFormatter: '{current}/{total}',\n    pageIcons: {\n      horizontal: ['M0,0L12,-10L12,10z', 'M0,0L-12,-10L-12,10z'],\n      vertical: ['M0,0L20,0L10,-20z', 'M0,0L20,0L10,20z']\n    },\n    pageIconColor: '#2f4554',\n    pageIconInactiveColor: '#aaa',\n    pageIconSize: 15,\n    pageTextStyle: {\n      color: '#333'\n    },\n    animationDurationUpdate: 800\n  });\n  return ScrollableLegendModel;\n}(LegendModel);\n\n; // Do not `ignoreSize` to enable setting {left: 10, right: 10}.\n\nfunction mergeAndNormalizeLayoutParams(legendModel, target, raw) {\n  var orient = legendModel.getOrient();\n  var ignoreSize = [1, 1];\n  ignoreSize[orient.index] = 0;\n  mergeLayoutParam(target, raw, {\n    type: 'box',\n    ignoreSize: !!ignoreSize\n  });\n}\n\nexport default ScrollableLegendModel;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { __extends } from \"tslib\";\n/**\n * Separate legend and scrollable legend to reduce package size.\n */\n\nimport * as zrUtil from 'zrender/lib/core/util';\nimport * as graphic from '../../util/graphic';\nimport * as layoutUtil from '../../util/layout';\nimport LegendView from './LegendView';\nvar Group = graphic.Group;\nvar WH = ['width', 'height'];\nvar XY = ['x', 'y'];\n\nvar ScrollableLegendView =\n/** @class */\nfunction (_super) {\n  __extends(ScrollableLegendView, _super);\n\n  function ScrollableLegendView() {\n    var _this = _super !== null && _super.apply(this, arguments) || this;\n\n    _this.type = ScrollableLegendView.type;\n    _this.newlineDisabled = true;\n    _this._currentIndex = 0;\n    return _this;\n  }\n\n  ScrollableLegendView.prototype.init = function () {\n    _super.prototype.init.call(this);\n\n    this.group.add(this._containerGroup = new Group());\n\n    this._containerGroup.add(this.getContentGroup());\n\n    this.group.add(this._controllerGroup = new Group());\n  };\n  /**\n   * @override\n   */\n\n\n  ScrollableLegendView.prototype.resetInner = function () {\n    _super.prototype.resetInner.call(this);\n\n    this._controllerGroup.removeAll();\n\n    this._containerGroup.removeClipPath();\n\n    this._containerGroup.__rectSize = null;\n  };\n  /**\n   * @override\n   */\n\n\n  ScrollableLegendView.prototype.renderInner = function (itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition) {\n    var self = this; // Render content items.\n\n    _super.prototype.renderInner.call(this, itemAlign, legendModel, ecModel, api, selector, orient, selectorPosition);\n\n    var controllerGroup = this._controllerGroup; // FIXME: support be 'auto' adapt to size number text length,\n    // e.g., '3/12345' should not overlap with the control arrow button.\n\n    var pageIconSize = legendModel.get('pageIconSize', true);\n    var pageIconSizeArr = zrUtil.isArray(pageIconSize) ? pageIconSize : [pageIconSize, pageIconSize];\n    createPageButton('pagePrev', 0);\n    var pageTextStyleModel = legendModel.getModel('pageTextStyle');\n    controllerGroup.add(new graphic.Text({\n      name: 'pageText',\n      style: {\n        // Placeholder to calculate a proper layout.\n        text: 'xx/xx',\n        fill: pageTextStyleModel.getTextColor(),\n        font: pageTextStyleModel.getFont(),\n        verticalAlign: 'middle',\n        align: 'center'\n      },\n      silent: true\n    }));\n    createPageButton('pageNext', 1);\n\n    function createPageButton(name, iconIdx) {\n      var pageDataIndexName = name + 'DataIndex';\n      var icon = graphic.createIcon(legendModel.get('pageIcons', true)[legendModel.getOrient().name][iconIdx], {\n        // Buttons will be created in each render, so we do not need\n        // to worry about avoiding using legendModel kept in scope.\n        onclick: zrUtil.bind(self._pageGo, self, pageDataIndexName, legendModel, api)\n      }, {\n        x: -pageIconSizeArr[0] / 2,\n        y: -pageIconSizeArr[1] / 2,\n        width: pageIconSizeArr[0],\n        height: pageIconSizeArr[1]\n      });\n      icon.name = name;\n      controllerGroup.add(icon);\n    }\n  };\n  /**\n   * @override\n   */\n\n\n  ScrollableLegendView.prototype.layoutInner = function (legendModel, itemAlign, maxSize, isFirstRender, selector, selectorPosition) {\n    var selectorGroup = this.getSelectorGroup();\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var xy = XY[orientIdx];\n    var hw = WH[1 - orientIdx];\n    var yx = XY[1 - orientIdx];\n    selector && layoutUtil.box( // Buttons in selectorGroup always layout horizontally\n    'horizontal', selectorGroup, legendModel.get('selectorItemGap', true));\n    var selectorButtonGap = legendModel.get('selectorButtonGap', true);\n    var selectorRect = selectorGroup.getBoundingRect();\n    var selectorPos = [-selectorRect.x, -selectorRect.y];\n    var processMaxSize = zrUtil.clone(maxSize);\n    selector && (processMaxSize[wh] = maxSize[wh] - selectorRect[wh] - selectorButtonGap);\n\n    var mainRect = this._layoutContentAndController(legendModel, isFirstRender, processMaxSize, orientIdx, wh, hw, yx, xy);\n\n    if (selector) {\n      if (selectorPosition === 'end') {\n        selectorPos[orientIdx] += mainRect[wh] + selectorButtonGap;\n      } else {\n        var offset = selectorRect[wh] + selectorButtonGap;\n        selectorPos[orientIdx] -= offset;\n        mainRect[xy] -= offset;\n      }\n\n      mainRect[wh] += selectorRect[wh] + selectorButtonGap;\n      selectorPos[1 - orientIdx] += mainRect[yx] + mainRect[hw] / 2 - selectorRect[hw] / 2;\n      mainRect[hw] = Math.max(mainRect[hw], selectorRect[hw]);\n      mainRect[yx] = Math.min(mainRect[yx], selectorRect[yx] + selectorPos[1 - orientIdx]);\n      selectorGroup.x = selectorPos[0];\n      selectorGroup.y = selectorPos[1];\n      selectorGroup.markRedraw();\n    }\n\n    return mainRect;\n  };\n\n  ScrollableLegendView.prototype._layoutContentAndController = function (legendModel, isFirstRender, maxSize, orientIdx, wh, hw, yx, xy) {\n    var contentGroup = this.getContentGroup();\n    var containerGroup = this._containerGroup;\n    var controllerGroup = this._controllerGroup; // Place items in contentGroup.\n\n    layoutUtil.box(legendModel.get('orient'), contentGroup, legendModel.get('itemGap'), !orientIdx ? null : maxSize.width, orientIdx ? null : maxSize.height);\n    layoutUtil.box( // Buttons in controller are layout always horizontally.\n    'horizontal', controllerGroup, legendModel.get('pageButtonItemGap', true));\n    var contentRect = contentGroup.getBoundingRect();\n    var controllerRect = controllerGroup.getBoundingRect();\n    var showController = this._showController = contentRect[wh] > maxSize[wh]; // In case that the inner elements of contentGroup layout do not based on [0, 0]\n\n    var contentPos = [-contentRect.x, -contentRect.y]; // Remain contentPos when scroll animation perfroming.\n    // If first rendering, `contentGroup.position` is [0, 0], which\n    // does not make sense and may cause unexepcted animation if adopted.\n\n    if (!isFirstRender) {\n      contentPos[orientIdx] = contentGroup[xy];\n    } // Layout container group based on 0.\n\n\n    var containerPos = [0, 0];\n    var controllerPos = [-controllerRect.x, -controllerRect.y];\n    var pageButtonGap = zrUtil.retrieve2(legendModel.get('pageButtonGap', true), legendModel.get('itemGap', true)); // Place containerGroup and controllerGroup and contentGroup.\n\n    if (showController) {\n      var pageButtonPosition = legendModel.get('pageButtonPosition', true); // controller is on the right / bottom.\n\n      if (pageButtonPosition === 'end') {\n        controllerPos[orientIdx] += maxSize[wh] - controllerRect[wh];\n      } // controller is on the left / top.\n      else {\n          containerPos[orientIdx] += controllerRect[wh] + pageButtonGap;\n        }\n    } // Always align controller to content as 'middle'.\n\n\n    controllerPos[1 - orientIdx] += contentRect[hw] / 2 - controllerRect[hw] / 2;\n    contentGroup.setPosition(contentPos);\n    containerGroup.setPosition(containerPos);\n    controllerGroup.setPosition(controllerPos); // Calculate `mainRect` and set `clipPath`.\n    // mainRect should not be calculated by `this.group.getBoundingRect()`\n    // for sake of the overflow.\n\n    var mainRect = {\n      x: 0,\n      y: 0\n    }; // Consider content may be overflow (should be clipped).\n\n    mainRect[wh] = showController ? maxSize[wh] : contentRect[wh];\n    mainRect[hw] = Math.max(contentRect[hw], controllerRect[hw]); // `containerRect[yx] + containerPos[1 - orientIdx]` is 0.\n\n    mainRect[yx] = Math.min(0, controllerRect[yx] + controllerPos[1 - orientIdx]);\n    containerGroup.__rectSize = maxSize[wh];\n\n    if (showController) {\n      var clipShape = {\n        x: 0,\n        y: 0\n      };\n      clipShape[wh] = Math.max(maxSize[wh] - controllerRect[wh] - pageButtonGap, 0);\n      clipShape[hw] = mainRect[hw];\n      containerGroup.setClipPath(new graphic.Rect({\n        shape: clipShape\n      })); // Consider content may be larger than container, container rect\n      // can not be obtained from `containerGroup.getBoundingRect()`.\n\n      containerGroup.__rectSize = clipShape[wh];\n    } else {\n      // Do not remove or ignore controller. Keep them set as placeholders.\n      controllerGroup.eachChild(function (child) {\n        child.attr({\n          invisible: true,\n          silent: true\n        });\n      });\n    } // Content translate animation.\n\n\n    var pageInfo = this._getPageInfo(legendModel);\n\n    pageInfo.pageIndex != null && graphic.updateProps(contentGroup, {\n      x: pageInfo.contentPosition[0],\n      y: pageInfo.contentPosition[1]\n    }, // When switch from \"show controller\" to \"not show controller\", view should be\n    // updated immediately without animation, otherwise causes weird effect.\n    showController ? legendModel : null);\n\n    this._updatePageInfoView(legendModel, pageInfo);\n\n    return mainRect;\n  };\n\n  ScrollableLegendView.prototype._pageGo = function (to, legendModel, api) {\n    var scrollDataIndex = this._getPageInfo(legendModel)[to];\n\n    scrollDataIndex != null && api.dispatchAction({\n      type: 'legendScroll',\n      scrollDataIndex: scrollDataIndex,\n      legendId: legendModel.id\n    });\n  };\n\n  ScrollableLegendView.prototype._updatePageInfoView = function (legendModel, pageInfo) {\n    var controllerGroup = this._controllerGroup;\n    zrUtil.each(['pagePrev', 'pageNext'], function (name) {\n      var key = name + 'DataIndex';\n      var canJump = pageInfo[key] != null;\n      var icon = controllerGroup.childOfName(name);\n\n      if (icon) {\n        icon.setStyle('fill', canJump ? legendModel.get('pageIconColor', true) : legendModel.get('pageIconInactiveColor', true));\n        icon.cursor = canJump ? 'pointer' : 'default';\n      }\n    });\n    var pageText = controllerGroup.childOfName('pageText');\n    var pageFormatter = legendModel.get('pageFormatter');\n    var pageIndex = pageInfo.pageIndex;\n    var current = pageIndex != null ? pageIndex + 1 : 0;\n    var total = pageInfo.pageCount;\n    pageText && pageFormatter && pageText.setStyle('text', zrUtil.isString(pageFormatter) ? pageFormatter.replace('{current}', current == null ? '' : current + '').replace('{total}', total == null ? '' : total + '') : pageFormatter({\n      current: current,\n      total: total\n    }));\n  };\n  /**\n   *  contentPosition: Array.<number>, null when data item not found.\n   *  pageIndex: number, null when data item not found.\n   *  pageCount: number, always be a number, can be 0.\n   *  pagePrevDataIndex: number, null when no previous page.\n   *  pageNextDataIndex: number, null when no next page.\n   * }\n   */\n\n\n  ScrollableLegendView.prototype._getPageInfo = function (legendModel) {\n    var scrollDataIndex = legendModel.get('scrollDataIndex', true);\n    var contentGroup = this.getContentGroup();\n    var containerRectSize = this._containerGroup.__rectSize;\n    var orientIdx = legendModel.getOrient().index;\n    var wh = WH[orientIdx];\n    var xy = XY[orientIdx];\n\n    var targetItemIndex = this._findTargetItemIndex(scrollDataIndex);\n\n    var children = contentGroup.children();\n    var targetItem = children[targetItemIndex];\n    var itemCount = children.length;\n    var pCount = !itemCount ? 0 : 1;\n    var result = {\n      contentPosition: [contentGroup.x, contentGroup.y],\n      pageCount: pCount,\n      pageIndex: pCount - 1,\n      pagePrevDataIndex: null,\n      pageNextDataIndex: null\n    };\n\n    if (!targetItem) {\n      return result;\n    }\n\n    var targetItemInfo = getItemInfo(targetItem);\n    result.contentPosition[orientIdx] = -targetItemInfo.s; // Strategy:\n    // (1) Always align based on the left/top most item.\n    // (2) It is user-friendly that the last item shown in the\n    // current window is shown at the begining of next window.\n    // Otherwise if half of the last item is cut by the window,\n    // it will have no chance to display entirely.\n    // (3) Consider that item size probably be different, we\n    // have calculate pageIndex by size rather than item index,\n    // and we can not get page index directly by division.\n    // (4) The window is to narrow to contain more than\n    // one item, we should make sure that the page can be fliped.\n\n    for (var i = targetItemIndex + 1, winStartItemInfo = targetItemInfo, winEndItemInfo = targetItemInfo, currItemInfo = null; i <= itemCount; ++i) {\n      currItemInfo = getItemInfo(children[i]);\n\n      if ( // Half of the last item is out of the window.\n      !currItemInfo && winEndItemInfo.e > winStartItemInfo.s + containerRectSize || // If the current item does not intersect with the window, the new page\n      // can be started at the current item or the last item.\n      currItemInfo && !intersect(currItemInfo, winStartItemInfo.s)) {\n        if (winEndItemInfo.i > winStartItemInfo.i) {\n          winStartItemInfo = winEndItemInfo;\n        } else {\n          // e.g., when page size is smaller than item size.\n          winStartItemInfo = currItemInfo;\n        }\n\n        if (winStartItemInfo) {\n          if (result.pageNextDataIndex == null) {\n            result.pageNextDataIndex = winStartItemInfo.i;\n          }\n\n          ++result.pageCount;\n        }\n      }\n\n      winEndItemInfo = currItemInfo;\n    }\n\n    for (var i = targetItemIndex - 1, winStartItemInfo = targetItemInfo, winEndItemInfo = targetItemInfo, currItemInfo = null; i >= -1; --i) {\n      currItemInfo = getItemInfo(children[i]);\n\n      if ( // If the the end item does not intersect with the window started\n      // from the current item, a page can be settled.\n      (!currItemInfo || !intersect(winEndItemInfo, currItemInfo.s)) && // e.g., when page size is smaller than item size.\n      winStartItemInfo.i < winEndItemInfo.i) {\n        winEndItemInfo = winStartItemInfo;\n\n        if (result.pagePrevDataIndex == null) {\n          result.pagePrevDataIndex = winStartItemInfo.i;\n        }\n\n        ++result.pageCount;\n        ++result.pageIndex;\n      }\n\n      winStartItemInfo = currItemInfo;\n    }\n\n    return result;\n\n    function getItemInfo(el) {\n      if (el) {\n        var itemRect = el.getBoundingRect();\n        var start = itemRect[xy] + el[xy];\n        return {\n          s: start,\n          e: start + itemRect[wh],\n          i: el.__legendDataIndex\n        };\n      }\n    }\n\n    function intersect(itemInfo, winStart) {\n      return itemInfo.e >= winStart && itemInfo.s <= winStart + containerRectSize;\n    }\n  };\n\n  ScrollableLegendView.prototype._findTargetItemIndex = function (targetDataIndex) {\n    if (!this._showController) {\n      return 0;\n    }\n\n    var index;\n    var contentGroup = this.getContentGroup();\n    var defaultIndex;\n    contentGroup.eachChild(function (child, idx) {\n      var legendDataIdx = child.__legendDataIndex; // FIXME\n      // If the given targetDataIndex (from model) is illegal,\n      // we use defaultIndex. But the index on the legend model and\n      // action payload is still illegal. That case will not be\n      // changed until some scenario requires.\n\n      if (defaultIndex == null && legendDataIdx != null) {\n        defaultIndex = idx;\n      }\n\n      if (legendDataIdx === targetDataIndex) {\n        index = idx;\n      }\n    });\n    return index != null ? index : defaultIndex;\n  };\n\n  ScrollableLegendView.type = 'legend.scroll';\n  return ScrollableLegendView;\n}(LegendView);\n\nexport default ScrollableLegendView;","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { use } from '../../extension';\nimport { install as installLegendPlain } from './installLegendPlain';\nimport ScrollableLegendModel from './ScrollableLegendModel';\nimport ScrollableLegendView from './ScrollableLegendView';\nimport installScrollableLegendAction from './scrollableLegendAction';\nexport function install(registers) {\n  use(installLegendPlain);\n  registers.registerComponentModel(ScrollableLegendModel);\n  registers.registerComponentView(ScrollableLegendView);\n  installScrollableLegendAction(registers);\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nexport default function installScrollableLegendAction(registers) {\n  /**\n   * @event legendScroll\n   * @type {Object}\n   * @property {string} type 'legendScroll'\n   * @property {string} scrollDataIndex\n   */\n  registers.registerAction('legendScroll', 'legendscroll', function (payload, ecModel) {\n    var scrollDataIndex = payload.scrollDataIndex;\n    scrollDataIndex != null && ecModel.eachComponent({\n      mainType: 'legend',\n      subType: 'scroll',\n      query: payload\n    }, function (legendModel) {\n      legendModel.setScrollDataIndex(scrollDataIndex);\n    });\n  });\n}","\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\n\n\n/**\n * AUTO-GENERATED FILE. DO NOT MODIFY.\n */\n\n/*\n* Licensed to the Apache Software Foundation (ASF) under one\n* or more contributor license agreements.  See the NOTICE file\n* distributed with this work for additional information\n* regarding copyright ownership.  The ASF licenses this file\n* to you under the Apache License, Version 2.0 (the\n* \"License\"); you may not use this file except in compliance\n* with the License.  You may obtain a copy of the License at\n*\n*   http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing,\n* software distributed under the License is distributed on an\n* \"AS IS\" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\n* KIND, either express or implied.  See the License for the\n* specific language governing permissions and limitations\n* under the License.\n*/\nimport { use } from '../../extension';\nimport { install as installLegendPlain } from './installLegendPlain';\nimport { install as installLegendScroll } from './installLegendScroll';\nexport function install(registers) {\n  use(installLegendPlain);\n  use(installLegendScroll);\n}"],"sourceRoot":""}