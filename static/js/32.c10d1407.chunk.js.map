{"version":3,"sources":["../../src/createEChart.js","../../src/EChartLine.js"],"names":["echarts","applyVariable","options","props","ref","useRef","echartRef","useEffect","chart","onReady","onResize","createEChart"],"mappings":"krBAuBA,EAnBsBA,YAAD,OAAaC,aAAc,YAAC,MAAiC,EAAjC,QAAUC,EAAuB,EAAvBA,QAAYC,EAAW,iBACxEC,EAAMC,iBAAZ,MACMC,EAAYD,iBAAlB,MAUA,OATAE,qBAAU,WACN,IAAMC,EAAQR,OAAaI,EAA3B,SAIA,OAHAE,YACAE,eACAC,GAAWA,EAAXA,GACO,WACHD,eAEL,CARHD,IASO,uBAAgBG,SAAU,WAC7BJ,WAAqBA,UAArBA,WAEA,qCAAKF,IAAKA,GAHd,U,8LCLJJ,IAAY,CAAC,EAAD,kBAAZA,MASA,MAAeW,YAAf","file":"static/js/32.c10d1407.chunk.js","sourcesContent":["import React, {useEffect, useRef} from \"react\";\nimport ResizeObserver from \"rc-resize-observer\";\nimport {applyVariable} from '@kne/react-view-render';\n\nconst createEChart = (echarts) => applyVariable(({onReady, options, ...props}) => {\n    const ref = useRef(null);\n    const echartRef = useRef(null);\n    useEffect(() => {\n        const chart = echarts.init(ref.current);\n        echartRef.current = chart;\n        chart.setOption(options);\n        onReady && onReady(chart);\n        return () => {\n            chart.dispose();\n        };\n    }, [options]);\n    return <ResizeObserver onResize={() => {\n        echartRef.current && echartRef.current.resize();\n    }}>\n        <div ref={ref} {...props} />\n    </ResizeObserver>\n});\n\nexport default createEChart;","import * as echarts from 'echarts/core';\nimport {LineChart} from 'echarts/charts';\nimport {\n    TitleComponent,\n    TooltipComponent,\n    GridComponent,\n    LegendComponent\n} from 'echarts/components';\nimport {CanvasRenderer} from 'echarts/renderers';\nimport createEChart from \"./createEChart\";\n\necharts.use([\n    LegendComponent,\n    TitleComponent,\n    TooltipComponent,\n    GridComponent,\n    LineChart,\n    CanvasRenderer\n]);\n\nexport default createEChart(echarts);"],"sourceRoot":""}